{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormColorPicker/AppFormColorPicker.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport PropTypes from 'prop-types';\nimport { AppColorPicker } from '../AppColorPicker';\nexport var AppFormColorPicker = function AppFormColorPicker(_ref) {\n  var input = _ref.input,\n      className = _ref.className,\n      label = _ref.label,\n      required = _ref.required,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error;\n  return React.createElement(\"div\", {\n    className: \"app-form-control \".concat(className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(AppColorPicker, Object.assign({\n    label: label,\n    required: required\n  }, input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), touched && error ? React.createElement(FormHelperText, {\n    className: \"app-form-control__error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, error) : false);\n};\nAppFormColorPicker.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.bool\n};\nAppFormColorPicker.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AppFormColorPicker, \"AppFormColorPicker\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormColorPicker/AppFormColorPicker.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormColorPicker/AppFormColorPicker.js"],"names":["React","FormHelperText","PropTypes","AppColorPicker","AppFormColorPicker","input","className","label","required","meta","touched","error","propTypes","string","value","bool","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAM5B;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,uBADJC,IACI;AAAA,MADIC,OACJ,aADIA,OACJ;AAAA,MADaC,KACb,aADaA,KACb;AACJ,SACE;AAAK,IAAA,SAAS,6BAAsBL,SAAtB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD,gBACM;AACFC,IAAAA,KAAK,EAALA,KADE;AAEFC,IAAAA,QAAQ,EAARA;AAFE,GADN,EAKMH,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAQGK,OAAO,IAAIC,KAAX,GACC,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,yBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CADD,GAKC,KAbJ,CADF;AAkBD,CAzBM;AA2BPP,kBAAkB,CAACQ,SAAnB,GAA+B;AAC7BN,EAAAA,SAAS,EAAEJ,SAAS,CAACW,MADQ;AAE7BN,EAAAA,KAAK,EAAEL,SAAS,CAACW,MAFY;AAG7BC,EAAAA,KAAK,EAAEZ,SAAS,CAACa;AAHY,CAA/B;AAMAX,kBAAkB,CAACY,YAAnB,GAAkC,EAAlC;;;;;;;;;;0BAjCaZ,kB","sourcesContent":["import React from 'react';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport PropTypes from 'prop-types';\nimport { AppColorPicker } from '../AppColorPicker';\n\nexport const AppFormColorPicker = ({\n  input,\n  className,\n  label,\n  required,\n  meta: { touched, error },\n}) => {\n  return (\n    <div className={`app-form-control ${className}`}>\n      <AppColorPicker\n        {...{\n          label,\n          required,\n        }}\n        {...input}\n      />\n      {touched && error ? (\n        <FormHelperText className=\"app-form-control__error\">\n          {error}\n        </FormHelperText>\n      ) : (\n        false\n      )}\n    </div>\n  );\n};\n\nAppFormColorPicker.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.bool,\n};\n\nAppFormColorPicker.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}