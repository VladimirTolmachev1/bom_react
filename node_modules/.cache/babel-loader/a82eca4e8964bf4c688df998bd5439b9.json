{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/components/CategoriesList/CategoriesList.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport { autobind } from 'core-decorators';\nimport { AppPreloaderSmall } from '/components';\nimport { CategoryListItem } from '../';\nimport './Categories.scss';\nimport { HelperService } from '/services';\nexport var CategoriesList = (_class =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CategoriesList, _PureComponent);\n\n  function CategoriesList() {\n    _classCallCheck(this, CategoriesList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CategoriesList).apply(this, arguments));\n  }\n\n  _createClass(CategoriesList, [{\n    key: \"renderListItem\",\n    value: function renderListItem(_ref) {\n      var name = _ref.name,\n          id = _ref.id;\n      return React.createElement(CategoryListItem, Object.assign({\n        key: id\n      }, HelperService.pick(this.props, ['restaurant_name', 'category_name', 'restaurant_id', 'category_id', 'themeColor', 'mode', 'showConfirm', 'handleDeleteCategory', 'toggleCategoryModal', 'setCategoryModalMode', 'updateDishFilters', 'dishFilters', 'getDishes']), {\n        name: name,\n        id: id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          categories = _this$props.categories,\n          categoriesLoading = _this$props.categoriesLoading;\n      return React.createElement(List, {\n        className: 'categories-list',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, categoriesLoading && React.createElement(AppPreloaderSmall, {\n        className: 'categories-list__preloader',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), categories.map(this.renderListItem));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return CategoriesList;\n}(PureComponent), (_applyDecoratedDescriptor(_class.prototype, \"renderListItem\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"renderListItem\"), _class.prototype)), _class);\nCategoriesList.propTypes = {\n  updateDishFilters: PropTypes.func,\n  dishFilters: PropTypes.any,\n  categories: PropTypes.array,\n  restaurant_id: PropTypes.string,\n  showConfirm: PropTypes.func,\n  handleDeleteCategory: PropTypes.func,\n  categoriesLoading: PropTypes.bool,\n  toggleCategoryModal: PropTypes.func,\n  setCategoryModalMode: PropTypes.func,\n  mode: PropTypes.string\n};\nCategoriesList.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CategoriesList, \"CategoriesList\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/components/CategoriesList/CategoriesList.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/components/CategoriesList/CategoriesList.js"],"names":["React","PureComponent","PropTypes","List","autobind","AppPreloaderSmall","CategoryListItem","HelperService","CategoriesList","name","id","pick","props","categories","categoriesLoading","map","renderListItem","propTypes","updateDishFilters","func","dishFilters","any","array","restaurant_id","string","showConfirm","handleDeleteCategory","bool","toggleCategoryModal","setCategoryModalMode","mode","defaultProps"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,gBAAT,QAAiC,KAAjC;AACA,OAAO,mBAAP;AACA,SAAQC,aAAR,QAA4B,WAA5B;AAEA,WAAaC,cAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,yCAG+B;AAAA,UAAXC,IAAW,QAAXA,IAAW;AAAA,UAALC,EAAK,QAALA,EAAK;AACvB,aACI,oBAAC,gBAAD;AACI,QAAA,GAAG,EAAGA;AADV,SAEQH,aAAa,CAACI,IAAd,CAAmB,KAAKC,KAAxB,EAA+B,CAC/B,iBAD+B,EAE/B,eAF+B,EAG/B,eAH+B,EAI/B,aAJ+B,EAK/B,YAL+B,EAM/B,MAN+B,EAO/B,aAP+B,EAQ/B,sBAR+B,EAS/B,qBAT+B,EAU/B,sBAV+B,EAW/B,mBAX+B,EAY/B,aAZ+B,EAa/B,WAb+B,CAA/B,CAFR,EAkBS;AACDH,QAAAA,IAAI,EAAJA,IADC;AAEDC,QAAAA,EAAE,EAAFA;AAFC,OAlBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAyBH;AA7BL;AAAA;AAAA,6BA+Ba;AAAA,wBACmC,KAAKE,KADxC;AAAA,UACEC,UADF,eACEA,UADF;AAAA,UACcC,iBADd,eACcA,iBADd;AAGL,aACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAG,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMA,iBAAiB,IAAI,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAG,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD3B,EAEMD,UAAU,CAACE,GAAX,CAAe,KAAKC,cAApB,CAFN,CADJ;AAMH;AAxCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAoCf,aAApC,mEAEKG,QAFL;AA2CAI,cAAc,CAACS,SAAf,GAA2B;AACvBC,EAAAA,iBAAiB,EAAEhB,SAAS,CAACiB,IADN;AAEvBC,EAAAA,WAAW,EAAElB,SAAS,CAACmB,GAFA;AAGvBR,EAAAA,UAAU,EAAEX,SAAS,CAACoB,KAHC;AAIvBC,EAAAA,aAAa,EAAErB,SAAS,CAACsB,MAJF;AAKvBC,EAAAA,WAAW,EAAEvB,SAAS,CAACiB,IALA;AAMvBO,EAAAA,oBAAoB,EAAExB,SAAS,CAACiB,IANT;AAOvBL,EAAAA,iBAAiB,EAAEZ,SAAS,CAACyB,IAPN;AAQvBC,EAAAA,mBAAmB,EAAE1B,SAAS,CAACiB,IARR;AASvBU,EAAAA,oBAAoB,EAAE3B,SAAS,CAACiB,IATT;AAUvBW,EAAAA,IAAI,EAAE5B,SAAS,CAACsB;AAVO,CAA3B;AAaAhB,cAAc,CAACuB,YAAf,GAA8B,EAA9B;;;;;;;;;;;;0BAxDavB,c","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport List from '@material-ui/core/List';\nimport { autobind } from 'core-decorators';\nimport { AppPreloaderSmall } from '/components';\nimport { CategoryListItem } from '../';\nimport './Categories.scss';\nimport {HelperService} from '/services';\n\nexport class CategoriesList extends PureComponent {\n\n    @autobind\n    renderListItem({name, id}) {\n        return (\n            <CategoryListItem\n                key={ id }\n                {...HelperService.pick(this.props, [\n                    'restaurant_name',\n                    'category_name',\n                    'restaurant_id',\n                    'category_id',\n                    'themeColor',\n                    'mode',\n                    'showConfirm',\n                    'handleDeleteCategory',\n                    'toggleCategoryModal',\n                    'setCategoryModalMode',\n                    'updateDishFilters',\n                    'dishFilters',\n                    'getDishes'\n                ])}\n\n                { ...{\n                    name,\n                    id\n                } }\n            />\n        );\n    }\n\n    render() {\n        const {categories, categoriesLoading} = this.props;\n\n        return (\n            <List className={ 'categories-list' }>\n                { categoriesLoading && <AppPreloaderSmall className={ 'categories-list__preloader' }/> }\n                { categories.map(this.renderListItem) }\n            </List>\n        );\n    }\n}\n\nCategoriesList.propTypes = {\n    updateDishFilters: PropTypes.func,\n    dishFilters: PropTypes.any,\n    categories: PropTypes.array,\n    restaurant_id: PropTypes.string,\n    showConfirm: PropTypes.func,\n    handleDeleteCategory: PropTypes.func,\n    categoriesLoading: PropTypes.bool,\n    toggleCategoryModal: PropTypes.func,\n    setCategoryModalMode: PropTypes.func,\n    mode: PropTypes.string\n};\n\nCategoriesList.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}