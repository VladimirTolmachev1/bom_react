{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { createSelector } from 'reselect';\nimport { resource } from './cuisine.modules';\nexport var _cuisineAutocompleteSliceSelector = function _cuisineAutocompleteSliceSelector(state) {\n  return state[resource];\n};\nexport var cuisinesListSelector = createSelector([_cuisineAutocompleteSliceSelector], function (slice) {\n  return slice.data.map(function (_ref) {\n    var name = _ref.name,\n        value = _ref.value;\n    return {\n      label: name,\n      value: value\n    };\n  });\n});\nexport var cuisinesFiltersSelector = function cuisinesFiltersSelector(state) {\n  return _cuisineAutocompleteSliceSelector(state).filters;\n};\nexport var cuisinesLoadingSelector = function cuisinesLoadingSelector(state) {\n  return _cuisineAutocompleteSliceSelector(state).loading;\n};\nexport var cuisinesCountSelector = function cuisinesCountSelector(state) {\n  return _cuisineAutocompleteSliceSelector(state).count;\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_cuisineAutocompleteSliceSelector, \"_cuisineAutocompleteSliceSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/CuisineAutoComplete/modules/cuisine.selectors.js\");\n  reactHotLoader.register(cuisinesListSelector, \"cuisinesListSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/CuisineAutoComplete/modules/cuisine.selectors.js\");\n  reactHotLoader.register(cuisinesFiltersSelector, \"cuisinesFiltersSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/CuisineAutoComplete/modules/cuisine.selectors.js\");\n  reactHotLoader.register(cuisinesLoadingSelector, \"cuisinesLoadingSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/CuisineAutoComplete/modules/cuisine.selectors.js\");\n  reactHotLoader.register(cuisinesCountSelector, \"cuisinesCountSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/CuisineAutoComplete/modules/cuisine.selectors.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/CuisineAutoComplete/modules/cuisine.selectors.js"],"names":["createSelector","resource","_cuisineAutocompleteSliceSelector","state","cuisinesListSelector","slice","data","map","name","value","label","cuisinesFiltersSelector","filters","cuisinesLoadingSelector","loading","cuisinesCountSelector","count"],"mappings":";;;;;AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAO,IAAMC,iCAAiC,GAAG,SAApCA,iCAAoC,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACF,QAAD,CAAT;AAAA,CAA/C;AACP,OAAO,IAAMG,oBAAoB,GAAGJ,cAAc,CAChD,CAACE,iCAAD,CADgD,EAEhD,UAAAG,KAAK,EAAI;AACP,SAAOA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,QAASC,KAAT,QAASA,KAAT;AAAA,WAAsB;AAAEC,MAAAA,KAAK,EAAEF,IAAT;AAAeC,MAAAA,KAAK,EAALA;AAAf,KAAtB;AAAA,GAAf,CAAP;AACD,CAJ+C,CAA3C;AAOP,OAAO,IAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAR,KAAK;AAAA,SAC1CD,iCAAiC,CAACC,KAAD,CAAjC,CAAyCS,OADC;AAAA,CAArC;AAEP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAV,KAAK;AAAA,SAC1CD,iCAAiC,CAACC,KAAD,CAAjC,CAAyCW,OADC;AAAA,CAArC;AAEP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAZ,KAAK;AAAA,SACxCD,iCAAiC,CAACC,KAAD,CAAjC,CAAyCa,KADD;AAAA,CAAnC;;;;;;;;;;0BAZMd,iC;0BACAE,oB;0BAOAO,uB;0BAEAE,uB;0BAEAE,qB","sourcesContent":["import { createSelector } from 'reselect';\nimport { resource } from './cuisine.modules';\n\nexport const _cuisineAutocompleteSliceSelector = state => state[resource];\nexport const cuisinesListSelector = createSelector(\n  [_cuisineAutocompleteSliceSelector],\n  slice => {\n    return slice.data.map(({ name, value }) => ({ label: name, value }));\n  },\n);\n\nexport const cuisinesFiltersSelector = state =>\n  _cuisineAutocompleteSliceSelector(state).filters;\nexport const cuisinesLoadingSelector = state =>\n  _cuisineAutocompleteSliceSelector(state).loading;\nexport const cuisinesCountSelector = state =>\n  _cuisineAutocompleteSliceSelector(state).count;\n"]},"metadata":{},"sourceType":"module"}