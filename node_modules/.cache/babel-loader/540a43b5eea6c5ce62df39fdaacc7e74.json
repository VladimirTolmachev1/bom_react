{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/AppConfirm/AppConfirm.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport { autobind } from 'core-decorators';\nimport { confirmDataSelector, closeConfirm } from './modules';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    confirmData: confirmDataSelector(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  closeConfirm: closeConfirm\n};\nvar AppConfirm = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = (_class2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppConfirm, _Component);\n\n  function AppConfirm() {\n    _classCallCheck(this, AppConfirm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppConfirm).apply(this, arguments));\n  }\n\n  _createClass(AppConfirm, [{\n    key: \"onConfirmClicked\",\n    value: function onConfirmClicked() {\n      var _this$props = this.props,\n          _this$props$confirmDa = _this$props.confirmData,\n          onSuccess = _this$props$confirmDa.onSuccess,\n          data = _this$props$confirmDa.data,\n          closeConfirm = _this$props.closeConfirm;\n      onSuccess(data);\n      closeConfirm();\n    }\n  }, {\n    key: \"renderDialogActions\",\n    value: function renderDialogActions() {\n      var closeConfirm = this.props.closeConfirm;\n      return React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: closeConfirm,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.onConfirmClicked,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Ok\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$confirmDa2 = this.props.confirmData,\n          content = _this$props$confirmDa2.content,\n          open = _this$props$confirmDa2.open;\n      return React.createElement(Dialog, {\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        maxWidth: \"xs\",\n        open: open,\n        \"aria-labelledby\": \"confirmation-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, content), this.renderDialogActions());\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return AppConfirm;\n}(Component), (_applyDecoratedDescriptor(_class2.prototype, \"onConfirmClicked\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onConfirmClicked\"), _class2.prototype)), _class2)) || _class);\nexport { AppConfirm as default };\nAppConfirm.propTypes = {\n  confirmData: PropTypes.shape({\n    successCallback: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    content: PropTypes.any.isRequired,\n    header: PropTypes.any.isRequired\n  })\n};\nAppConfirm.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/AppConfirm/AppConfirm.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/AppConfirm/AppConfirm.js\");\n  reactHotLoader.register(AppConfirm, \"AppConfirm\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/AppConfirm/AppConfirm.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/AppConfirm/AppConfirm.js"],"names":["React","Component","connect","PropTypes","DialogContent","DialogActions","Dialog","Button","autobind","confirmDataSelector","closeConfirm","mapStateToProps","state","confirmData","mapDispatchToProps","AppConfirm","props","onSuccess","data","onConfirmClicked","content","open","renderDialogActions","propTypes","shape","successCallback","func","isRequired","bool","any","header","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,WAAlD;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,WAAW,EAAEJ,mBAAmB,CAACG,KAAD;AADA,GAAL;AAAA,CAA7B;;AAIA,IAAME,kBAAkB,GAAG;AACzBJ,EAAAA,YAAY,EAAZA;AADyB,CAA3B;IASMK,U,WAJLb,OAAO,CACNS,eADM,EAENG,kBAFM,C;;;;;;;;;;;;;uCAMa;AAAA,wBAIb,KAAKE,KAJQ;AAAA,8CAEfH,WAFe;AAAA,UAEAI,SAFA,yBAEAA,SAFA;AAAA,UAEWC,IAFX,yBAEWA,IAFX;AAAA,UAGfR,YAHe,eAGfA,YAHe;AAMjBO,MAAAA,SAAS,CAACC,IAAD,CAAT;AACAR,MAAAA,YAAY;AACb;;;0CAEqB;AAAA,UACZA,YADY,GACK,KAAKM,KADV,CACZN,YADY;AAGpB,aACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEA,YAAjB;AAA+B,QAAA,KAAK,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKS,gBAAtB;AAAwC,QAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF;AAUD;;;6BAEQ;AAAA,mCAGH,KAAKH,KAHF,CAELH,WAFK;AAAA,UAEUO,OAFV,0BAEUA,OAFV;AAAA,UAEmBC,IAFnB,0BAEmBA,IAFnB;AAKP,aACE,oBAAC,MAAD;AACE,QAAA,oBAAoB,MADtB;AAEE,QAAA,oBAAoB,MAFtB;AAGE,QAAA,QAAQ,EAAC,IAHX;AAIE,QAAA,IAAI,EAAEA,IAJR;AAKE,2BAAgB,2BALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgBD,OAAhB,CANF,EAOG,KAAKE,mBAAL,EAPH,CADF;AAWD;;;;;;;;;;;EA3CsBrB,S,sEACtBO,Q;SADGO,U;AA8CNA,UAAU,CAACQ,SAAX,GAAuB;AACrBV,EAAAA,WAAW,EAAEV,SAAS,CAACqB,KAAV,CAAgB;AAC3BC,IAAAA,eAAe,EAAEtB,SAAS,CAACuB,IAAV,CAAeC,UADL;AAE3BN,IAAAA,IAAI,EAAElB,SAAS,CAACyB,IAAV,CAAeD,UAFM;AAG3BP,IAAAA,OAAO,EAAEjB,SAAS,CAAC0B,GAAV,CAAcF,UAHI;AAI3BG,IAAAA,MAAM,EAAE3B,SAAS,CAAC0B,GAAV,CAAcF;AAJK,GAAhB;AADQ,CAAvB;AAQAZ,UAAU,CAACgB,YAAX,GAA0B,EAA1B;;;;;;;;;;0BAnEMpB,e;0BAIAG,kB;0BASAC,U","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport { autobind } from 'core-decorators';\n\nimport { confirmDataSelector, closeConfirm } from './modules';\n\nconst mapStateToProps = state => ({\n  confirmData: confirmDataSelector(state),\n});\n\nconst mapDispatchToProps = {\n  closeConfirm,\n};\n\nexport default\n@connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)\nclass AppConfirm extends Component {\n  @autobind\n  onConfirmClicked() {\n    const {\n      confirmData: { onSuccess, data },\n      closeConfirm,\n    } = this.props;\n\n    onSuccess(data);\n    closeConfirm();\n  }\n\n  renderDialogActions() {\n    const { closeConfirm } = this.props;\n\n    return (\n      <DialogActions>\n        <Button onClick={closeConfirm} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={this.onConfirmClicked} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    );\n  }\n\n  render() {\n    const {\n      confirmData: { content, open },\n    } = this.props;\n\n    return (\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        maxWidth=\"xs\"\n        open={open}\n        aria-labelledby=\"confirmation-dialog-title\">\n        <DialogContent>{content}</DialogContent>\n        {this.renderDialogActions()}\n      </Dialog>\n    );\n  }\n}\n\nAppConfirm.propTypes = {\n  confirmData: PropTypes.shape({\n    successCallback: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    content: PropTypes.any.isRequired,\n    header: PropTypes.any.isRequired,\n  }),\n};\nAppConfirm.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}