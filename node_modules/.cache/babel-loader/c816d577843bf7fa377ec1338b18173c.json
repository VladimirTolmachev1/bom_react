{"ast":null,"code":"import _regeneratorRuntime from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _dec2,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\nimport { createOrderCharge } from './../../modules';\nimport { StripeService } from '/services';\nimport { AppCleanHOC, AppFormTextField, AppFormMaskTextField, StripeCheckoutToggler, AppPreloaderSmall, AppFormSelect, AppSwitch } from '/components';\nimport { AddressFormFields } from './components';\nimport { checkoutValidations } from '../../modules/checkout.validations';\nimport { PHONE_MASK, PAY_NOW_OPTION, PAY_ON_PICKUP_OPTION, paymentOptionsByDeliveryMethod, PAY_ON_DELIVERY_OPTION, deliveryMethods, paymentMethods } from './../../../../constants';\nimport './PaymentDetailsTab.scss';\nvar ORDER_FORM = 'Order form';\nvar formFieldsSelector = formValueSelector(ORDER_FORM);\nvar FORM_FIELDS_TO_SELECT = ['name', 'email', 'phone', 'city', 'street_address', 'building', 'appartment', 'zipcode', 'payment_method'];\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    formValues: formFieldsSelector.apply(void 0, [state].concat(FORM_FIELDS_TO_SELECT))\n  };\n};\n\nvar PaymentDetailsTab = (_dec = connect(mapStateToProps, {\n  createOrderCharge: createOrderCharge\n}), _dec2 = reduxForm({\n  form: ORDER_FORM,\n  enableReinitialize: true,\n  validate: checkoutValidations\n}), _dec(_class = _dec2(_class = AppCleanHOC(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(PaymentDetailsTab, _PureComponent);\n\n  function PaymentDetailsTab() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PaymentDetailsTab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PaymentDetailsTab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      pickupByMySelf: false\n    };\n    return _this;\n  }\n\n  _createClass(PaymentDetailsTab, [{\n    key: \"getPaymentOptions\",\n    value: function getPaymentOptions() {\n      var delivery_method = this.props.restaurant.delivery_method;\n      var pickupByMySelf = this.state.pickupByMySelf;\n\n      if (delivery_method === deliveryMethods.PICKUP_AND_DELIVERY) {\n        return pickupByMySelf ? [PAY_NOW_OPTION, PAY_ON_PICKUP_OPTION] : [PAY_NOW_OPTION, PAY_ON_DELIVERY_OPTION];\n      }\n\n      return paymentOptionsByDeliveryMethod[delivery_method];\n    }\n  }, {\n    key: \"onSubmitClick\",\n    value: function onSubmitClick() {\n      var _this$props = this.props,\n          handleNextStep = _this$props.handleNextStep,\n          cleanOrder = _this$props.cleanOrder,\n          body = _this$props.formValues,\n          restaurant = _this$props.restaurant,\n          createOrder = _this$props.createOrder,\n          orderForPayment = _this$props.orderForPayment;\n      body.restaurant_id = restaurant.id;\n      body.order = orderForPayment;\n      var request = createOrder({\n        body: body\n      });\n      request.promise.then(function () {\n        cleanOrder();\n        handleNextStep();\n      });\n    }\n  }, {\n    key: \"handleStripeCheckout\",\n    value: function () {\n      var _handleStripeCheckout = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(token) {\n        var _this$props2, id, createOrderCharge, orderPriceInCoins;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props2 = this.props, id = _this$props2.restaurant.id, createOrderCharge = _this$props2.createOrderCharge, orderPriceInCoins = _this$props2.orderPriceInCoins;\n                _context.prev = 1;\n                _context.next = 4;\n                return createOrderCharge({\n                  body: {\n                    amount: orderPriceInCoins,\n                    restaurant_id: +id,\n                    token: token.id\n                  }\n                }).promise;\n\n              case 4:\n                this.onSubmitClick();\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      return function handleStripeCheckout(_x) {\n        return _handleStripeCheckout.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"onChangeZipCode\",\n    value: function onChangeZipCode(_ref) {\n      var _ref$value = _ref.value,\n          value = _ref$value === void 0 ? '' : _ref$value,\n          city = _ref.city,\n          state = _ref.state;\n      var change = this.props.change;\n      change('zipcode', value);\n      change('city', city);\n    }\n  }, {\n    key: \"isAddressRequired\",\n    value: function isAddressRequired() {\n      if (this.props.restaurant.delivery_method === deliveryMethods.PICKUP_ONLY || this.state.pickupByMySelf) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"handleDeliveryMethodChange\",\n    value: function handleDeliveryMethodChange(_ref2) {\n      var checked = _ref2.target.checked;\n      this.setState({\n        pickupByMySelf: checked\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          delivery_method = _this$props3.restaurant.delivery_method,\n          _this$props3$formValu = _this$props3.formValues,\n          zipcode = _this$props3$formValu.zipcode,\n          payment_method = _this$props3$formValu.payment_method,\n          loadingCreateOrder = _this$props3.loadingCreateOrder,\n          orderPriceInCoins = _this$props3.orderPriceInCoins,\n          invalid = _this$props3.invalid;\n      var pickupByMySelf = this.state.pickupByMySelf;\n      var isAddressRequired = this.isAddressRequired();\n      return React.createElement(\"div\", {\n        className: \"order-placement-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"order-placement-tab__user-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"order-placement__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, loadingCreateOrder && React.createElement(AppPreloaderSmall, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(Field, {\n        required: true,\n        multiline: true,\n        name: \"name\",\n        label: \"Your name\",\n        component: AppFormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(Field, {\n        required: true,\n        name: \"email\",\n        type: \"email\",\n        label: \"Your Email\",\n        component: AppFormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Field, {\n        required: true,\n        name: \"phone\",\n        label: \"Phone number\",\n        mask: PHONE_MASK,\n        component: AppFormMaskTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), delivery_method === deliveryMethods.PICKUP_AND_DELIVERY && React.createElement(AppSwitch, {\n        label: \"Choose delivery service\",\n        offCaption: \"Delivery\",\n        onCaption: \"Pickup\",\n        onChange: this.handleDeliveryMethodChange,\n        checked: pickupByMySelf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(Field, {\n        required: true,\n        withoutNone: true,\n        name: \"payment_method\",\n        label: \"Select payment method\",\n        options: this.getPaymentOptions(),\n        component: AppFormSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), isAddressRequired && React.createElement(AddressFormFields, {\n        zipcode: zipcode,\n        onChangeZipCode: this.onChangeZipCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), payment_method === paymentMethods.PAY_NOW ? React.createElement(StripeCheckoutToggler, {\n        togglerButtonProps: {\n          disabled: Boolean(loadingCreateOrder || invalid)\n        },\n        stripeKey: StripeService.getStripePublishKey(),\n        onToken: this.handleStripeCheckout,\n        priceInCoins: orderPriceInCoins,\n        title: 'Pay for order',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Pay and place\") : React.createElement(Button, {\n        onClick: this.onSubmitClick,\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: loadingCreateOrder || invalid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Place my order\"))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return PaymentDetailsTab;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onSubmitClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onSubmitClick\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"handleStripeCheckout\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"handleStripeCheckout\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onChangeZipCode\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onChangeZipCode\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"handleDeliveryMethodChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"handleDeliveryMethodChange\"), _class2.prototype)), _class2)) || _class) || _class) || _class);\nexport { PaymentDetailsTab as default };\nPaymentDetailsTab.propTypes = {\n  orderForPayment: PropTypes.array,\n  createOrder: PropTypes.func,\n  restaurant: PropTypes.object,\n  handleNextStep: PropTypes.func,\n  loadingCreateOrder: PropTypes.bool\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ORDER_FORM, \"ORDER_FORM\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js\");\n  reactHotLoader.register(formFieldsSelector, \"formFieldsSelector\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js\");\n  reactHotLoader.register(FORM_FIELDS_TO_SELECT, \"FORM_FIELDS_TO_SELECT\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js\");\n  reactHotLoader.register(PaymentDetailsTab, \"PaymentDetailsTab\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js"],"names":["React","PureComponent","PropTypes","Button","connect","autobind","Field","reduxForm","formValueSelector","createOrderCharge","StripeService","AppCleanHOC","AppFormTextField","AppFormMaskTextField","StripeCheckoutToggler","AppPreloaderSmall","AppFormSelect","AppSwitch","AddressFormFields","checkoutValidations","PHONE_MASK","PAY_NOW_OPTION","PAY_ON_PICKUP_OPTION","paymentOptionsByDeliveryMethod","PAY_ON_DELIVERY_OPTION","deliveryMethods","paymentMethods","ORDER_FORM","formFieldsSelector","FORM_FIELDS_TO_SELECT","mapStateToProps","state","formValues","PaymentDetailsTab","form","enableReinitialize","validate","pickupByMySelf","delivery_method","props","restaurant","PICKUP_AND_DELIVERY","handleNextStep","cleanOrder","body","createOrder","orderForPayment","restaurant_id","id","order","request","promise","then","token","orderPriceInCoins","amount","onSubmitClick","console","error","value","city","change","PICKUP_ONLY","checked","target","setState","zipcode","payment_method","loadingCreateOrder","invalid","isAddressRequired","handleDeliveryMethodChange","getPaymentOptions","onChangeZipCode","PAY_NOW","disabled","Boolean","getStripePublishKey","handleStripeCheckout","propTypes","array","func","object","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,iBAA3B,QAAoD,YAApD;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AAEA,SAASC,aAAT,QAA8B,WAA9B;AACA,SACIC,WADJ,EAEIC,gBAFJ,EAGIC,oBAHJ,EAIIC,qBAJJ,EAKIC,iBALJ,EAMIC,aANJ,EAOIC,SAPJ,QAQO,aARP;AASA,SAASC,iBAAT,QAAkC,cAAlC;AACA,SAASC,mBAAT,QAAoC,oCAApC;AACA,SACIC,UADJ,EAEIC,cAFJ,EAGIC,oBAHJ,EAIIC,8BAJJ,EAKIC,sBALJ,EAMIC,eANJ,EAOIC,cAPJ,QAQO,yBARP;AAUA,OAAO,0BAAP;AAGA,IAAMC,UAAU,GAAG,YAAnB;AACA,IAAMC,kBAAkB,GAAGpB,iBAAiB,CAACmB,UAAD,CAA5C;AAEA,IAAME,qBAAqB,GAAG,CAC1B,MAD0B,EAE1B,OAF0B,EAG1B,OAH0B,EAI1B,MAJ0B,EAK1B,gBAL0B,EAM1B,UAN0B,EAO1B,YAP0B,EAQ1B,SAR0B,EAS1B,gBAT0B,CAA9B;;AAYA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BC,IAAAA,UAAU,EAAEJ,kBAAkB,MAAlB,UAAoBG,KAApB,SAA8BF,qBAA9B;AADkB,GAAL;AAAA,CAA7B;;IAaMI,iB,WAPL7B,OAAO,CAAC0B,eAAD,EAAkB;AAAErB,EAAAA,iBAAiB,EAAjBA;AAAF,CAAlB,C,UACPF,SAAS,CAAC;AACP2B,EAAAA,IAAI,EAAEP,UADC;AAEPQ,EAAAA,kBAAkB,EAAE,IAFb;AAGPC,EAAAA,QAAQ,EAAEjB;AAHH,CAAD,C,+BAKTR,W;;;;;;;;;;;;;;;;;UAGGoB,K,GAAQ;AACJM,MAAAA,cAAc,EAAE;AADZ,K;;;;;;wCAIY;AAAA,UACMC,eADN,GAC4B,KAAKC,KADjC,CACRC,UADQ,CACMF,eADN;AAAA,UAERD,cAFQ,GAEW,KAAKN,KAFhB,CAERM,cAFQ;;AAIhB,UAAGC,eAAe,KAAKb,eAAe,CAACgB,mBAAvC,EAA6D;AACzD,eAAOJ,cAAc,GACf,CAAEhB,cAAF,EAAkBC,oBAAlB,CADe,GAEf,CAAED,cAAF,EAAkBG,sBAAlB,CAFN;AAGH;;AAED,aAAOD,8BAA8B,CAAEe,eAAF,CAArC;AACH;;;oCAGe;AAAA,wBAQR,KAAKC,KARG;AAAA,UAERG,cAFQ,eAERA,cAFQ;AAAA,UAGRC,UAHQ,eAGRA,UAHQ;AAAA,UAIIC,IAJJ,eAIRZ,UAJQ;AAAA,UAKRQ,UALQ,eAKRA,UALQ;AAAA,UAMRK,WANQ,eAMRA,WANQ;AAAA,UAORC,eAPQ,eAORA,eAPQ;AAUZF,MAAAA,IAAI,CAACG,aAAL,GAAqBP,UAAU,CAACQ,EAAhC;AACAJ,MAAAA,IAAI,CAACK,KAAL,GAAaH,eAAb;AAEA,UAAMI,OAAO,GAAGL,WAAW,CAAC;AAAED,QAAAA,IAAI,EAAJA;AAAF,OAAD,CAA3B;AAEAM,MAAAA,OAAO,CAACC,OAAR,CAAgBC,IAAhB,CAAqB,YAAM;AACvBT,QAAAA,UAAU;AACVD,QAAAA,cAAc;AACjB,OAHD;AAIH;;;;;;gDAG0BW,K;;;;;;;+BAKnB,KAAKd,K,EAHUS,E,gBAAfR,U,CAAeQ,E,EACfvC,iB,gBAAAA,iB,EACA6C,iB,gBAAAA,iB;;;uBAIM7C,iBAAiB,CAAC;AAAEmC,kBAAAA,IAAI,EAAE;AAC5BW,oBAAAA,MAAM,EAAED,iBADoB;AAE5BP,oBAAAA,aAAa,EAAE,CAACC,EAFY;AAG5BK,oBAAAA,KAAK,EAAEA,KAAK,CAACL;AAHe;AAAR,iBAAD,CAAjB,CAIFG,O;;;AAEJ,qBAAKK,aAAL;;;;;;;AAEAC,gBAAAA,OAAO,CAACC,KAAR;;;;;;;;;;;;;;;;0CAKqC;AAAA,4BAA3BC,KAA2B;AAAA,UAA3BA,KAA2B,2BAAnB,EAAmB;AAAA,UAAfC,IAAe,QAAfA,IAAe;AAAA,UAAT7B,KAAS,QAATA,KAAS;AAAA,UACjC8B,MADiC,GACtB,KAAKtB,KADiB,CACjCsB,MADiC;AAEzCA,MAAAA,MAAM,CAAC,SAAD,EAAYF,KAAZ,CAAN;AACAE,MAAAA,MAAM,CAAC,MAAD,EAASD,IAAT,CAAN;AACH;;;wCAEmB;AAChB,UACI,KAAKrB,KAAL,CAAWC,UAAX,CAAsBF,eAAtB,KAA0Cb,eAAe,CAACqC,WAA1D,IACA,KAAK/B,KAAL,CAAWM,cAFf,EAGI;AACA,eAAO,KAAP;AACH;;AAED,aAAO,IAAP;AACH;;;sDAGmD;AAAA,UAAb0B,OAAa,SAAvBC,MAAuB,CAAbD,OAAa;AAChD,WAAKE,QAAL,CAAc;AACV5B,QAAAA,cAAc,EAAE0B;AADN,OAAd;AAGH;;;6BAEQ;AAAA,yBAOD,KAAKxB,KAPJ;AAAA,UAEaD,eAFb,gBAEDE,UAFC,CAEaF,eAFb;AAAA,+CAGDN,UAHC;AAAA,UAGakC,OAHb,yBAGaA,OAHb;AAAA,UAGsBC,cAHtB,yBAGsBA,cAHtB;AAAA,UAIDC,kBAJC,gBAIDA,kBAJC;AAAA,UAKDd,iBALC,gBAKDA,iBALC;AAAA,UAMDe,OANC,gBAMDA,OANC;AAAA,UASGhC,cATH,GASsB,KAAKN,KAT3B,CASGM,cATH;AAWL,UAAMiC,iBAAiB,GAAG,KAAKA,iBAAL,EAA1B;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMF,kBAAkB,IAAI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD5B,EAEI,oBAAC,KAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,SAAS,MAFb;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,KAAK,EAAC,WAJV;AAKI,QAAA,SAAS,EAAGxD,gBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAUI,oBAAC,KAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,KAAK,EAAC,YAJV;AAKI,QAAA,SAAS,EAAGA,gBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,EAkBI,oBAAC,KAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,KAAK,EAAC,cAHV;AAII,QAAA,IAAI,EAAGQ,UAJX;AAKI,QAAA,SAAS,EAAGP,oBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,EA0BKyB,eAAe,KAAKb,eAAe,CAACgB,mBAApC,IACG,oBAAC,SAAD;AACI,QAAA,KAAK,EAAC,yBADV;AAEI,QAAA,UAAU,EAAC,UAFf;AAGI,QAAA,SAAS,EAAC,QAHd;AAII,QAAA,QAAQ,EAAG,KAAK8B,0BAJpB;AAKI,QAAA,OAAO,EAAGlC,cALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BR,EAoCI,oBAAC,KAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,WAAW,MAFf;AAGI,QAAA,IAAI,EAAC,gBAHT;AAII,QAAA,KAAK,EAAC,uBAJV;AAKI,QAAA,OAAO,EAAG,KAAKmC,iBAAL,EALd;AAMI,QAAA,SAAS,EAAGxD,aANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApCJ,EA6CKsD,iBAAiB,IACd,oBAAC,iBAAD;AACI,QAAA,OAAO,EAAGJ,OADd;AAEI,QAAA,eAAe,EAAG,KAAKO,eAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9CR,EAoDKN,cAAc,KAAKzC,cAAc,CAACgD,OAAlC,GAEO,oBAAC,qBAAD;AACI,QAAA,kBAAkB,EAAI;AAClBC,UAAAA,QAAQ,EAAEC,OAAO,CAAER,kBAAkB,IAAIC,OAAxB;AADC,SAD1B;AAII,QAAA,SAAS,EAAG3D,aAAa,CAACmE,mBAAd,EAJhB;AAKI,QAAA,OAAO,EAAG,KAAKC,oBALnB;AAMI,QAAA,YAAY,EAAGxB,iBANnB;AAOI,QAAA,KAAK,EAAE,eAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFP,GAgBO,oBAAC,MAAD;AACI,QAAA,OAAO,EAAG,KAAKE,aADnB;AAEI,QAAA,OAAO,EAAC,WAFZ;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,QAAQ,EAAGY,kBAAkB,IAAIC,OAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BApEZ,CADJ,CADJ,CADJ;AAqFH;;;;;;;;;;;EAzL2BpE,a,mEAmB3BI,Q,kKAsBAA,Q,oKAqBAA,Q,0KAkBAA,Q;SAhFC4B,iB;AA4LNA,iBAAiB,CAAC8C,SAAlB,GAA8B;AAC1BjC,EAAAA,eAAe,EAAE5C,SAAS,CAAC8E,KADD;AAE1BnC,EAAAA,WAAW,EAAE3C,SAAS,CAAC+E,IAFG;AAG1BzC,EAAAA,UAAU,EAAEtC,SAAS,CAACgF,MAHI;AAI1BxC,EAAAA,cAAc,EAAExC,SAAS,CAAC+E,IAJA;AAK1Bb,EAAAA,kBAAkB,EAAElE,SAAS,CAACiF;AALJ,CAA9B;;;;;;;;;;;;0BAxNMxD,U;0BACAC,kB;0BAEAC,qB;0BAYAC,e;0BAaAG,iB","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\nimport { createOrderCharge } from './../../modules'\n\nimport { StripeService } from '/services';\nimport { \n    AppCleanHOC,\n    AppFormTextField,\n    AppFormMaskTextField,\n    StripeCheckoutToggler,\n    AppPreloaderSmall,\n    AppFormSelect,\n    AppSwitch,\n} from '/components';\nimport { AddressFormFields } from './components';\nimport { checkoutValidations } from '../../modules/checkout.validations';\nimport {\n    PHONE_MASK,\n    PAY_NOW_OPTION,\n    PAY_ON_PICKUP_OPTION,\n    paymentOptionsByDeliveryMethod,\n    PAY_ON_DELIVERY_OPTION,\n    deliveryMethods,\n    paymentMethods,\n} from './../../../../constants';\n\nimport './PaymentDetailsTab.scss';\n\n\nconst ORDER_FORM = 'Order form';\nconst formFieldsSelector = formValueSelector(ORDER_FORM);\n\nconst FORM_FIELDS_TO_SELECT = [\n    'name',\n    'email',\n    'phone',\n    'city',\n    'street_address',\n    'building',\n    'appartment',\n    'zipcode',\n    'payment_method',\n]\n\nconst mapStateToProps = state => ({\n    formValues: formFieldsSelector( state, ...FORM_FIELDS_TO_SELECT)\n});\n\n\nexport default\n@connect(mapStateToProps, { createOrderCharge })\n@reduxForm({\n    form: ORDER_FORM,\n    enableReinitialize: true,\n    validate: checkoutValidations\n})\n@AppCleanHOC\nclass PaymentDetailsTab extends PureComponent {\n\n    state = { \n        pickupByMySelf: false,\n    }\n\n    getPaymentOptions() {\n        const { restaurant: { delivery_method } } = this.props;\n        const { pickupByMySelf } = this.state;\n\n        if(delivery_method === deliveryMethods.PICKUP_AND_DELIVERY ) {\n            return pickupByMySelf \n                ? [ PAY_NOW_OPTION, PAY_ON_PICKUP_OPTION ]\n                : [ PAY_NOW_OPTION, PAY_ON_DELIVERY_OPTION ]\n        }\n\n        return paymentOptionsByDeliveryMethod[ delivery_method ]\n    }\n\n    @autobind\n    onSubmitClick() {\n        const {\n            handleNextStep,\n            cleanOrder,\n            formValues: body,\n            restaurant,\n            createOrder,\n            orderForPayment,\n        } = this.props;\n\n        body.restaurant_id = restaurant.id;\n        body.order = orderForPayment;\n\n        const request = createOrder({ body });\n\n        request.promise.then(() => {\n            cleanOrder();\n            handleNextStep();\n        });\n    };\n\n    @autobind\n    async handleStripeCheckout(token) {\n        const { \n            restaurant : { id },\n            createOrderCharge,\n            orderPriceInCoins,\n        } = this.props;\n\n        try {\n            await createOrderCharge({ body: {\n                amount: orderPriceInCoins,\n                restaurant_id: +id,\n                token: token.id,\n            }}).promise;\n\n            this.onSubmitClick()\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    @autobind\n    onChangeZipCode({ value = '', city, state }) {\n        const { change } = this.props;\n        change('zipcode', value);\n        change('city', city);\n    };\n\n    isAddressRequired() {\n        if (\n            this.props.restaurant.delivery_method === deliveryMethods.PICKUP_ONLY ||\n            this.state.pickupByMySelf\n          ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    @autobind\n    handleDeliveryMethodChange({ target: { checked } }) {\n        this.setState({\n            pickupByMySelf: checked\n        })\n    }\n\n    render() {\n        const {\n            restaurant: { delivery_method },\n            formValues: { zipcode, payment_method },\n            loadingCreateOrder,\n            orderPriceInCoins,\n            invalid\n        } = this.props;\n\n        const { pickupByMySelf } = this.state;\n\n        const isAddressRequired = this.isAddressRequired();\n\n        return (\n            <div className='order-placement-tab'>\n                <div className='order-placement-tab__user-form'>\n                    <form className='order-placement__form'>\n                        { loadingCreateOrder && <AppPreloaderSmall /> }\n                        <Field\n                            required\n                            multiline\n                            name='name'\n                            label='Your name'\n                            component={ AppFormTextField }\n                        />\n\n                        <Field\n                            required\n                            name='email'\n                            type='email'\n                            label='Your Email'\n                            component={ AppFormTextField }\n                        />\n\n                        <Field\n                            required\n                            name='phone'\n                            label='Phone number'\n                            mask={ PHONE_MASK }\n                            component={ AppFormMaskTextField } \n                        />\n\n                        {delivery_method === deliveryMethods.PICKUP_AND_DELIVERY && (\n                            <AppSwitch \n                                label=\"Choose delivery service\"\n                                offCaption=\"Delivery\"\n                                onCaption=\"Pickup\"\n                                onChange={ this.handleDeliveryMethodChange }\n                                checked={ pickupByMySelf }     \n                            />\n                        )}\n\n                        <Field\n                            required\n                            withoutNone\n                            name='payment_method'\n                            label='Select payment method'\n                            options={ this.getPaymentOptions() }\n                            component={ AppFormSelect }\n                        />\n\n                        {isAddressRequired && (\n                            <AddressFormFields \n                                zipcode={ zipcode }\n                                onChangeZipCode={ this.onChangeZipCode }\n                            />\n                        )}\n\n                        {payment_method === paymentMethods.PAY_NOW\n                            ? (\n                                <StripeCheckoutToggler\n                                    togglerButtonProps = {{\n                                        disabled: Boolean( loadingCreateOrder || invalid )\n                                    }}\n                                    stripeKey={ StripeService.getStripePublishKey() }\n                                    onToken={ this.handleStripeCheckout }\n                                    priceInCoins={ orderPriceInCoins }\n                                    title={'Pay for order'}\n                                    \n                                >\n                                    Pay and place\n                                </StripeCheckoutToggler>\n                              )\n                            : (\n                                <Button\n                                    onClick={ this.onSubmitClick }\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={ loadingCreateOrder || invalid }\n                                >\n                                    Place my order\n                                </Button>\n                            )\n                        }\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nPaymentDetailsTab.propTypes = {\n    orderForPayment: PropTypes.array,\n    createOrder: PropTypes.func,\n    restaurant: PropTypes.object,\n    handleNextStep: PropTypes.func,\n    loadingCreateOrder: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}