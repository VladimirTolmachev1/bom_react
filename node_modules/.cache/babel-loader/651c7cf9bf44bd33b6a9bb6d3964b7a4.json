{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/components/CategoriesList/CategoriesList.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport List from '@material-ui/core/List';\nimport { autobind } from 'core-decorators';\nimport { AppPreloaderSmall } from '../../../../components';\nimport { CategoryListItem } from '../CategoryListItem';\nimport './Categories.scss';\nimport { HelperService } from '../../../../services';\nimport { CATEGORIES_DROPPABLE } from '../../../../modules/dnd';\nexport var CategoriesList = (_class =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CategoriesList, _PureComponent);\n\n  function CategoriesList() {\n    _classCallCheck(this, CategoriesList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CategoriesList).apply(this, arguments));\n  }\n\n  _createClass(CategoriesList, [{\n    key: \"renderListItem\",\n    value: function renderListItem(_ref, index) {\n      var _this = this;\n\n      var name = _ref.name,\n          id = _ref.id;\n      var _this$props = this.props,\n          isDndMode = _this$props.isDndMode,\n          handleEditCategoryClick = _this$props.handleEditCategoryClick;\n      return React.createElement(Draggable, {\n        key: id,\n        draggableId: id,\n        index: index,\n        isDragDisabled: !isDndMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, function (provided) {\n        return React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }), React.createElement(CategoryListItem, Object.assign({\n          key: id,\n          id: id,\n          name: name,\n          handleEditCategoryClick: handleEditCategoryClick\n        }, HelperService.pick(_this.props, ['restaurant_name', 'category_name', 'restaurant_id', 'category_id', 'themeColor', 'mode', 'showConfirm', 'handleDeleteCategory', 'toggleCategoryModal', 'setCategoryModalMode', 'updateDishFilters', 'dishFilters', 'getDishes', 'cleanDishList']), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        })));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          categories = _this$props2.categories,\n          categoriesLoading = _this$props2.categoriesLoading,\n          isDndMode = _this$props2.isDndMode;\n      return React.createElement(Droppable, {\n        droppableId: CATEGORIES_DROPPABLE,\n        isDropDisabled: !isDndMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, function (provided) {\n        return React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n          ref: provided.innerRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(List, {\n          className: \"categories-list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, categoriesLoading && React.createElement(AppPreloaderSmall, {\n          className: \"categories-list__preloader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), categories.map(_this2.renderListItem), provided.placeholder));\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return CategoriesList;\n}(PureComponent), (_applyDecoratedDescriptor(_class.prototype, \"renderListItem\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"renderListItem\"), _class.prototype)), _class);\nCategoriesList.propTypes = {\n  updateDishFilters: PropTypes.func,\n  dishFilters: PropTypes.any,\n  categories: PropTypes.array,\n  restaurant_id: PropTypes.string,\n  showConfirm: PropTypes.func,\n  handleDeleteCategory: PropTypes.func,\n  categoriesLoading: PropTypes.bool,\n  toggleCategoryModal: PropTypes.func,\n  setCategoryModalMode: PropTypes.func,\n  mode: PropTypes.string\n};\nCategoriesList.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CategoriesList, \"CategoriesList\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/components/CategoriesList/CategoriesList.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/components/CategoriesList/CategoriesList.js"],"names":["React","PureComponent","PropTypes","Droppable","Draggable","List","autobind","AppPreloaderSmall","CategoryListItem","HelperService","CATEGORIES_DROPPABLE","CategoriesList","index","name","id","props","isDndMode","handleEditCategoryClick","provided","innerRef","draggableProps","dragHandleProps","pick","categories","categoriesLoading","droppableProps","map","renderListItem","placeholder","propTypes","updateDishFilters","func","dishFilters","any","array","restaurant_id","string","showConfirm","handleDeleteCategory","bool","toggleCategoryModal","setCategoryModalMode","mode","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport List from '@material-ui/core/List';\nimport { autobind } from 'core-decorators';\nimport { AppPreloaderSmall } from '../../../../components';\nimport { CategoryListItem } from '../CategoryListItem';\nimport './Categories.scss';\nimport { HelperService } from '../../../../services';\nimport { CATEGORIES_DROPPABLE } from '../../../../modules/dnd';\n\nexport class CategoriesList extends PureComponent {\n  @autobind\n  renderListItem({ name, id }, index) {\n    const { isDndMode, handleEditCategoryClick } = this.props;\n    return (\n      <Draggable\n        key={id}\n        draggableId={id}\n        index={index}\n        isDragDisabled={!isDndMode}>\n        {provided => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}>\n            <CategoryListItem\n              key={id}\n              id={id}\n              name={name}\n              handleEditCategoryClick={handleEditCategoryClick}\n              {...HelperService.pick(this.props, [\n                'restaurant_name',\n                'category_name',\n                'restaurant_id',\n                'category_id',\n                'themeColor',\n                'mode',\n                'showConfirm',\n                'handleDeleteCategory',\n                'toggleCategoryModal',\n                'setCategoryModalMode',\n                'updateDishFilters',\n                'dishFilters',\n                'getDishes',\n                'cleanDishList',\n              ])}\n            />\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n\n  render() {\n    const { categories, categoriesLoading, isDndMode } = this.props;\n\n    return (\n      <Droppable droppableId={CATEGORIES_DROPPABLE} isDropDisabled={!isDndMode}>\n        {provided => (\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            <List className=\"categories-list\">\n              {categoriesLoading && (\n                <AppPreloaderSmall className=\"categories-list__preloader\" />\n              )}\n              {categories.map(this.renderListItem)}\n              {provided.placeholder}\n            </List>\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n\nCategoriesList.propTypes = {\n  updateDishFilters: PropTypes.func,\n  dishFilters: PropTypes.any,\n  categories: PropTypes.array,\n  restaurant_id: PropTypes.string,\n  showConfirm: PropTypes.func,\n  handleDeleteCategory: PropTypes.func,\n  categoriesLoading: PropTypes.bool,\n  toggleCategoryModal: PropTypes.func,\n  setCategoryModalMode: PropTypes.func,\n  mode: PropTypes.string,\n};\n\nCategoriesList.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}