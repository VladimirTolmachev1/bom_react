{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/components/ExtrasSelect/ExtrasSelect.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AppSelect } from '/components';\nimport './ExtrasSelect.scss';\nexport var ExtrasSelect =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExtrasSelect, _Component);\n\n  function ExtrasSelect() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ExtrasSelect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ExtrasSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChangeExtrasSelect = function (_ref) {\n      var extraId = _ref.extras;\n      var _this$props = _this.props,\n          setDishExtra = _this$props.setDishExtra,\n          dishUUID = _this$props.dishUUID;\n      setDishExtra({\n        extraId: extraId,\n        dishUUID: dishUUID\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ExtrasSelect, [{\n    key: \"mapOptions\",\n    value: function mapOptions() {\n      var _this$props2 = this.props,\n          options = _this$props2.options,\n          excludedIds = _this$props2.excludedIds;\n      return options.filter(function (option) {\n        return !excludedIds.find(function (id) {\n          return id === option.id;\n        });\n      }).map(function (_ref2) {\n        var id = _ref2.id,\n            name = _ref2.name;\n        return {\n          value: id,\n          name: name\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AppSelect, {\n        className: 'extras-select',\n        name: \"extras\",\n        value: \"\",\n        withoutNone: true,\n        label: 'Select extras',\n        options: this.mapOptions(),\n        onChange: this.onChangeExtrasSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return ExtrasSelect;\n}(Component);\nExtrasSelect.propTypes = {\n  dishUUID: PropTypes.string,\n  setDishExtra: PropTypes.func,\n  excludedIds: PropTypes.array,\n  options: PropTypes.array\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ExtrasSelect, \"ExtrasSelect\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/components/ExtrasSelect/ExtrasSelect.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/components/ExtrasSelect/ExtrasSelect.js"],"names":["React","Component","PropTypes","AppSelect","ExtrasSelect","onChangeExtrasSelect","extraId","extras","props","setDishExtra","dishUUID","options","excludedIds","filter","option","find","id","map","name","value","mapOptions","propTypes","string","func","array"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,qBAAP;AAEA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UACIC,oBADJ,GAC2B,gBAAyB;AAAA,UAAdC,OAAc,QAAtBC,MAAsB;AAAA,wBACT,MAAKC,KADI;AAAA,UACpCC,YADoC,eACpCA,YADoC;AAAA,UACtBC,QADsB,eACtBA,QADsB;AAG5CD,MAAAA,YAAY,CAAC;AAAEH,QAAAA,OAAO,EAAPA,OAAF;AAAWI,QAAAA,QAAQ,EAARA;AAAX,OAAD,CAAZ;AACH,KALL;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAOiB;AAAA,yBACwB,KAAKF,KAD7B;AAAA,UACDG,OADC,gBACDA,OADC;AAAA,UACQC,WADR,gBACQA,WADR;AAGT,aAAOD,OAAO,CACTE,MADE,CACK,UAAAC,MAAM;AAAA,eAAI,CAACF,WAAW,CAACG,IAAZ,CAAiB,UAAAC,EAAE;AAAA,iBAAIA,EAAE,KAAKF,MAAM,CAACE,EAAlB;AAAA,SAAnB,CAAL;AAAA,OADX,EAEFC,GAFE,CAEE;AAAA,YAAGD,EAAH,SAAGA,EAAH;AAAA,YAAOE,IAAP,SAAOA,IAAP;AAAA,eAAmB;AACpBC,UAAAA,KAAK,EAAEH,EADa;AAEpBE,UAAAA,IAAI,EAAJA;AAFoB,SAAnB;AAAA,OAFF,CAAP;AAMH;AAhBL;AAAA;AAAA,6BAkBa;AACL,aACI,oBAAC,SAAD;AACI,QAAA,SAAS,EAAE,eADf;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,KAAK,EAAC,EAHV;AAII,QAAA,WAAW,MAJf;AAKI,QAAA,KAAK,EAAE,eALX;AAMI,QAAA,OAAO,EAAE,KAAKE,UAAL,EANb;AAOI,QAAA,QAAQ,EAAE,KAAKf,oBAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAWH;AA9BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAkCJ,SAAlC;AAiCAG,YAAY,CAACiB,SAAb,GAAyB;AACrBX,EAAAA,QAAQ,EAAER,SAAS,CAACoB,MADC;AAErBb,EAAAA,YAAY,EAAEP,SAAS,CAACqB,IAFH;AAGrBX,EAAAA,WAAW,EAAEV,SAAS,CAACsB,KAHF;AAIrBb,EAAAA,OAAO,EAAET,SAAS,CAACsB;AAJE,CAAzB;;;;;;;;;;;;0BAjCapB,Y","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AppSelect } from '/components';\n\nimport './ExtrasSelect.scss';\n\nexport class ExtrasSelect extends Component {\n    onChangeExtrasSelect = ({ extras: extraId }) => {\n        const { setDishExtra, dishUUID } = this.props;\n\n        setDishExtra({ extraId, dishUUID });\n    };\n\n    mapOptions() {\n        const { options, excludedIds } = this.props;\n\n        return options\n            .filter(option => !excludedIds.find(id => id === option.id))\n            .map(({ id, name }) => ({\n                value: id,\n                name\n            }));\n    }\n\n    render() {\n        return (\n            <AppSelect\n                className={'extras-select'}\n                name='extras'\n                value=''\n                withoutNone\n                label={'Select extras'}\n                options={this.mapOptions()}\n                onChange={this.onChangeExtrasSelect}\n            />\n        );\n    }\n}\n\nExtrasSelect.propTypes = {\n    dishUUID: PropTypes.string,\n    setDishExtra: PropTypes.func,\n    excludedIds: PropTypes.array,\n    options: PropTypes.array\n};\n"]},"metadata":{},"sourceType":"module"}