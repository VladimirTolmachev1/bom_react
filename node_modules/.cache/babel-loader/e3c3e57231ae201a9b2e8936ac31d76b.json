{"ast":null,"code":"import _regeneratorRuntime from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _class,\n    _class2,\n    _class3,\n    _temp,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/MenuRestorator.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Add from '@material-ui/icons/Add';\nimport { autobind } from 'core-decorators';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { HelperService } from '../../services';\nimport { CategoriesList, DishList } from './components';\nimport { CreateCategoryModal, UpdateCategoryModal } from '../modals/category';\nimport { DishCreationModal, DishEditingModal } from '../modals/dish';\nimport { setCategoryModal } from '../../modules/modals/category';\nimport { setDishModal } from '../../modules/modals/dish';\nimport { showConfirm } from '../AppConfirm/modules';\nimport { queryParamsFromPropsSelector } from '../../selectors/common';\nimport { dndDragEnd, initializeDroppable, saveMenuItemsReordering, isCategoriesInDndModeSelector, isDishesInDndModeSelector, dndDishesSelector, dndCategoriesSelector, resetDnd, CATEGORIES_DROPPABLE, DISHES_DROPPABLE } from '../../modules/dnd';\nimport { categoriesListLoading, categoriesListSelector, categoriesListFiltersSelector, getCategories, deleteCategory, updateCategory, updateCategoryFilters, cleanupCategories } from '../../modules/categories';\nimport { setManagedRestaurant, clearManagedRestaurant } from '../../modules/restaurants';\nimport { getDishes, dishListLoadingSelector, allDishesSelector, publishDishes, removeDish, updateDishFilters, dishListCountSelector, dishListFiltersSelector, setDishPage, unpublishDishes, cleanupDish, cleanDishList } from '../../modules/dishes';\nimport './Menu.scss';\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    categories: categoriesListSelector(state),\n    dndCategories: dndCategoriesSelector(state),\n    dishes: allDishesSelector(state),\n    dndDishes: dndDishesSelector(state),\n    dishesCount: dishListCountSelector(state),\n    dishesLoading: dishListLoadingSelector(state),\n    dishFilters: dishListFiltersSelector(state),\n    categoriesFilters: categoriesListFiltersSelector(state),\n    categoriesLoading: categoriesListLoading(state),\n    queryParams: queryParamsFromPropsSelector(ownProps),\n    isDndMode: isCategoriesInDndModeSelector(state) && isDishesInDndModeSelector(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  getCategories: getCategories,\n  getDishes: getDishes,\n  deleteCategory: deleteCategory,\n  updateCategory: updateCategory,\n  showConfirm: showConfirm,\n  updateCategoryFilters: updateCategoryFilters,\n  publishDishes: publishDishes,\n  unpublishDishes: unpublishDishes,\n  updateDishFilters: updateDishFilters,\n  removeDish: removeDish,\n  setDishPage: setDishPage,\n  cleanupDish: cleanupDish,\n  cleanupCategories: cleanupCategories,\n  cleanDishList: cleanDishList,\n  resetDnd: resetDnd,\n  dndDragEnd: dndDragEnd,\n  initializeDroppable: initializeDroppable,\n  saveMenuItemsReordering: saveMenuItemsReordering,\n  setCategoryModal: setCategoryModal,\n  setDishModal: setDishModal,\n  setManagedRestaurant: setManagedRestaurant,\n  clearManagedRestaurant: clearManagedRestaurant\n};\nvar MenuRestorator = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = (_class2 = (_temp = _class3 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MenuRestorator, _Component);\n\n  function MenuRestorator() {\n    _classCallCheck(this, MenuRestorator);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MenuRestorator).apply(this, arguments));\n  }\n\n  _createClass(MenuRestorator, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props = this.props,\n          cleanupDish = _this$props.cleanupDish,\n          cleanupCategories = _this$props.cleanupCategories,\n          clearManagedRestaurant = _this$props.clearManagedRestaurant;\n      clearManagedRestaurant();\n      cleanupCategories();\n      cleanupDish();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this$props2, getCategories, cleanupDish, updateCategoryFilters, categoriesFilters, queryParams, setManagedRestaurant, restaurant_id, category_id, categoryBody, categories;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props2 = this.props, getCategories = _this$props2.getCategories, cleanupDish = _this$props2.cleanupDish, updateCategoryFilters = _this$props2.updateCategoryFilters, categoriesFilters = _this$props2.categoriesFilters, queryParams = _this$props2.queryParams, setManagedRestaurant = _this$props2.setManagedRestaurant; // eslint-disable-next-line prefer-const\n\n                restaurant_id = queryParams.restaurant_id, category_id = queryParams.category_id;\n                categoryBody = {\n                  restaurant_id: restaurant_id\n                };\n                cleanupDish();\n                updateCategoryFilters(categoryBody);\n\n                if (restaurant_id) {\n                  setManagedRestaurant({\n                    id: restaurant_id\n                  });\n                }\n\n                _context.next = 8;\n                return getCategories({\n                  body: _objectSpread({}, categoriesFilters, categoryBody)\n                }).promise;\n\n              case 8:\n                categories = _context.sent;\n\n                if (categories.data.length) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 11:\n                if (!categories.data.find(function (category) {\n                  return category.id === category_id;\n                })) {\n                  category_id = categories.data[0].id;\n                }\n\n                this.handleSetQueryParams({\n                  category_id: category_id\n                }, true);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"dishesRequest\",\n    value: function dishesRequest(category_id) {\n      var _this$props3 = this.props,\n          dishFilters = _this$props3.dishFilters,\n          updateDishFilters = _this$props3.updateDishFilters,\n          getDishes = _this$props3.getDishes;\n      var dishBody = {\n        category_id: category_id\n      };\n      updateDishFilters(dishBody);\n      getDishes({\n        body: _objectSpread({}, dishFilters, dishBody)\n      });\n    }\n  }, {\n    key: \"onAddCategoryClick\",\n    value: function onAddCategoryClick() {\n      var _this$props4 = this.props,\n          toggleCategoryModal = _this$props4.toggleCategoryModal,\n          setCategoryModalMode = _this$props4.setCategoryModalMode;\n      toggleCategoryModal();\n      setCategoryModalMode('add');\n    }\n  }, {\n    key: \"onAddDishClick\",\n    value: function onAddDishClick() {\n      var toggleDishModal = this.props.toggleDishModal;\n      toggleDishModal();\n    }\n  }, {\n    key: \"onPublishClick\",\n    value: function onPublishClick() {\n      var _this$props5 = this.props,\n          publishDishes = _this$props5.publishDishes,\n          dishes = _this$props5.dishes,\n          showConfirm = _this$props5.showConfirm;\n      var ids = dishes.filter(function (dish) {\n        return !dish.isPublished;\n      }).map(function (dish) {\n        return dish.id;\n      });\n      showConfirm({\n        data: {\n          dish_items: ids\n        },\n        onSuccess: publishDishes,\n        content: 'Are you sure you want to publish all unpublished dishes?'\n      });\n    }\n  }, {\n    key: \"isAddNewDishDisabled\",\n    value: function isAddNewDishDisabled() {\n      var _this$props6 = this.props,\n          categories = _this$props6.categories,\n          queryParams = _this$props6.queryParams;\n      return !queryParams.category_id || !categories.length;\n    }\n  }, {\n    key: \"isPublishUpdatesDisabled\",\n    value: function isPublishUpdatesDisabled() {\n      var dishes = this.props.dishes;\n      return dishes.every(function (dish) {\n        return dish.isPublished;\n      });\n    }\n  }, {\n    key: \"handleCategoryFilterChange\",\n    value: function handleCategoryFilterChange(_ref) {\n      var id = _ref.id;\n      this.handleSetQueryParams({\n        category_id: id\n      });\n    }\n  }, {\n    key: \"handleSetQueryParams\",\n    value: function handleSetQueryParams(queryParamsObj) {\n      var forceDishLoading = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$props7 = this.props,\n          cleanupDish = _this$props7.cleanupDish,\n          _this$props7$queryPar = _this$props7.queryParams,\n          restaurant_id = _this$props7$queryPar.restaurant_id,\n          category_id = _this$props7$queryPar.category_id,\n          history = _this$props7.history;\n\n      if (+queryParamsObj.category_id === +category_id && !forceDishLoading) {\n        return;\n      }\n\n      var query = HelperService.objToQueryString(_objectSpread({\n        restaurant_id: restaurant_id\n      }, queryParamsObj));\n\n      if (queryParamsObj.category_id) {\n        this.dishesRequest(queryParamsObj.category_id);\n      } else {\n        cleanupDish();\n      }\n\n      history.push(\"/menu?\".concat(query));\n    }\n  }, {\n    key: \"handleDeleteCategory\",\n    value: function () {\n      var _handleDeleteCategory = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(_ref2) {\n        var body, _this$props8, deleteCategory, categories, category_id, filteredCategories, length;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                body = _ref2.body;\n                _this$props8 = this.props, deleteCategory = _this$props8.deleteCategory, categories = _this$props8.categories;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return deleteCategory({\n                  body: body\n                }).promise;\n\n              case 5:\n                filteredCategories = categories.filter(function (_ref3) {\n                  var id = _ref3.id;\n                  return id !== body.id;\n                });\n                length = filteredCategories.length;\n\n                if (length) {\n                  category_id = filteredCategories[length - 1].id;\n                }\n\n                this.handleSetQueryParams({\n                  category_id: category_id\n                });\n                _context2.next = 13;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](2);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 11]]);\n      }));\n\n      return function handleDeleteCategory(_x) {\n        return _handleDeleteCategory.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"openCategoryCreatingModal\",\n    value: function openCategoryCreatingModal() {\n      var setCategoryModal = this.props.setCategoryModal;\n      setCategoryModal({\n        open: true\n      });\n    }\n  }, {\n    key: \"openCategoryEditingModal\",\n    value: function openCategoryEditingModal(categoryId) {\n      var setCategoryModal = this.props.setCategoryModal;\n      setCategoryModal({\n        open: true,\n        isEditing: true,\n        categoryId: categoryId\n      });\n    }\n  }, {\n    key: \"openDishCreationModal\",\n    value: function openDishCreationModal() {\n      var setDishModal = this.props.setDishModal;\n      setDishModal({\n        open: true\n      });\n    }\n  }, {\n    key: \"openDishEditingModal\",\n    value: function openDishEditingModal(dishId) {\n      var setDishModal = this.props.setDishModal;\n      setDishModal({\n        open: true,\n        isEditing: true,\n        dishId: dishId\n      });\n    }\n  }, {\n    key: \"setDndRearrangingMode\",\n    value: function setDndRearrangingMode() {\n      var _this$props9 = this.props,\n          initializeDroppable = _this$props9.initializeDroppable,\n          dishes = _this$props9.dishes,\n          categories = _this$props9.categories;\n      initializeDroppable(CATEGORIES_DROPPABLE, categories, true);\n      initializeDroppable(DISHES_DROPPABLE, dishes, true);\n    }\n  }, {\n    key: \"renderHeaderButtons\",\n    value: function renderHeaderButtons() {\n      var _this$props10 = this.props,\n          isDndMode = _this$props10.isDndMode,\n          resetDnd = _this$props10.resetDnd,\n          saveMenuItemsReordering = _this$props10.saveMenuItemsReordering;\n\n      if (isDndMode) {\n        return React.createElement(React.Fragment, null, React.createElement(Button, {\n          variant: \"contained\",\n          className: \"menu__add-dish-btn\",\n          onClick: resetDnd,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, \"Cancel rearranging\"), React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: \"menu__add-dish-btn\",\n          onClick: saveMenuItemsReordering,\n          disabled: this.isAddNewDishDisabled(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, \"Save\"));\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        variant: \"contained\",\n        className: \"menu__add-dish-btn\",\n        color: \"primary\" // onClick={this.onAddCategoryClick}\n        ,\n        onClick: this.openCategoryCreatingModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(Add, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), \"Add new category\"), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"menu__add-dish-btn\",\n        color: \"primary\",\n        onClick: this.openDishCreationModal,\n        disabled: this.isAddNewDishDisabled(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(Add, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }), \"Add new dish\"), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"menu__add-dish-btn\",\n        color: \"primary\",\n        onClick: this.setDndRearrangingMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"Rearrange\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$queryPara = this.props.queryParams,\n          restaurant_id = _this$props$queryPara.restaurant_id,\n          _this$props$queryPara2 = _this$props$queryPara.category_id,\n          category_id = _this$props$queryPara2 === void 0 ? '' : _this$props$queryPara2;\n      var _this$props11 = this.props,\n          dishes = _this$props11.dishes,\n          dndDishes = _this$props11.dndDishes,\n          categories = _this$props11.categories,\n          dndCategories = _this$props11.dndCategories,\n          dndDragEnd = _this$props11.dndDragEnd,\n          isDndMode = _this$props11.isDndMode;\n      return React.createElement(DragDropContext, {\n        onDragEnd: dndDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(CreateCategoryModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }), React.createElement(UpdateCategoryModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }), React.createElement(DishCreationModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }), React.createElement(DishEditingModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"app-static-container menu-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menu__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"Menu management\"), this.renderHeaderButtons()), React.createElement(\"div\", {\n        className: \"menu__content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menu__content-aside\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, \"List of categories\"), React.createElement(CategoriesList, Object.assign({}, HelperService.pick(this.props, ['categories', 'setCategoryModalMode', 'toggleCategoryModal', 'categoriesLoading', 'showConfirm', 'dishFilters', 'updateDishFilters', 'getDishes', 'cleanDishList']), {\n        restaurant_id: restaurant_id,\n        category_id: +category_id,\n        handleDeleteCategory: this.handleDeleteCategory,\n        handleEditCategoryClick: this.openCategoryEditingModal,\n        isDndMode: isDndMode,\n        categories: isDndMode ? dndCategories : categories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }))), React.createElement(DishList, Object.assign({\n        category_id: category_id,\n        isDndMode: isDndMode,\n        dishes: isDndMode ? dndDishes : dishes,\n        handleEditDishClick: this.openDishEditingModal\n      }, HelperService.pick(this.props, ['dishesLoading', 'dishesCount', 'setDishPage', 'toggleDishModal', 'showConfirm', 'removeDish', 'publishDishes', 'unpublishDishes', 'dishFilters', 'getDishes', 'setDishModalMode']), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return MenuRestorator;\n}(Component), _class3.propTypes = {\n  getCategories: PropTypes.func,\n  deleteCategory: PropTypes.func,\n  updateCategory: PropTypes.func,\n  showConfirm: PropTypes.func,\n  categories: PropTypes.array,\n  categoriesLoading: PropTypes.bool\n}, _temp), (_applyDecoratedDescriptor(_class2.prototype, \"dishesRequest\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"dishesRequest\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onAddCategoryClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onAddCategoryClick\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onAddDishClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onAddDishClick\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onPublishClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onPublishClick\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"handleCategoryFilterChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"handleCategoryFilterChange\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"handleDeleteCategory\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"handleDeleteCategory\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"openCategoryCreatingModal\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"openCategoryCreatingModal\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"openCategoryEditingModal\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"openCategoryEditingModal\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"openDishCreationModal\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"openDishCreationModal\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"openDishEditingModal\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"openDishEditingModal\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"setDndRearrangingMode\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"setDndRearrangingMode\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"renderHeaderButtons\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"renderHeaderButtons\"), _class2.prototype)), _class2)) || _class);\nexport { MenuRestorator as default };\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/MenuRestorator.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/MenuRestorator.js\");\n  reactHotLoader.register(MenuRestorator, \"MenuRestorator\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/MenuRestorator.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/MenuRestorator.js"],"names":["React","Component","PropTypes","connect","Button","Add","autobind","DragDropContext","HelperService","CategoriesList","DishList","CreateCategoryModal","UpdateCategoryModal","DishCreationModal","DishEditingModal","setCategoryModal","setDishModal","showConfirm","queryParamsFromPropsSelector","dndDragEnd","initializeDroppable","saveMenuItemsReordering","isCategoriesInDndModeSelector","isDishesInDndModeSelector","dndDishesSelector","dndCategoriesSelector","resetDnd","CATEGORIES_DROPPABLE","DISHES_DROPPABLE","categoriesListLoading","categoriesListSelector","categoriesListFiltersSelector","getCategories","deleteCategory","updateCategory","updateCategoryFilters","cleanupCategories","setManagedRestaurant","clearManagedRestaurant","getDishes","dishListLoadingSelector","allDishesSelector","publishDishes","removeDish","updateDishFilters","dishListCountSelector","dishListFiltersSelector","setDishPage","unpublishDishes","cleanupDish","cleanDishList","mapStateToProps","state","ownProps","categories","dndCategories","dishes","dndDishes","dishesCount","dishesLoading","dishFilters","categoriesFilters","categoriesLoading","queryParams","isDndMode","mapDispatchToProps","MenuRestorator","props","restaurant_id","category_id","categoryBody","id","body","promise","data","length","find","category","handleSetQueryParams","dishBody","toggleCategoryModal","setCategoryModalMode","toggleDishModal","ids","filter","dish","isPublished","map","dish_items","onSuccess","content","every","queryParamsObj","forceDishLoading","history","query","objToQueryString","dishesRequest","push","filteredCategories","open","categoryId","isEditing","dishId","isAddNewDishDisabled","openCategoryCreatingModal","openDishCreationModal","setDndRearrangingMode","renderHeaderButtons","pick","handleDeleteCategory","openCategoryEditingModal","openDishEditingModal","propTypes","func","array","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,cAAzC;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,oBAAzD;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,gBAApD;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,4BAAT,QAA6C,wBAA7C;AAEA,SACEC,UADF,EAEEC,mBAFF,EAGEC,uBAHF,EAIEC,6BAJF,EAKEC,yBALF,EAMEC,iBANF,EAOEC,qBAPF,EAQEC,QARF,EASEC,oBATF,EAUEC,gBAVF,QAWO,mBAXP;AAaA,SACEC,qBADF,EAEEC,sBAFF,EAGEC,6BAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,qBAPF,EAQEC,iBARF,QASO,0BATP;AAWA,SACEC,oBADF,EAEEC,sBAFF,QAGO,2BAHP;AAKA,SACEC,SADF,EAEEC,uBAFF,EAGEC,iBAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,iBANF,EAOEC,qBAPF,EAQEC,uBARF,EASEC,WATF,EAUEC,eAVF,EAWEC,WAXF,EAYEC,aAZF,QAaO,sBAbP;AAeA,OAAO,aAAP;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR;AAAA,SAAsB;AAC5CC,IAAAA,UAAU,EAAExB,sBAAsB,CAACsB,KAAD,CADU;AAE5CG,IAAAA,aAAa,EAAE9B,qBAAqB,CAAC2B,KAAD,CAFQ;AAG5CI,IAAAA,MAAM,EAAEf,iBAAiB,CAACW,KAAD,CAHmB;AAI5CK,IAAAA,SAAS,EAAEjC,iBAAiB,CAAC4B,KAAD,CAJgB;AAK5CM,IAAAA,WAAW,EAAEb,qBAAqB,CAACO,KAAD,CALU;AAM5CO,IAAAA,aAAa,EAAEnB,uBAAuB,CAACY,KAAD,CANM;AAO5CQ,IAAAA,WAAW,EAAEd,uBAAuB,CAACM,KAAD,CAPQ;AAQ5CS,IAAAA,iBAAiB,EAAE9B,6BAA6B,CAACqB,KAAD,CARJ;AAS5CU,IAAAA,iBAAiB,EAAEjC,qBAAqB,CAACuB,KAAD,CATI;AAU5CW,IAAAA,WAAW,EAAE7C,4BAA4B,CAACmC,QAAD,CAVG;AAW5CW,IAAAA,SAAS,EACP1C,6BAA6B,CAAC8B,KAAD,CAA7B,IAAwC7B,yBAAyB,CAAC6B,KAAD;AAZvB,GAAtB;AAAA,CAAxB;;AAeA,IAAMa,kBAAkB,GAAG;AACzBjC,EAAAA,aAAa,EAAbA,aADyB;AAEzBO,EAAAA,SAAS,EAATA,SAFyB;AAGzBN,EAAAA,cAAc,EAAdA,cAHyB;AAIzBC,EAAAA,cAAc,EAAdA,cAJyB;AAKzBjB,EAAAA,WAAW,EAAXA,WALyB;AAMzBkB,EAAAA,qBAAqB,EAArBA,qBANyB;AAOzBO,EAAAA,aAAa,EAAbA,aAPyB;AAQzBM,EAAAA,eAAe,EAAfA,eARyB;AASzBJ,EAAAA,iBAAiB,EAAjBA,iBATyB;AAUzBD,EAAAA,UAAU,EAAVA,UAVyB;AAWzBI,EAAAA,WAAW,EAAXA,WAXyB;AAYzBE,EAAAA,WAAW,EAAXA,WAZyB;AAazBb,EAAAA,iBAAiB,EAAjBA,iBAbyB;AAczBc,EAAAA,aAAa,EAAbA,aAdyB;AAgBzBxB,EAAAA,QAAQ,EAARA,QAhByB;AAiBzBP,EAAAA,UAAU,EAAVA,UAjByB;AAkBzBC,EAAAA,mBAAmB,EAAnBA,mBAlByB;AAmBzBC,EAAAA,uBAAuB,EAAvBA,uBAnByB;AAqBzBN,EAAAA,gBAAgB,EAAhBA,gBArByB;AAsBzBC,EAAAA,YAAY,EAAZA,YAtByB;AAwBzBqB,EAAAA,oBAAoB,EAApBA,oBAxByB;AAyBzBC,EAAAA,sBAAsB,EAAtBA;AAzByB,CAA3B;IAiCM4B,c,WAJL/D,OAAO,CACNgD,eADM,EAENc,kBAFM,C;;;;;;;;;;;;;2CAciB;AAAA,wBAKjB,KAAKE,KALY;AAAA,UAEnBlB,WAFmB,eAEnBA,WAFmB;AAAA,UAGnBb,iBAHmB,eAGnBA,iBAHmB;AAAA,UAInBE,sBAJmB,eAInBA,sBAJmB;AAMrBA,MAAAA,sBAAsB;AACtBF,MAAAA,iBAAiB;AACjBa,MAAAA,WAAW;AACZ;;;;;;;;;;;;;+BAUK,KAAKkB,K,EANPnC,a,gBAAAA,a,EACAiB,W,gBAAAA,W,EACAd,qB,gBAAAA,qB,EACA0B,iB,gBAAAA,iB,EACAE,W,gBAAAA,W,EACA1B,oB,gBAAAA,oB,EAEF;;AACM+B,gBAAAA,a,GAA+BL,W,CAA/BK,a,EAAeC,W,GAAgBN,W,CAAhBM,W;AACfC,gBAAAA,Y,GAAe;AAAEF,kBAAAA,aAAa,EAAbA;AAAF,iB;AAErBnB,gBAAAA,WAAW;AACXd,gBAAAA,qBAAqB,CAACmC,YAAD,CAArB;;AAEA,oBAAIF,aAAJ,EAAmB;AACjB/B,kBAAAA,oBAAoB,CAAC;AAAEkC,oBAAAA,EAAE,EAAEH;AAAN,mBAAD,CAApB;AACD;;;uBAEwBpC,aAAa,CAAC;AACrCwC,kBAAAA,IAAI,oBAAOX,iBAAP,EAA6BS,YAA7B;AADiC,iBAAD,CAAb,CAEtBG,O;;;AAFGnB,gBAAAA,U;;oBAIDA,UAAU,CAACoB,IAAX,CAAgBC,M;;;;;;;;AAIrB,oBAAI,CAACrB,UAAU,CAACoB,IAAX,CAAgBE,IAAhB,CAAqB,UAAAC,QAAQ;AAAA,yBAAIA,QAAQ,CAACN,EAAT,KAAgBF,WAApB;AAAA,iBAA7B,CAAL,EAAoE;AAClEA,kBAAAA,WAAW,GAAGf,UAAU,CAACoB,IAAX,CAAgB,CAAhB,EAAmBH,EAAjC;AACD;;AAED,qBAAKO,oBAAL,CAA0B;AAAET,kBAAAA,WAAW,EAAXA;AAAF,iBAA1B,EAA2C,IAA3C;;;;;;;;;;;;;;;;kCAIYA,W,EAAa;AAAA,yBAC6B,KAAKF,KADlC;AAAA,UACjBP,WADiB,gBACjBA,WADiB;AAAA,UACJhB,iBADI,gBACJA,iBADI;AAAA,UACeL,SADf,gBACeA,SADf;AAGzB,UAAMwC,QAAQ,GAAG;AAAEV,QAAAA,WAAW,EAAXA;AAAF,OAAjB;AACAzB,MAAAA,iBAAiB,CAACmC,QAAD,CAAjB;AACAxC,MAAAA,SAAS,CAAC;AAAEiC,QAAAA,IAAI,oBAAOZ,WAAP,EAAuBmB,QAAvB;AAAN,OAAD,CAAT;AACD;;;yCAGoB;AAAA,yBACmC,KAAKZ,KADxC;AAAA,UACXa,mBADW,gBACXA,mBADW;AAAA,UACUC,oBADV,gBACUA,oBADV;AAGnBD,MAAAA,mBAAmB;AACnBC,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;;;qCAGgB;AAAA,UACPC,eADO,GACa,KAAKf,KADlB,CACPe,eADO;AAEfA,MAAAA,eAAe;AAChB;;;qCAGgB;AAAA,yBACgC,KAAKf,KADrC;AAAA,UACPzB,aADO,gBACPA,aADO;AAAA,UACQc,MADR,gBACQA,MADR;AAAA,UACgBvC,WADhB,gBACgBA,WADhB;AAEf,UAAMkE,GAAG,GAAG3B,MAAM,CAAC4B,MAAP,CAAc,UAAAC,IAAI;AAAA,eAAI,CAACA,IAAI,CAACC,WAAV;AAAA,OAAlB,EAAyCC,GAAzC,CAA6C,UAAAF,IAAI;AAAA,eAAIA,IAAI,CAACd,EAAT;AAAA,OAAjD,CAAZ;AAEAtD,MAAAA,WAAW,CAAC;AACVyD,QAAAA,IAAI,EAAE;AAAEc,UAAAA,UAAU,EAAEL;AAAd,SADI;AAEVM,QAAAA,SAAS,EAAE/C,aAFD;AAGVgD,QAAAA,OAAO,EAAE;AAHC,OAAD,CAAX;AAKD;;;2CAEsB;AAAA,yBACe,KAAKvB,KADpB;AAAA,UACbb,UADa,gBACbA,UADa;AAAA,UACDS,WADC,gBACDA,WADC;AAGrB,aAAO,CAACA,WAAW,CAACM,WAAb,IAA4B,CAACf,UAAU,CAACqB,MAA/C;AACD;;;+CAE0B;AAAA,UACjBnB,MADiB,GACN,KAAKW,KADC,CACjBX,MADiB;AAEzB,aAAOA,MAAM,CAACmC,KAAP,CAAa,UAAAN,IAAI;AAAA,eAAIA,IAAI,CAACC,WAAT;AAAA,OAAjB,CAAP;AACD;;;qDAGkC;AAAA,UAANf,EAAM,QAANA,EAAM;AACjC,WAAKO,oBAAL,CAA0B;AAAET,QAAAA,WAAW,EAAEE;AAAf,OAA1B;AACD;;;yCAEoBqB,c,EAA0C;AAAA,UAA1BC,gBAA0B,uEAAP,KAAO;AAAA,yBAKzD,KAAK1B,KALoD;AAAA,UAE3DlB,WAF2D,gBAE3DA,WAF2D;AAAA,+CAG3Dc,WAH2D;AAAA,UAG5CK,aAH4C,yBAG5CA,aAH4C;AAAA,UAG7BC,WAH6B,yBAG7BA,WAH6B;AAAA,UAI3DyB,OAJ2D,gBAI3DA,OAJ2D;;AAO7D,UAAI,CAACF,cAAc,CAACvB,WAAhB,KAAgC,CAACA,WAAjC,IAAgD,CAACwB,gBAArD,EAAuE;AACrE;AACD;;AAED,UAAME,KAAK,GAAGvF,aAAa,CAACwF,gBAAd;AACZ5B,QAAAA,aAAa,EAAbA;AADY,SAETwB,cAFS,EAAd;;AAKA,UAAIA,cAAc,CAACvB,WAAnB,EAAgC;AAC9B,aAAK4B,aAAL,CAAmBL,cAAc,CAACvB,WAAlC;AACD,OAFD,MAEO;AACLpB,QAAAA,WAAW;AACZ;;AAED6C,MAAAA,OAAO,CAACI,IAAR,iBAAsBH,KAAtB;AACD;;;;;;;;;;;;;AAG4BvB,gBAAAA,I,SAAAA,I;+BACY,KAAKL,K,EAApClC,c,gBAAAA,c,EAAgBqB,U,gBAAAA,U;;;uBAIhBrB,cAAc,CAAC;AAAEuC,kBAAAA,IAAI,EAAJA;AAAF,iBAAD,CAAd,CAAyBC,O;;;AAEzB0B,gBAAAA,kB,GAAqB7C,UAAU,CAAC8B,MAAX,CAAkB;AAAA,sBAAGb,EAAH,SAAGA,EAAH;AAAA,yBAAYA,EAAE,KAAKC,IAAI,CAACD,EAAxB;AAAA,iBAAlB,C;AACnBI,gBAAAA,M,GAAWwB,kB,CAAXxB,M;;AACR,oBAAIA,MAAJ,EAAY;AACVN,kBAAAA,WAAW,GAAG8B,kBAAkB,CAACxB,MAAM,GAAG,CAAV,CAAlB,CAA+BJ,EAA7C;AACD;;AAED,qBAAKO,oBAAL,CAA0B;AAAET,kBAAAA,WAAW,EAAXA;AAAF,iBAA1B;;;;;;;;;;;;;;;;;;;;;;gDAOwB;AAAA,UAClBtD,gBADkB,GACG,KAAKoD,KADR,CAClBpD,gBADkB;AAE1BA,MAAAA,gBAAgB,CAAC;AAAEqF,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAhB;AACD;;;6CAGwBC,U,EAAY;AAAA,UAC3BtF,gBAD2B,GACN,KAAKoD,KADC,CAC3BpD,gBAD2B;AAEnCA,MAAAA,gBAAgB,CAAC;AACfqF,QAAAA,IAAI,EAAE,IADS;AAEfE,QAAAA,SAAS,EAAE,IAFI;AAGfD,QAAAA,UAAU,EAAVA;AAHe,OAAD,CAAhB;AAKD;;;4CAGuB;AAAA,UACdrF,YADc,GACG,KAAKmD,KADR,CACdnD,YADc;AAEtBA,MAAAA,YAAY,CAAC;AAAEoF,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAZ;AACD;;;yCAGoBG,M,EAAQ;AAAA,UACnBvF,YADmB,GACF,KAAKmD,KADH,CACnBnD,YADmB;AAG3BA,MAAAA,YAAY,CAAC;AACXoF,QAAAA,IAAI,EAAE,IADK;AAEXE,QAAAA,SAAS,EAAE,IAFA;AAGXC,QAAAA,MAAM,EAANA;AAHW,OAAD,CAAZ;AAKD;;;4CAGuB;AAAA,yBAC8B,KAAKpC,KADnC;AAAA,UACd/C,mBADc,gBACdA,mBADc;AAAA,UACOoC,MADP,gBACOA,MADP;AAAA,UACeF,UADf,gBACeA,UADf;AAGtBlC,MAAAA,mBAAmB,CAACO,oBAAD,EAAuB2B,UAAvB,EAAmC,IAAnC,CAAnB;AACAlC,MAAAA,mBAAmB,CAACQ,gBAAD,EAAmB4B,MAAnB,EAA2B,IAA3B,CAAnB;AACD;;;0CAGqB;AAAA,0BACqC,KAAKW,KAD1C;AAAA,UACZH,SADY,iBACZA,SADY;AAAA,UACDtC,QADC,iBACDA,QADC;AAAA,UACSL,uBADT,iBACSA,uBADT;;AAGpB,UAAI2C,SAAJ,EAAe;AACb,eACE,0CACE,oBAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,SAAS,EAAC,oBAFZ;AAGE,UAAA,OAAO,EAAEtC,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAQE,oBAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,SAAS,EAAC,oBAHZ;AAIE,UAAA,OAAO,EAAEL,uBAJX;AAKE,UAAA,QAAQ,EAAE,KAAKmF,oBAAL,EALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CADF;AAmBD;;AAED,aACE,0CACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,SAAS,EAAC,oBAFZ;AAGE,QAAA,KAAK,EAAC,SAHR,CAIE;AAJF;AAKE,QAAA,OAAO,EAAE,KAAKC,yBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,qBADF,EAWE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,SAAS,EAAC,oBAFZ;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAE,KAAKC,qBAJhB;AAKE,QAAA,QAAQ,EAAE,KAAKF,oBAAL,EALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,iBAXF,EAqBE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,SAAS,EAAC,oBAFZ;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAE,KAAKG,qBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBArBF,CADF;AA+BD;;;6BAEQ;AAAA,kCACqC,KAAKxC,KAAL,CAAWJ,WADhD;AAAA,UACCK,aADD,yBACCA,aADD;AAAA,yDACgBC,WADhB;AAAA,UACgBA,WADhB,uCAC8B,EAD9B;AAAA,0BASH,KAAKF,KATF;AAAA,UAGLX,MAHK,iBAGLA,MAHK;AAAA,UAILC,SAJK,iBAILA,SAJK;AAAA,UAKLH,UALK,iBAKLA,UALK;AAAA,UAMLC,aANK,iBAMLA,aANK;AAAA,UAOLpC,UAPK,iBAOLA,UAPK;AAAA,UAQL6C,SARK,iBAQLA,SARK;AAWP,aACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAE7C,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAME;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEG,KAAKyF,mBAAL,EAFH,CADF,EAME;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,cAAD,oBACMpG,aAAa,CAACqG,IAAd,CAAmB,KAAK1C,KAAxB,EAA+B,CACjC,YADiC,EAEjC,sBAFiC,EAGjC,qBAHiC,EAIjC,mBAJiC,EAKjC,aALiC,EAMjC,aANiC,EAOjC,mBAPiC,EAQjC,WARiC,EASjC,eATiC,CAA/B,CADN;AAYE,QAAA,aAAa,EAAEC,aAZjB;AAaE,QAAA,WAAW,EAAE,CAACC,WAbhB;AAcE,QAAA,oBAAoB,EAAE,KAAKyC,oBAd7B;AAeE,QAAA,uBAAuB,EAAE,KAAKC,wBAfhC;AAgBE,QAAA,SAAS,EAAE/C,SAhBb;AAiBE,QAAA,UAAU,EAAEA,SAAS,GAAGT,aAAH,GAAmBD,UAjB1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF,EAmCE,oBAAC,QAAD;AACE,QAAA,WAAW,EAAEe,WADf;AAEE,QAAA,SAAS,EAAEL,SAFb;AAGE,QAAA,MAAM,EAAEA,SAAS,GAAGP,SAAH,GAAeD,MAHlC;AAIE,QAAA,mBAAmB,EAAE,KAAKwD;AAJ5B,SAKMxG,aAAa,CAACqG,IAAd,CAAmB,KAAK1C,KAAxB,EAA+B,CACjC,eADiC,EAEjC,aAFiC,EAGjC,aAHiC,EAIjC,iBAJiC,EAKjC,aALiC,EAMjC,YANiC,EAOjC,eAPiC,EAQjC,iBARiC,EASjC,aATiC,EAUjC,WAViC,EAWjC,kBAXiC,CAA/B,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAnCF,CANF,CANF,CADF;AAuED;;;;;;;;;;;EA9U0BlE,S,WACpBgH,S,GAAY;AACjBjF,EAAAA,aAAa,EAAE9B,SAAS,CAACgH,IADR;AAEjBjF,EAAAA,cAAc,EAAE/B,SAAS,CAACgH,IAFT;AAGjBhF,EAAAA,cAAc,EAAEhC,SAAS,CAACgH,IAHT;AAIjBjG,EAAAA,WAAW,EAAEf,SAAS,CAACgH,IAJN;AAKjB5D,EAAAA,UAAU,EAAEpD,SAAS,CAACiH,KALL;AAMjBrD,EAAAA,iBAAiB,EAAE5D,SAAS,CAACkH;AANZ,C,0EAuDlB9G,Q,gKASAA,Q,iKAQAA,Q,6JAMAA,Q,yKAuBAA,Q,+KA8BAA,Q,8KAoBAA,Q,kLAMAA,Q,8KAUAA,Q,0KAMAA,Q,0KAWAA,Q,yKAQAA,Q;SAjMG4D,c;;;;;;;;;;0BAhDAf,e;0BAeAc,kB;0BAiCAC,c","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Add from '@material-ui/icons/Add';\nimport { autobind } from 'core-decorators';\n\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { HelperService } from '../../services';\n\nimport { CategoriesList, DishList } from './components';\nimport { CreateCategoryModal, UpdateCategoryModal } from '../modals/category';\nimport { DishCreationModal, DishEditingModal } from '../modals/dish';\nimport { setCategoryModal } from '../../modules/modals/category';\nimport { setDishModal } from '../../modules/modals/dish';\n\nimport { showConfirm } from '../AppConfirm/modules';\nimport { queryParamsFromPropsSelector } from '../../selectors/common';\n\nimport {\n  dndDragEnd,\n  initializeDroppable,\n  saveMenuItemsReordering,\n  isCategoriesInDndModeSelector,\n  isDishesInDndModeSelector,\n  dndDishesSelector,\n  dndCategoriesSelector,\n  resetDnd,\n  CATEGORIES_DROPPABLE,\n  DISHES_DROPPABLE,\n} from '../../modules/dnd';\n\nimport {\n  categoriesListLoading,\n  categoriesListSelector,\n  categoriesListFiltersSelector,\n  getCategories,\n  deleteCategory,\n  updateCategory,\n  updateCategoryFilters,\n  cleanupCategories,\n} from '../../modules/categories';\n\nimport {\n  setManagedRestaurant,\n  clearManagedRestaurant,\n} from '../../modules/restaurants';\n\nimport {\n  getDishes,\n  dishListLoadingSelector,\n  allDishesSelector,\n  publishDishes,\n  removeDish,\n  updateDishFilters,\n  dishListCountSelector,\n  dishListFiltersSelector,\n  setDishPage,\n  unpublishDishes,\n  cleanupDish,\n  cleanDishList,\n} from '../../modules/dishes';\n\nimport './Menu.scss';\n\nconst mapStateToProps = (state, ownProps) => ({\n  categories: categoriesListSelector(state),\n  dndCategories: dndCategoriesSelector(state),\n  dishes: allDishesSelector(state),\n  dndDishes: dndDishesSelector(state),\n  dishesCount: dishListCountSelector(state),\n  dishesLoading: dishListLoadingSelector(state),\n  dishFilters: dishListFiltersSelector(state),\n  categoriesFilters: categoriesListFiltersSelector(state),\n  categoriesLoading: categoriesListLoading(state),\n  queryParams: queryParamsFromPropsSelector(ownProps),\n  isDndMode:\n    isCategoriesInDndModeSelector(state) && isDishesInDndModeSelector(state),\n});\n\nconst mapDispatchToProps = {\n  getCategories,\n  getDishes,\n  deleteCategory,\n  updateCategory,\n  showConfirm,\n  updateCategoryFilters,\n  publishDishes,\n  unpublishDishes,\n  updateDishFilters,\n  removeDish,\n  setDishPage,\n  cleanupDish,\n  cleanupCategories,\n  cleanDishList,\n\n  resetDnd,\n  dndDragEnd,\n  initializeDroppable,\n  saveMenuItemsReordering,\n\n  setCategoryModal,\n  setDishModal,\n\n  setManagedRestaurant,\n  clearManagedRestaurant,\n};\n\nexport default\n@connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)\nclass MenuRestorator extends Component {\n  static propTypes = {\n    getCategories: PropTypes.func,\n    deleteCategory: PropTypes.func,\n    updateCategory: PropTypes.func,\n    showConfirm: PropTypes.func,\n    categories: PropTypes.array,\n    categoriesLoading: PropTypes.bool,\n  };\n\n  componentWillUnmount() {\n    const {\n      cleanupDish,\n      cleanupCategories,\n      clearManagedRestaurant,\n    } = this.props;\n    clearManagedRestaurant();\n    cleanupCategories();\n    cleanupDish();\n  }\n\n  async componentDidMount() {\n    const {\n      getCategories,\n      cleanupDish,\n      updateCategoryFilters,\n      categoriesFilters,\n      queryParams,\n      setManagedRestaurant,\n    } = this.props;\n    // eslint-disable-next-line prefer-const\n    let { restaurant_id, category_id } = queryParams;\n    const categoryBody = { restaurant_id };\n\n    cleanupDish();\n    updateCategoryFilters(categoryBody);\n\n    if (restaurant_id) {\n      setManagedRestaurant({ id: restaurant_id });\n    }\n\n    const categories = await getCategories({\n      body: { ...categoriesFilters, ...categoryBody },\n    }).promise;\n\n    if (!categories.data.length) {\n      return;\n    }\n\n    if (!categories.data.find(category => category.id === category_id)) {\n      category_id = categories.data[0].id;\n    }\n\n    this.handleSetQueryParams({ category_id }, true);\n  }\n\n  @autobind\n  dishesRequest(category_id) {\n    const { dishFilters, updateDishFilters, getDishes } = this.props;\n\n    const dishBody = { category_id };\n    updateDishFilters(dishBody);\n    getDishes({ body: { ...dishFilters, ...dishBody } });\n  }\n\n  @autobind\n  onAddCategoryClick() {\n    const { toggleCategoryModal, setCategoryModalMode } = this.props;\n\n    toggleCategoryModal();\n    setCategoryModalMode('add');\n  }\n\n  @autobind\n  onAddDishClick() {\n    const { toggleDishModal } = this.props;\n    toggleDishModal();\n  }\n\n  @autobind\n  onPublishClick() {\n    const { publishDishes, dishes, showConfirm } = this.props;\n    const ids = dishes.filter(dish => !dish.isPublished).map(dish => dish.id);\n\n    showConfirm({\n      data: { dish_items: ids },\n      onSuccess: publishDishes,\n      content: 'Are you sure you want to publish all unpublished dishes?',\n    });\n  }\n\n  isAddNewDishDisabled() {\n    const { categories, queryParams } = this.props;\n\n    return !queryParams.category_id || !categories.length;\n  }\n\n  isPublishUpdatesDisabled() {\n    const { dishes } = this.props;\n    return dishes.every(dish => dish.isPublished);\n  }\n\n  @autobind\n  handleCategoryFilterChange({ id }) {\n    this.handleSetQueryParams({ category_id: id });\n  }\n\n  handleSetQueryParams(queryParamsObj, forceDishLoading = false) {\n    const {\n      cleanupDish,\n      queryParams: { restaurant_id, category_id },\n      history,\n    } = this.props;\n\n    if (+queryParamsObj.category_id === +category_id && !forceDishLoading) {\n      return;\n    }\n\n    const query = HelperService.objToQueryString({\n      restaurant_id,\n      ...queryParamsObj,\n    });\n\n    if (queryParamsObj.category_id) {\n      this.dishesRequest(queryParamsObj.category_id);\n    } else {\n      cleanupDish();\n    }\n\n    history.push(`/menu?${query}`);\n  }\n\n  @autobind\n  async handleDeleteCategory({ body }) {\n    const { deleteCategory, categories } = this.props;\n    let category_id;\n\n    try {\n      await deleteCategory({ body }).promise;\n\n      const filteredCategories = categories.filter(({ id }) => id !== body.id);\n      const { length } = filteredCategories;\n      if (length) {\n        category_id = filteredCategories[length - 1].id;\n      }\n\n      this.handleSetQueryParams({ category_id });\n    } catch (error) {\n      // todo: error notifications\n    }\n  }\n\n  @autobind\n  openCategoryCreatingModal() {\n    const { setCategoryModal } = this.props;\n    setCategoryModal({ open: true });\n  }\n\n  @autobind\n  openCategoryEditingModal(categoryId) {\n    const { setCategoryModal } = this.props;\n    setCategoryModal({\n      open: true,\n      isEditing: true,\n      categoryId,\n    });\n  }\n\n  @autobind\n  openDishCreationModal() {\n    const { setDishModal } = this.props;\n    setDishModal({ open: true });\n  }\n\n  @autobind\n  openDishEditingModal(dishId) {\n    const { setDishModal } = this.props;\n\n    setDishModal({\n      open: true,\n      isEditing: true,\n      dishId,\n    });\n  }\n\n  @autobind\n  setDndRearrangingMode() {\n    const { initializeDroppable, dishes, categories } = this.props;\n\n    initializeDroppable(CATEGORIES_DROPPABLE, categories, true);\n    initializeDroppable(DISHES_DROPPABLE, dishes, true);\n  }\n\n  @autobind\n  renderHeaderButtons() {\n    const { isDndMode, resetDnd, saveMenuItemsReordering } = this.props;\n\n    if (isDndMode) {\n      return (\n        <>\n          <Button\n            variant=\"contained\"\n            className=\"menu__add-dish-btn\"\n            onClick={resetDnd}>\n            Cancel rearranging\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"menu__add-dish-btn\"\n            onClick={saveMenuItemsReordering}\n            disabled={this.isAddNewDishDisabled()}>\n            Save\n          </Button>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          className=\"menu__add-dish-btn\"\n          color=\"primary\"\n          // onClick={this.onAddCategoryClick}\n          onClick={this.openCategoryCreatingModal}>\n          <Add />\n          Add new category\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          className=\"menu__add-dish-btn\"\n          color=\"primary\"\n          onClick={this.openDishCreationModal}\n          disabled={this.isAddNewDishDisabled()}>\n          <Add />\n          Add new dish\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          className=\"menu__add-dish-btn\"\n          color=\"primary\"\n          onClick={this.setDndRearrangingMode}>\n          Rearrange\n        </Button>\n      </>\n    );\n  }\n\n  render() {\n    const { restaurant_id, category_id = '' } = this.props.queryParams;\n    const {\n      dishes,\n      dndDishes,\n      categories,\n      dndCategories,\n      dndDragEnd,\n      isDndMode,\n    } = this.props;\n\n    return (\n      <DragDropContext onDragEnd={dndDragEnd}>\n        <CreateCategoryModal />\n        <UpdateCategoryModal />\n        <DishCreationModal />\n        <DishEditingModal />\n\n        <div className=\"app-static-container menu-container\">\n          <div className=\"menu__header\">\n            <h1>Menu management</h1>\n            {this.renderHeaderButtons()}\n          </div>\n\n          <div className=\"menu__content\">\n            <div className=\"menu__content-aside\">\n              <h3>List of categories</h3>\n              <CategoriesList\n                {...HelperService.pick(this.props, [\n                  'categories',\n                  'setCategoryModalMode',\n                  'toggleCategoryModal',\n                  'categoriesLoading',\n                  'showConfirm',\n                  'dishFilters',\n                  'updateDishFilters',\n                  'getDishes',\n                  'cleanDishList',\n                ])}\n                restaurant_id={restaurant_id}\n                category_id={+category_id}\n                handleDeleteCategory={this.handleDeleteCategory}\n                handleEditCategoryClick={this.openCategoryEditingModal}\n                isDndMode={isDndMode}\n                categories={isDndMode ? dndCategories : categories}\n              />\n              {/*\n                            <Button\n                                variant={'contained'}\n                                onClick={this.onPublishClick}\n                                className={'menu__publish-btn'}\n                                disabled={this.isPublishUpdatesDisabled()}\n                                color={'secondary'}\n                            >\n                                Publish updates\n                            </Button>\n                            */}\n            </div>\n\n            <DishList\n              category_id={category_id}\n              isDndMode={isDndMode}\n              dishes={isDndMode ? dndDishes : dishes}\n              handleEditDishClick={this.openDishEditingModal}\n              {...HelperService.pick(this.props, [\n                'dishesLoading',\n                'dishesCount',\n                'setDishPage',\n                'toggleDishModal',\n                'showConfirm',\n                'removeDish',\n                'publishDishes',\n                'unpublishDishes',\n                'dishFilters',\n                'getDishes',\n                'setDishModalMode',\n              ])}\n            />\n          </div>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}