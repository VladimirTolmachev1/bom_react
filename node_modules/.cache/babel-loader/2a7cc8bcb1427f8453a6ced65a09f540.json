{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/PrivateRoute/PrivateRoute.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction redirectTo(_ref) {\n  var role = _ref.role,\n      path = _ref.path;\n  var redirect = '/sign-in';\n\n  if (['/sign-in', '/forgot-password'].includes(path)) {\n    redirect = role.name === 'admin' ? '/restaurant' : \"/menu?restaurant_id=\".concat(role.restaurant_id);\n  }\n\n  return redirect;\n}\n\nexport var PrivateRoute = function PrivateRoute(_ref2) {\n  var Component = _ref2.component,\n      hasAccess = _ref2.hasAccess,\n      role = _ref2.role,\n      path = _ref2.path,\n      rest = _objectWithoutProperties(_ref2, [\"component\", \"hasAccess\", \"role\", \"path\"]);\n\n  return React.createElement(Route, Object.assign({\n    path: path\n  }, rest, {\n    render: function render(props) {\n      return hasAccess === true ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: redirectTo({\n          role: role,\n          path: path\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(redirectTo, \"redirectTo\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/PrivateRoute/PrivateRoute.js\");\n  reactHotLoader.register(PrivateRoute, \"PrivateRoute\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/PrivateRoute/PrivateRoute.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/PrivateRoute/PrivateRoute.js"],"names":["React","Route","Redirect","redirectTo","role","path","redirect","includes","name","restaurant_id","PrivateRoute","Component","component","hasAccess","rest","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,SAASC,UAAT,OAAoC;AAAA,MAAdC,IAAc,QAAdA,IAAc;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAClC,MAAIC,QAAQ,GAAG,UAAf;;AAEA,MAAI,CAAC,UAAD,EAAa,kBAAb,EAAiCC,QAAjC,CAA0CF,IAA1C,CAAJ,EAAqD;AACnDC,IAAAA,QAAQ,GACNF,IAAI,CAACI,IAAL,KAAc,OAAd,GACI,aADJ,iCAE2BJ,IAAI,CAACK,aAFhC,CADF;AAID;;AAED,SAAOH,QAAP;AACD;;AAED,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe;AAAA,MACfC,SADe,SAC1BC,SAD0B;AAAA,MAE1BC,SAF0B,SAE1BA,SAF0B;AAAA,MAG1BT,IAH0B,SAG1BA,IAH0B;AAAA,MAI1BC,IAJ0B,SAI1BA,IAJ0B;AAAA,MAKvBS,IALuB;;AAAA,SAO1B,oBAAC,KAAD;AACE,IAAA,IAAI,EAAET;AADR,KAEMS,IAFN;AAGE,IAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aACXF,SAAS,KAAK,IAAd,GACE,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,GAGE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAEZ,UAAU,CAAC;AAAEC,UAAAA,IAAI,EAAJA,IAAF;AAAQC,UAAAA,IAAI,EAAJA;AAAR,SAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJS;AAAA,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAP0B;AAAA,CAArB;;;;;;;;;;0BAbEF,U;0BAaIO,Y","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction redirectTo({ role, path }) {\n  let redirect = '/sign-in';\n\n  if (['/sign-in', '/forgot-password'].includes(path)) {\n    redirect =\n      role.name === 'admin'\n        ? '/restaurant'\n        : `/menu?restaurant_id=${role.restaurant_id}`;\n  }\n\n  return redirect;\n}\n\nexport const PrivateRoute = ({\n  component: Component,\n  hasAccess,\n  role,\n  path,\n  ...rest\n}) => (\n  <Route\n    path={path}\n    {...rest}\n    render={props =>\n      hasAccess === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={redirectTo({ role, path })} />\n      )\n    }\n  />\n);\n"]},"metadata":{},"sourceType":"module"}