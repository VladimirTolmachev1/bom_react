{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppFormSelect/AppFormSelect.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { AppSelect } from '../';\nexport var AppFormSelect = function AppFormSelect(_ref) {\n  var input = _ref.input,\n      className = _ref.className,\n      withoutNone = _ref.withoutNone,\n      type = _ref.type,\n      label = _ref.label,\n      required = _ref.required,\n      options = _ref.options,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error;\n  return React.createElement(\"div\", {\n    className: className + ' app-form-control__container',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(AppSelect, Object.assign({\n    value: input.value,\n    className: 'app-form-control'\n  }, {\n    type: type,\n    label: label,\n    options: options,\n    required: required,\n    withoutNone: withoutNone\n  }, {\n    error: Boolean(touched && error)\n  }, input, {\n    onChange: function onChange(data) {\n      return input.onChange(data[input.name]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), Boolean(touched && error) ? React.createElement(FormHelperText, {\n    className: \"app-form-control__error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, error) : false);\n};\nAppFormSelect.propTypes = {\n  options: PropTypes.array,\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AppFormSelect, \"AppFormSelect\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppFormSelect/AppFormSelect.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppFormSelect/AppFormSelect.js"],"names":["React","PropTypes","FormHelperText","AppSelect","AppFormSelect","input","className","withoutNone","type","label","required","options","meta","touched","error","value","Boolean","data","onChange","name","propTypes","array","string","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,SAAT,QAA0B,KAA1B;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAYO;AAAA,MAXFC,KAWE,QAXFA,KAWE;AAAA,MAVFC,SAUE,QAVFA,SAUE;AAAA,MATFC,WASE,QATFA,WASE;AAAA,MARFC,IAQE,QARFA,IAQE;AAAA,MAPFC,KAOE,QAPFA,KAOE;AAAA,MANFC,QAME,QANFA,QAME;AAAA,MALFC,OAKE,QALFA,OAKE;AAAA,uBAJFC,IAIE;AAAA,MAHEC,OAGF,aAHEA,OAGF;AAAA,MAFEC,KAEF,aAFEA,KAEF;AAEhC,SACI;AAAK,IAAA,SAAS,EAAGR,SAAS,GAAG,8BAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAGD,KAAK,CAACU,KADlB;AAEI,IAAA,SAAS,EAAG;AAFhB,KAGS;AACDP,IAAAA,IAAI,EAAJA,IADC;AAEDC,IAAAA,KAAK,EAALA,KAFC;AAGDE,IAAAA,OAAO,EAAPA,OAHC;AAIDD,IAAAA,QAAQ,EAARA,QAJC;AAKDH,IAAAA,WAAW,EAAXA;AALC,GAHT;AAUI,IAAA,KAAK,EAAGS,OAAO,CAACH,OAAO,IAAIC,KAAZ;AAVnB,KAWST,KAXT;AAYI,IAAA,QAAQ,EAAG,kBAAAY,IAAI;AAAA,aAAIZ,KAAK,CAACa,QAAN,CAAeD,IAAI,CAACZ,KAAK,CAACc,IAAP,CAAnB,CAAJ;AAAA,KAZnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAeMH,OAAO,CAACH,OAAO,IAAIC,KAAZ,CAAP,GACI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,yBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDA,KAAtD,CADJ,GAEI,KAjBV,CADJ;AAsBH,CApCM;AAsCPV,aAAa,CAACgB,SAAd,GAA0B;AACtBT,EAAAA,OAAO,EAAEV,SAAS,CAACoB,KADG;AAEtBf,EAAAA,SAAS,EAAEL,SAAS,CAACqB,MAFC;AAGtBb,EAAAA,KAAK,EAAER,SAAS,CAACqB,MAAV,CAAiBC;AAHF,CAA1B;;;;;;;;;;;;0BAtCanB,a","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { AppSelect } from '../';\n\nexport const AppFormSelect = ({\n                                  input,\n                                  className,\n                                  withoutNone,\n                                  type,\n                                  label,\n                                  required,\n                                  options,\n                                  meta: {\n                                      touched,\n                                      error\n                                  }\n                              }) => {\n\n    return (\n        <div className={ className + ' app-form-control__container'}>\n            <AppSelect\n                value={ input.value }\n                className={ 'app-form-control' }\n                { ...{\n                    type,\n                    label,\n                    options,\n                    required,\n                    withoutNone\n                } }\n                error={ Boolean(touched && error) }\n                { ...input }\n                onChange={ data => input.onChange(data[input.name]) }\n            />\n            { Boolean(touched && error)\n                ? <FormHelperText className=\"app-form-control__error\">{ error }</FormHelperText>\n                : false\n            }\n        </div>\n    );\n};\n\nAppFormSelect.propTypes = {\n    options: PropTypes.array,\n    className: PropTypes.string,\n    label: PropTypes.string.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}