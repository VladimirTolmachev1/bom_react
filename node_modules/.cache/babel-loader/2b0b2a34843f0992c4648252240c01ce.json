{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { ValidationService } from '../../../services';\nexport var resetPasswordValidation = function resetPasswordValidation(values) {\n  var errors = {};\n  var requiredFields = ['email', 'password', 'password_confirmation'];\n  requiredFields.forEach(function (field) {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (!ValidationService.email(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (values.password !== values.password_confirmation) {\n    errors.password_confirmation = 'Password does not match with previous';\n  }\n\n  return errors;\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(resetPasswordValidation, \"resetPasswordValidation\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ResetPassword/modules/reset-password.validation.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ResetPassword/modules/reset-password.validation.js"],"names":["ValidationService","resetPasswordValidation","values","errors","requiredFields","forEach","field","email","password","password_confirmation"],"mappings":";;;;;AAAA,SAASA,iBAAT,QAAkC,mBAAlC;AAEA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,MAAM,EAAI;AAC/C,MAAMC,MAAM,GAAG,EAAf;AAEA,MAAMC,cAAc,GAAG,CAAC,OAAD,EAAU,UAAV,EAAsB,uBAAtB,CAAvB;AAEAA,EAAAA,cAAc,CAACC,OAAf,CAAuB,UAAAC,KAAK,EAAI;AAC9B,QAAI,CAACJ,MAAM,CAACI,KAAD,CAAX,EAAoB;AAClBH,MAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,UAAhB;AACD;AACF,GAJD;;AAMA,MAAI,CAACN,iBAAiB,CAACO,KAAlB,CAAwBL,MAAM,CAACK,KAA/B,CAAL,EAA4C;AAC1CJ,IAAAA,MAAM,CAACI,KAAP,GAAe,uBAAf;AACD;;AAED,MAAIL,MAAM,CAACM,QAAP,KAAoBN,MAAM,CAACO,qBAA/B,EAAsD;AACpDN,IAAAA,MAAM,CAACM,qBAAP,GAA+B,uCAA/B;AACD;;AAED,SAAON,MAAP;AACD,CApBM;;;;;;;;;;0BAAMF,uB","sourcesContent":["import { ValidationService } from '../../../services';\n\nexport const resetPasswordValidation = values => {\n  const errors = {};\n\n  const requiredFields = ['email', 'password', 'password_confirmation'];\n\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (!ValidationService.email(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (values.password !== values.password_confirmation) {\n    errors.password_confirmation = 'Password does not match with previous';\n  }\n\n  return errors;\n};\n"]},"metadata":{},"sourceType":"module"}