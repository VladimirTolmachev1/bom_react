{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppAutoComplete/AppAutoComplete.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/lib/Creatable';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport { styles } from './AppAutoComplete.styles';\nimport { HelperService } from '/services';\nimport { autobind } from 'core-decorators';\nimport { Control, // Option,\nMenuAutocomplete, NoOptionsMessage, Placeholder, SingleValue, ValueContainer, MultiValue } from './components';\nvar components = {\n  Control: Control,\n  Menu: MenuAutocomplete,\n  MultiValue: MultiValue,\n  NoOptionsMessage: NoOptionsMessage,\n  //Option,\n  Placeholder: Placeholder,\n  SingleValue: SingleValue,\n  ValueContainer: ValueContainer\n};\nvar AppAutoComplete = (_dec = withStyles(styles, {\n  withTheme: true\n}), _dec(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AppAutoComplete, _PureComponent);\n\n  function AppAutoComplete(props) {\n    var _this;\n\n    _classCallCheck(this, AppAutoComplete);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppAutoComplete).call(this, props));\n    _this.state = {\n      customOptions: []\n    };\n    _this.inputDebouncer = HelperService.debounce(function () {\n      props.onInputChange.apply(props, arguments);\n    }, 500);\n    return _this;\n  }\n\n  _createClass(AppAutoComplete, [{\n    key: \"onMenuScrollToBottom\",\n    value: function onMenuScrollToBottom() {\n      //implementation of load pagination\n      var _this$props = this.props,\n          onMenuScrollToBottom = _this$props.onMenuScrollToBottom,\n          count = _this$props.count,\n          loading = _this$props.loading;\n      var options = this.getOptions();\n\n      if (!loading && options.length < count) {\n        onMenuScrollToBottom.apply(void 0, arguments);\n      }\n    }\n  }, {\n    key: \"onCreateOption\",\n    value: function onCreateOption(option) {\n      var onChange = this.props.onChange;\n      var customValue = {\n        label: option,\n        value: option\n      };\n      this.setState({\n        customOptions: _toConsumableArray(this.state.customOptions).concat([customValue])\n      });\n      onChange(customValue);\n    }\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      var options = this.props.options;\n      var customOptions = this.state.customOptions;\n      return options.concat(customOptions);\n    }\n  }, {\n    key: \"getSelectStyles\",\n    value: function getSelectStyles() {\n      var theme = this.props.theme;\n      return {\n        input: function input(base) {\n          return _objectSpread({}, base, {\n            color: theme.palette.text.primary,\n            '& input': {\n              font: 'inherit'\n            }\n          });\n        },\n        container: function container(base) {\n          return _objectSpread({}, base, {\n            height: '350px'\n          });\n        },\n        indicatorSeparator: function indicatorSeparator(provided) {\n          return _objectSpread({}, provided, {\n            width: 0\n          });\n        }\n      };\n    }\n  }, {\n    key: \"getCommonSelectOptions\",\n    value: function getCommonSelectOptions() {\n      var _this$props2 = this.props,\n          value = _this$props2.value,\n          selectedOption = _this$props2.selectedOption,\n          compareKey = _this$props2.compareKey,\n          withPagination = _this$props2.withPagination,\n          textFieldProps = _this$props2.textFieldProps,\n          loading = _this$props2.loading,\n          classes = _this$props2.classes;\n      var options = this.getOptions();\n      var selectValue = selectedOption || options.find(function (item) {\n        return item[compareKey] === value;\n      }) || null;\n\n      var config = _objectSpread({}, HelperService.pick(this.props, ['onFocus', 'onChange', 'isClearable', 'placeholder', 'isSearchable']), {\n        disabled: loading,\n        isLoading: loading,\n        onInputChange: this.inputDebouncer,\n        classes: classes,\n        styles: this.getSelectStyles(),\n        options: options,\n        components: components,\n        value: selectValue,\n        formatCreateLabel: function formatCreateLabel(inputValue) {\n          return \"Select custom: \".concat(inputValue);\n        },\n        textFieldProps: textFieldProps\n      });\n\n      if (withPagination) {\n        config.onMenuScrollToBottom = this.onMenuScrollToBottom;\n      }\n\n      return config;\n    }\n  }, {\n    key: \"renderPlainSelect\",\n    value: function renderPlainSelect() {\n      var _this$props3 = this.props,\n          classes = _this$props3.classes,\n          autoCompleteWrpClasses = _this$props3.autoCompleteWrpClasses;\n      return React.createElement(\"div\", {\n        className: classes.root + ' ' + autoCompleteWrpClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Select, Object.assign({}, this.getCommonSelectOptions(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          classes = _this$props4.classes,\n          isCreatable = _this$props4.isCreatable,\n          autoCompleteWrpClasses = _this$props4.autoCompleteWrpClasses;\n\n      if (!isCreatable) {\n        return this.renderPlainSelect();\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.root + ' ' + autoCompleteWrpClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(NoSsr, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(CreatableSelect, Object.assign({}, this.getCommonSelectOptions(), {\n        onCreateOption: this.onCreateOption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.divider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return AppAutoComplete;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onMenuScrollToBottom\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onMenuScrollToBottom\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onCreateOption\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onCreateOption\"), _class2.prototype)), _class2)) || _class);\nexport { AppAutoComplete as default };\nAppAutoComplete.propTypes = {\n  loading: PropTypes.bool,\n  onFocus: PropTypes.func,\n  count: PropTypes.number,\n  classes: PropTypes.any,\n  onInputChange: PropTypes.func,\n  styles: PropTypes.any,\n  options: PropTypes.array,\n  placeholder: PropTypes.string,\n  value: PropTypes.any,\n  isClearable: PropTypes.bool,\n  onChange: PropTypes.func,\n  theme: PropTypes.object,\n  compareKey: PropTypes.string,\n  isCreatable: PropTypes.bool,\n  withPagination: PropTypes.bool,\n  autoCompleteWrpClasses: PropTypes.string,\n  textFieldProps: PropTypes.object\n};\nAppAutoComplete.defaultProps = {\n  autoCompleteWrpClasses: '',\n  compareKey: 'value',\n  isCreatable: true,\n  withPagination: true,\n  textFieldProps: {}\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(components, \"components\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppAutoComplete/AppAutoComplete.js\");\n  reactHotLoader.register(AppAutoComplete, \"AppAutoComplete\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppAutoComplete/AppAutoComplete.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppAutoComplete/AppAutoComplete.js"],"names":["React","PureComponent","PropTypes","CreatableSelect","Select","withStyles","NoSsr","styles","HelperService","autobind","Control","MenuAutocomplete","NoOptionsMessage","Placeholder","SingleValue","ValueContainer","MultiValue","components","Menu","AppAutoComplete","withTheme","props","state","customOptions","inputDebouncer","debounce","onInputChange","onMenuScrollToBottom","count","loading","options","getOptions","length","option","onChange","customValue","label","value","setState","concat","theme","input","base","color","palette","text","primary","font","container","height","indicatorSeparator","provided","width","selectedOption","compareKey","withPagination","textFieldProps","classes","selectValue","find","item","config","pick","disabled","isLoading","getSelectStyles","formatCreateLabel","inputValue","autoCompleteWrpClasses","root","getCommonSelectOptions","isCreatable","renderPlainSelect","onCreateOption","divider","propTypes","bool","onFocus","func","number","any","array","placeholder","string","isClearable","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/lib/Creatable';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport { styles } from './AppAutoComplete.styles';\nimport { HelperService } from '/services';\nimport { autobind } from 'core-decorators';\n\nimport {\n    Control,\n    // Option,\n    MenuAutocomplete,\n    NoOptionsMessage,\n    Placeholder,\n    SingleValue,\n    ValueContainer,\n    MultiValue\n} from './components';\n\nconst components = {\n    Control,\n    Menu: MenuAutocomplete,\n    MultiValue,\n    NoOptionsMessage,\n    //Option,\n    Placeholder,\n    SingleValue,\n    ValueContainer\n};\n\nexport default @withStyles(styles, {withTheme: true})\n\nclass AppAutoComplete extends PureComponent {\n\n    state = {\n        customOptions: []\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.inputDebouncer = HelperService.debounce((...args) => {\n            props.onInputChange(...args);\n        }, 500);\n    }\n\n    @autobind\n    onMenuScrollToBottom(...args) {\n        //implementation of load pagination\n        const {onMenuScrollToBottom, count, loading} = this.props;\n        const options = this.getOptions();\n\n        if (!loading && options.length < count) {\n            onMenuScrollToBottom(...args);\n        }\n    }\n\n    @autobind\n    onCreateOption(option) {\n        const {onChange} = this.props;\n        const customValue = {\n            label: option,\n            value: option\n        };\n\n        this.setState({\n            customOptions: [\n                ...this.state.customOptions,\n                customValue\n            ]\n        });\n\n        onChange(customValue);\n    }\n\n    getOptions() {\n        const {options} = this.props;\n        const {customOptions} = this.state;\n\n        return options.concat(customOptions);\n    }\n\n    getSelectStyles() {\n        const {theme} = this.props;\n\n        return {\n            input: base => ({\n                ...base,\n                color: theme.palette.text.primary,\n                '& input': {\n                    font: 'inherit'\n                }\n            }),\n            container: base => ({\n                ...base,\n                height: '350px',\n            }),\n            indicatorSeparator: (provided) => ({\n                ...provided,\n                width: 0,\n            })\n        };\n    }\n\n    getCommonSelectOptions() {\n        const {\n            value,\n            selectedOption, // manualy set selected option from outer component\n            compareKey,\n            withPagination,\n            textFieldProps,\n            loading,\n            classes,\n\n        } = this.props;\n        const options = this.getOptions();\n        const selectValue = selectedOption || options.find(item => item[compareKey] === value) || null;\n\n        const config = {\n            ...HelperService.pick(this.props, [\n                'onFocus',\n                'onChange',\n                'isClearable',\n                'placeholder',\n                'isSearchable'\n            ]),\n            disabled: loading ,\n            isLoading:  loading ,\n            onInputChange: this.inputDebouncer,\n            classes:classes ,\n            styles: this.getSelectStyles(),\n            options: options,\n            components: components,\n            value:selectValue,\n            formatCreateLabel: inputValue => `Select custom: ${inputValue}`,\n            textFieldProps,\n        }\n\n        if(withPagination) {\n            config.onMenuScrollToBottom = this.onMenuScrollToBottom\n        }\n        return config;\n    }\n\n    renderPlainSelect() {\n        const {classes, autoCompleteWrpClasses} = this.props;\n        return (\n            <div className={ classes.root + ' ' + autoCompleteWrpClasses }>\n                <Select {  ...this.getCommonSelectOptions()} />\n            </div>\n        );\n    }\n\n    render() {\n        const {classes, isCreatable, autoCompleteWrpClasses} = this.props;\n\n        if(!isCreatable) {\n            return this.renderPlainSelect();\n        }\n\n        return (\n            <div className={ classes.root + ' ' + autoCompleteWrpClasses }>\n                <NoSsr>\n                    <CreatableSelect\n                        {...this.getCommonSelectOptions()}\n                        onCreateOption={ this.onCreateOption }\n                    />\n                    <div className={ classes.divider } />\n                </NoSsr>\n            </div>\n        );\n    }\n}\n\nAppAutoComplete.propTypes = {\n    loading: PropTypes.bool,\n    onFocus: PropTypes.func,\n    count: PropTypes.number,\n    classes: PropTypes.any,\n    onInputChange: PropTypes.func,\n    styles: PropTypes.any,\n    options: PropTypes.array,\n    placeholder: PropTypes.string,\n    value: PropTypes.any,\n    isClearable: PropTypes.bool,\n    onChange: PropTypes.func,\n    theme: PropTypes.object,\n    compareKey: PropTypes.string,\n    isCreatable: PropTypes.bool,\n    withPagination: PropTypes.bool,\n    autoCompleteWrpClasses: PropTypes.string,\n    textFieldProps: PropTypes.object,\n};\n\nAppAutoComplete.defaultProps = {\n    autoCompleteWrpClasses: '',\n    compareKey: 'value',\n    isCreatable: true,\n    withPagination: true,\n    textFieldProps: {},\n};\n"]},"metadata":{},"sourceType":"module"}