{"ast":null,"code":"import _regeneratorRuntime from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(patchDishExtrasSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getDishByIdSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(patchDishSizesSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(updateDishSaga),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(createDishSaga),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(dishesSaga);\n\nimport { takeLatest, all, call, put } from 'redux-saga/effects';\nimport DishesApiService from './dishes.api.service';\nimport { PATCH_DISH_EXTRAS_REQUEST, DISHES__GET_BY_ID_REQUEST } from './dishes.types';\nimport * as actions from './dishes.actions';\nexport function patchDishExtrasSaga(_ref) {\n  var payload, _ref2, data;\n\n  return _regeneratorRuntime.wrap(function patchDishExtrasSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(DishesApiService.patchExtras, payload.dishId, payload.extrasPayload);\n\n        case 4:\n          _ref2 = _context.sent;\n          data = _ref2.data;\n          _context.next = 8;\n          return put(actions.patchDishExtrasSuccess(data));\n\n        case 8:\n          return _context.abrupt(\"return\", data);\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](1);\n          console.error(_context.t0);\n          _context.next = 16;\n          return put(actions.patchDishExtrasError(_context.t0));\n\n        case 16:\n          return _context.abrupt(\"return\", Promise.reject(_context.t0));\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[1, 11]]);\n}\nexport function getDishByIdSaga(_ref3) {\n  var id, _ref4, data;\n\n  return _regeneratorRuntime.wrap(function getDishByIdSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          id = _ref3.payload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(DishesApiService.getById, id);\n\n        case 4:\n          _ref4 = _context2.sent;\n          data = _ref4.data;\n          _context2.next = 8;\n          return put(actions.getDishByIdSuccess(data));\n\n        case 8:\n          return _context2.abrupt(\"return\", data);\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.error(_context2.t0);\n          _context2.next = 16;\n          return put(actions.getDishByIdError(_context2.t0));\n\n        case 16:\n          return _context2.abrupt(\"return\", Promise.reject(_context2.t0));\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[1, 11]]);\n}\nexport function patchDishSizesSaga(_ref5) {\n  var payload, _ref6, data;\n\n  return _regeneratorRuntime.wrap(function patchDishSizesSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref5.payload;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(DishesApiService.patchSizes, payload.dishId, payload.sizesPayload);\n\n        case 4:\n          _ref6 = _context3.sent;\n          data = _ref6.data;\n          _context3.next = 8;\n          return put(actions.patchDishSizesSuccess(data));\n\n        case 8:\n          return _context3.abrupt(\"return\", data);\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.error(_context3.t0);\n          _context3.next = 16;\n          return put(actions.patchDishSizesError(_context3.t0));\n\n        case 16:\n          return _context3.abrupt(\"return\", Promise.reject(_context3.t0));\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this, [[1, 11]]);\n}\nexport function updateDishSaga(_ref7) {\n  var payload, _ref8, data;\n\n  return _regeneratorRuntime.wrap(function updateDishSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          payload = _ref7.payload;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(DishesApiService.updateDish, payload);\n\n        case 4:\n          _ref8 = _context4.sent;\n          data = _ref8.data;\n          _context4.next = 8;\n          return put(actions.updateDishSuccess(data));\n\n        case 8:\n          return _context4.abrupt(\"return\", data);\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](1);\n          console.error(_context4.t0);\n          _context4.next = 16;\n          return put(actions.updateDishError(_context4.t0));\n\n        case 16:\n          return _context4.abrupt(\"return\", Promise.reject(_context4.t0));\n\n        case 17:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this, [[1, 11]]);\n}\nexport function createDishSaga(_ref9) {\n  var payload, _ref10, data;\n\n  return _regeneratorRuntime.wrap(function createDishSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          payload = _ref9.payload;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return call(DishesApiService.createDish, payload);\n\n        case 4:\n          _ref10 = _context5.sent;\n          data = _ref10.data;\n          _context5.next = 8;\n          return put(actions.createDishSuccess(data));\n\n        case 8:\n          return _context5.abrupt(\"return\", data);\n\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](1);\n          console.error(_context5.t0);\n          _context5.next = 16;\n          return put(actions.createDishError(_context5.t0));\n\n        case 16:\n          return _context5.abrupt(\"return\", Promise.reject(_context5.t0));\n\n        case 17:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, this, [[1, 11]]);\n}\nexport function dishesSaga() {\n  return _regeneratorRuntime.wrap(function dishesSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return all([takeLatest(PATCH_DISH_EXTRAS_REQUEST, patchDishExtrasSaga), takeLatest(DISHES__GET_BY_ID_REQUEST, getDishByIdSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, this);\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(patchDishExtrasSaga, \"patchDishExtrasSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.sagas.js\");\n  reactHotLoader.register(getDishByIdSaga, \"getDishByIdSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.sagas.js\");\n  reactHotLoader.register(patchDishSizesSaga, \"patchDishSizesSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.sagas.js\");\n  reactHotLoader.register(updateDishSaga, \"updateDishSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.sagas.js\");\n  reactHotLoader.register(createDishSaga, \"createDishSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.sagas.js\");\n  reactHotLoader.register(dishesSaga, \"dishesSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.sagas.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.sagas.js"],"names":["patchDishExtrasSaga","getDishByIdSaga","patchDishSizesSaga","updateDishSaga","createDishSaga","dishesSaga","takeLatest","all","call","put","DishesApiService","PATCH_DISH_EXTRAS_REQUEST","DISHES__GET_BY_ID_REQUEST","actions","payload","patchExtras","dishId","extrasPayload","data","patchDishExtrasSuccess","console","error","patchDishExtrasError","Promise","reject","id","getById","getDishByIdSuccess","getDishByIdError","patchSizes","sizesPayload","patchDishSizesSuccess","patchDishSizesError","updateDish","updateDishSuccess","updateDishError","createDish","createDishSuccess","createDishError"],"mappings":"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","sourcesContent":["import { takeLatest, all, call, put } from 'redux-saga/effects';\n\nimport DishesApiService from './dishes.api.service';\n\nimport {\n  PATCH_DISH_EXTRAS_REQUEST,\n  DISHES__GET_BY_ID_REQUEST,\n} from './dishes.types';\n\nimport * as actions from './dishes.actions';\n\nexport function* patchDishExtrasSaga({ payload }) {\n  try {\n    const { data } = yield call(\n      DishesApiService.patchExtras,\n      payload.dishId,\n      payload.extrasPayload,\n    );\n\n    yield put(actions.patchDishExtrasSuccess(data));\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    yield put(actions.patchDishExtrasError(e));\n    return Promise.reject(e);\n  }\n}\n\nexport function* getDishByIdSaga({ payload: id }) {\n  try {\n    const { data } = yield call(DishesApiService.getById, id);\n\n    yield put(actions.getDishByIdSuccess(data));\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    yield put(actions.getDishByIdError(e));\n    return Promise.reject(e);\n  }\n}\n\nexport function* patchDishSizesSaga({ payload }) {\n  try {\n    const { data } = yield call(\n      DishesApiService.patchSizes,\n      payload.dishId,\n      payload.sizesPayload,\n    );\n\n    yield put(actions.patchDishSizesSuccess(data));\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    yield put(actions.patchDishSizesError(e));\n    return Promise.reject(e);\n  }\n}\n\nexport function* updateDishSaga({ payload }) {\n  try {\n    const { data } = yield call(DishesApiService.updateDish, payload);\n\n    yield put(actions.updateDishSuccess(data));\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    yield put(actions.updateDishError(e));\n    return Promise.reject(e);\n  }\n}\n\nexport function* createDishSaga({ payload }) {\n  try {\n    const { data } = yield call(DishesApiService.createDish, payload);\n    yield put(actions.createDishSuccess(data));\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    yield put(actions.createDishError(e));\n    return Promise.reject(e);\n  }\n}\n\nexport function* dishesSaga() {\n  yield all([\n    takeLatest(PATCH_DISH_EXTRAS_REQUEST, patchDishExtrasSaga),\n    takeLatest(DISHES__GET_BY_ID_REQUEST, getDishByIdSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}