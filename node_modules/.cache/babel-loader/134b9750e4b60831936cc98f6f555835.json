{"ast":null,"code":"import _regeneratorRuntime from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(putItemToCheckoutSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(updateCheckoutItemSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(dishOrderModalSaga);\n\nimport { takeLatest, all, put, select } from 'redux-saga/effects';\nimport { DISH_ORDER_MODAL__TRIGGER_PUT_ITEM_TO_CHECKOUT, DISH_ORDER_MODAL__TRIGGER_UPDATING_CHECKOUT_ITEM } from './dish-order-modal.types';\nimport { orderItemFormValuesSelector } from '../../../components/forms/selectors';\nimport { closeDishOrderModal } from './dish-order-modal.actions';\nimport { putItemToCheckout, updateCheckoutItem } from '../../checkout';\nimport { showToast } from '../../../scenes/Toasts/modules';\n\nfunction putItemToCheckoutSaga() {\n  var item, withDishId;\n  return _regeneratorRuntime.wrap(function putItemToCheckoutSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return select(orderItemFormValuesSelector);\n\n        case 3:\n          item = _context.sent;\n          withDishId = _objectSpread({}, item);\n\n          if (!withDishId.dish_id) {\n            withDishId.dish_id = withDishId.id;\n          }\n\n          _context.next = 8;\n          return put(putItemToCheckout(withDishId));\n\n        case 8:\n          _context.next = 10;\n          return put(closeDishOrderModal());\n\n        case 10:\n          _context.next = 17;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 17;\n          return put(showToast({\n            text: 'Some error occured while creating checkout item',\n            type: 'error'\n          }));\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 12]]);\n}\n\nfunction updateCheckoutItemSaga() {\n  var item, newItem;\n  return _regeneratorRuntime.wrap(function updateCheckoutItemSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return select(orderItemFormValuesSelector);\n\n        case 3:\n          item = _context2.sent;\n          newItem = _objectSpread({}, item);\n\n          if (newItem.selectedSize && typeof newItem.selectedSize === 'object') {\n            newItem.selectedSize = newItem.selectedSize.id;\n          }\n\n          _context2.next = 8;\n          return put(updateCheckoutItem(newItem));\n\n        case 8:\n          _context2.next = 10;\n          return put(closeDishOrderModal());\n\n        case 10:\n          _context2.next = 17;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 17;\n          return put(showToast({\n            text: 'Some error occured while updating checkout item',\n            type: 'error'\n          }));\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[0, 12]]);\n}\n\nexport function dishOrderModalSaga() {\n  return _regeneratorRuntime.wrap(function dishOrderModalSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeLatest(DISH_ORDER_MODAL__TRIGGER_PUT_ITEM_TO_CHECKOUT, putItemToCheckoutSaga), takeLatest(DISH_ORDER_MODAL__TRIGGER_UPDATING_CHECKOUT_ITEM, updateCheckoutItemSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(putItemToCheckoutSaga, \"putItemToCheckoutSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/dish-order/dish-order-modal.sagas.js\");\n  reactHotLoader.register(updateCheckoutItemSaga, \"updateCheckoutItemSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/dish-order/dish-order-modal.sagas.js\");\n  reactHotLoader.register(dishOrderModalSaga, \"dishOrderModalSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/dish-order/dish-order-modal.sagas.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/dish-order/dish-order-modal.sagas.js"],"names":["putItemToCheckoutSaga","updateCheckoutItemSaga","dishOrderModalSaga","takeLatest","all","put","select","DISH_ORDER_MODAL__TRIGGER_PUT_ITEM_TO_CHECKOUT","DISH_ORDER_MODAL__TRIGGER_UPDATING_CHECKOUT_ITEM","orderItemFormValuesSelector","closeDishOrderModal","putItemToCheckout","updateCheckoutItem","showToast","item","withDishId","dish_id","id","console","error","text","type","newItem","selectedSize"],"mappings":";;;;;;;;;;yBAWUA,qB;;;yBAuBAC,sB;;;yBAuBOC,kB;;AAzDjB,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,MAA/B,QAA6C,oBAA7C;AACA,SACEC,8CADF,EAEEC,gDAFF,QAGO,0BAHP;AAKA,SAASC,2BAAT,QAA4C,qCAA5C;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,gBAAtD;AACA,SAASC,SAAT,QAA0B,gCAA1B;;AAEA,SAAUb,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEiB,iBAAMM,MAAM,CAACG,2BAAD,CAAZ;;AAFjB;AAEUK,UAAAA,IAFV;AAIUC,UAAAA,UAJV,qBAI4BD,IAJ5B;;AAMI,cAAI,CAACC,UAAU,CAACC,OAAhB,EAAyB;AACvBD,YAAAA,UAAU,CAACC,OAAX,GAAqBD,UAAU,CAACE,EAAhC;AACD;;AARL;AAUI,iBAAMZ,GAAG,CAACM,iBAAiB,CAACI,UAAD,CAAlB,CAAT;;AAVJ;AAAA;AAWI,iBAAMV,GAAG,CAACK,mBAAmB,EAApB,CAAT;;AAXJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaIQ,UAAAA,OAAO,CAACC,KAAR;AAbJ;AAcI,iBAAMd,GAAG,CACPQ,SAAS,CAAC;AACRO,YAAAA,IAAI,EAAE,iDADE;AAERC,YAAAA,IAAI,EAAE;AAFE,WAAD,CADF,CAAT;;AAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBA,SAAUpB,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEiB,iBAAMK,MAAM,CAACG,2BAAD,CAAZ;;AAFjB;AAEUK,UAAAA,IAFV;AAIUQ,UAAAA,OAJV,qBAIyBR,IAJzB;;AAMI,cAAIQ,OAAO,CAACC,YAAR,IAAwB,OAAOD,OAAO,CAACC,YAAf,KAAgC,QAA5D,EAAsE;AACpED,YAAAA,OAAO,CAACC,YAAR,GAAuBD,OAAO,CAACC,YAAR,CAAqBN,EAA5C;AACD;;AARL;AAUI,iBAAMZ,GAAG,CAACO,kBAAkB,CAACU,OAAD,CAAnB,CAAT;;AAVJ;AAAA;AAWI,iBAAMjB,GAAG,CAACK,mBAAmB,EAApB,CAAT;;AAXJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaIQ,UAAAA,OAAO,CAACC,KAAR;AAbJ;AAcI,iBAAMd,GAAG,CACPQ,SAAS,CAAC;AACRO,YAAAA,IAAI,EAAE,iDADE;AAERC,YAAAA,IAAI,EAAE;AAFE,WAAD,CADF,CAAT;;AAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBA,OAAO,SAAUnB,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,GAAG,CAAC,CACRD,UAAU,CACRI,8CADQ,EAERP,qBAFQ,CADF,EAKRG,UAAU,CACRK,gDADQ,EAERP,sBAFQ,CALF,CAAD,CAAT;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;0BA9CGD,qB;0BAuBAC,sB;0BAuBOC,kB","sourcesContent":["import { takeLatest, all, put, select } from 'redux-saga/effects';\nimport {\n  DISH_ORDER_MODAL__TRIGGER_PUT_ITEM_TO_CHECKOUT,\n  DISH_ORDER_MODAL__TRIGGER_UPDATING_CHECKOUT_ITEM,\n} from './dish-order-modal.types';\n\nimport { orderItemFormValuesSelector } from '../../../components/forms/selectors';\nimport { closeDishOrderModal } from './dish-order-modal.actions';\nimport { putItemToCheckout, updateCheckoutItem } from '../../checkout';\nimport { showToast } from '../../../scenes/Toasts/modules';\n\nfunction* putItemToCheckoutSaga() {\n  try {\n    const item = yield select(orderItemFormValuesSelector);\n\n    const withDishId = { ...item };\n\n    if (!withDishId.dish_id) {\n      withDishId.dish_id = withDishId.id;\n    }\n\n    yield put(putItemToCheckout(withDishId));\n    yield put(closeDishOrderModal());\n  } catch (error) {\n    console.error(error);\n    yield put(\n      showToast({\n        text: 'Some error occured while creating checkout item',\n        type: 'error',\n      }),\n    );\n  }\n}\n\nfunction* updateCheckoutItemSaga() {\n  try {\n    const item = yield select(orderItemFormValuesSelector);\n\n    const newItem = { ...item };\n\n    if (newItem.selectedSize && typeof newItem.selectedSize === 'object') {\n      newItem.selectedSize = newItem.selectedSize.id;\n    }\n\n    yield put(updateCheckoutItem(newItem));\n    yield put(closeDishOrderModal());\n  } catch (error) {\n    console.error(error);\n    yield put(\n      showToast({\n        text: 'Some error occured while updating checkout item',\n        type: 'error',\n      }),\n    );\n  }\n}\n\nexport function* dishOrderModalSaga() {\n  yield all([\n    takeLatest(\n      DISH_ORDER_MODAL__TRIGGER_PUT_ITEM_TO_CHECKOUT,\n      putItemToCheckoutSaga,\n    ),\n    takeLatest(\n      DISH_ORDER_MODAL__TRIGGER_UPDATING_CHECKOUT_ITEM,\n      updateCheckoutItemSaga,\n    ),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}