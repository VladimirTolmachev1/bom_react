{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishModal/components/DishModalSizes/DishModalSizes.js\",\n    _class;\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { Fragment } from 'react';\nimport { FieldArray } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { DishAutocomplete } from '/scenes/DishAutocomplete';\nimport { DishModalSizeItem } from '../';\nimport { autobind } from 'core-decorators';\n\nvar renderSizes = function renderSizes(_ref) {\n  var fields = _ref.fields,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      submitFailed = _ref$meta.submitFailed;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, fields.map(function (sizeItem, index) {\n    return React.createElement(DishModalSizeItem, Object.assign({\n      key: index\n    }, {\n      sizeItem: sizeItem,\n      fields: fields,\n      index: index\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }));\n  }), React.createElement(Button, {\n    onClick: function onClick() {\n      return fields.push({});\n    },\n    color: 'primary',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Add Size\"), (touched || submitFailed) && error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, error));\n};\n\nexport var DishModalSizes = (_class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DishModalSizes, _React$Component);\n\n  function DishModalSizes() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DishModalSizes);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DishModalSizes)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      copyFrom: ''\n    };\n    return _this;\n  }\n\n  _createClass(DishModalSizes, [{\n    key: \"onChangeDishAutoComplete\",\n    value: function onChangeDishAutoComplete(dish) {\n      var setSameSize = this.props.setSameSize;\n      this.setState({\n        copyFrom: dish.label\n      });\n      setSameSize(dish);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var category_id = this.props.category_id;\n      var copyFrom = this.state.copyFrom;\n      return React.createElement(\"div\", {\n        className: 'dish-modal_sizes-section',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Copy sizes from: \"), React.createElement(DishAutocomplete, {\n        withSizes: true,\n        onChange: this.onChangeDishAutoComplete,\n        value: copyFrom,\n        category_id: category_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(FieldArray, {\n        name: \"sizes\",\n        component: renderSizes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return DishModalSizes;\n}(React.Component), (_applyDecoratedDescriptor(_class.prototype, \"onChangeDishAutoComplete\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onChangeDishAutoComplete\"), _class.prototype)), _class);\nDishModalSizes.propTypes = {\n  setSameSize: PropTypes.func,\n  category_id: PropTypes.string\n};\nDishModalSizes.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(renderSizes, \"renderSizes\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishModal/components/DishModalSizes/DishModalSizes.js\");\n  reactHotLoader.register(DishModalSizes, \"DishModalSizes\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishModal/components/DishModalSizes/DishModalSizes.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishModal/components/DishModalSizes/DishModalSizes.js"],"names":["React","Fragment","FieldArray","PropTypes","Button","DishAutocomplete","DishModalSizeItem","autobind","renderSizes","fields","meta","touched","error","submitFailed","map","sizeItem","index","push","DishModalSizes","state","copyFrom","dish","setSameSize","props","setState","label","category_id","onChangeDishAutoComplete","Component","propTypes","func","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport {  FieldArray } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { DishAutocomplete } from '/scenes/DishAutocomplete';\n\nimport { DishModalSizeItem } from '../';\nimport { autobind } from 'core-decorators';\n\nconst renderSizes = ({fields, meta: {touched, error, submitFailed}}) => (\n    <Fragment>\n        { fields.map((sizeItem, index) => (\n            <DishModalSizeItem\n                key={ index }\n                { ...{\n                    sizeItem,\n                    fields,\n                    index\n                } }\n            />\n        )) }\n        <Button\n            onClick={ () => fields.push({}) }\n            color={ 'primary' }>\n            Add Size\n        </Button>\n        { (touched || submitFailed) && error && <span>{ error }</span> }\n    </Fragment>\n);\n\nexport class DishModalSizes extends React.Component {\n    state = {\n        copyFrom: ''\n    };\n\n    @autobind\n    onChangeDishAutoComplete(dish) {\n        const {setSameSize} = this.props;\n        this.setState({copyFrom: dish.label});\n\n        setSameSize(dish);\n    }\n\n    render() {\n        const {category_id} = this.props;\n        const {copyFrom} = this.state;\n\n        return (\n            <div className={ 'dish-modal_sizes-section' }>\n                <h5>Copy sizes from: </h5>\n                <DishAutocomplete\n                    withSizes\n                    onChange={ this.onChangeDishAutoComplete }\n                    value={ copyFrom }\n                    category_id={ category_id }/>\n                <FieldArray name=\"sizes\" component={ renderSizes }/>\n            </div>\n        );\n    }\n}\n\nDishModalSizes.propTypes = {\n    setSameSize: PropTypes.func,\n    category_id: PropTypes.string\n};\nDishModalSizes.defaultProps = {};\n\n"]},"metadata":{},"sourceType":"module"}