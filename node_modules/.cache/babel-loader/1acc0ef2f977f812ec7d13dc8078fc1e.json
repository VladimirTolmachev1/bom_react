{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/dish/base/BaseDishModal.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tab, Tabs, Divider, Grid, Typography } from '@material-ui/core';\nimport { autobind } from 'core-decorators';\nimport { connect } from 'react-redux';\nimport { BaseModal } from '../../BaseModal';\nimport { DishInfoForm, ExtrasForm, SizesForm } from '../../../../components/forms';\nimport { DishAutocompleteSection, ExtrasListsPreview, ExtrasSuggestionSection } from './components';\nimport { dishModalStepsValues as steps, dishModalStepsNamesByValues as stepNamesByValues } from '../../../../modules/modals/dish/dish-modal.utils';\nimport { extrasFromCategorySuggestionsSelector, initialDishFormsValuesSelector, dishModalActiveStepSelector, isDishFormInvalidSelector, isDishFormPristineSelector, managedDishIdSelector, setDishModal, clearDishModal, resetDishModalForms } from '../../../../modules/modals/dish';\nimport { dishListFiltersSelector, hasExtras, hasSizes, isSidngleDishLoadingSelector } from '../../../../modules/dishes';\nimport { copySizesToForm as _copySizesToForm, lastSizesCopiedFromNameSelector, lastExtrasCopiedFromNameSelector, copyExtrasToForm as _copyExtrasToForm } from '../../../../modules/forms/plugins';\nimport { getCategoryById as _getCategoryById } from '../../../../modules/categories';\n\nvar mapSizesToOptions = function mapSizesToOptions(sizes) {\n  return sizes.map(function (_ref) {\n    var id = _ref.id,\n        name = _ref.name;\n    return {\n      name: name,\n      value: id\n    };\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: isSidngleDishLoadingSelector(state),\n    isInvalid: isDishFormInvalidSelector(state),\n    isPristine: isDishFormPristineSelector(state),\n    activeStep: dishModalActiveStepSelector(state),\n    category_id: dishListFiltersSelector(state).category_id,\n    lastSizesCopiedFrom: lastSizesCopiedFromNameSelector(state),\n    lastExtrasCopiedFrom: lastExtrasCopiedFromNameSelector(state),\n    extrasSuggestions: extrasFromCategorySuggestionsSelector(state),\n    initialValues: initialDishFormsValuesSelector(state),\n    dishId: managedDishIdSelector(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeActiveStep: function changeActiveStep(_, activeStep) {\n      return dispatch(setDishModal({\n        activeStep: activeStep\n      }));\n    },\n    onClose: function onClose() {\n      return dispatch(clearDishModal());\n    },\n    onSecondaryAction: function onSecondaryAction() {\n      return dispatch(resetDishModalForms());\n    },\n    copyExtrasToForm: function copyExtrasToForm(extras) {\n      return dispatch(_copyExtrasToForm(extras));\n    },\n    copySizesToForm: function copySizesToForm(sizes) {\n      return dispatch(_copySizesToForm(sizes));\n    },\n    getCategoryById: function getCategoryById(id) {\n      return dispatch(_getCategoryById({\n        id: id\n      }));\n    }\n  };\n};\n\nvar BaseDishModal = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(BaseDishModal, _PureComponent);\n\n  function BaseDishModal() {\n    var _getPrototypeOf2, _this$bodyRenderByAct;\n\n    var _this;\n\n    _classCallCheck(this, BaseDishModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BaseDishModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.bodyRenderByActiveStep = (_this$bodyRenderByAct = {}, _defineProperty(_this$bodyRenderByAct, steps.INFO, _this.renderInfoSection), _defineProperty(_this$bodyRenderByAct, steps.SIZES, _this.renderSizesSection), _defineProperty(_this$bodyRenderByAct, steps.EXTRAS, _this.renderExtrasSection), _this$bodyRenderByAct);\n    return _this;\n  }\n\n  _createClass(BaseDishModal, [{\n    key: \"renderInfoSection\",\n    value: function renderInfoSection() {\n      var initialValues = this.props.initialValues;\n      return React.createElement(DishInfoForm, {\n        initialValues: initialValues.dishInfoForm,\n        initialSizes: initialValues.dishSizesForm.sizes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"handleCopyExtrasFromDish\",\n    value: function handleCopyExtrasFromDish(dish) {\n      var copyExtrasToForm = this.props.copyExtrasToForm;\n      var extrasToCopy = dish.extras,\n          extrasListsToCopy = dish.extra_lists,\n          copiedFrom = dish.label;\n      copyExtrasToForm({\n        extrasToCopy: extrasToCopy,\n        extrasListsToCopy: extrasListsToCopy,\n        copiedFrom: copiedFrom\n      });\n    }\n  }, {\n    key: \"handleCopySizesFromDish\",\n    value: function handleCopySizesFromDish(dish) {\n      var copySizesToForm = this.props.copySizesToForm;\n      copySizesToForm(dish.sizes, dish.label);\n    }\n  }, {\n    key: \"renderSizesSection\",\n    value: function renderSizesSection() {\n      var _this$props = this.props,\n          category_id = _this$props.category_id,\n          lastSizesCopiedFrom = _this$props.lastSizesCopiedFrom,\n          initialValues = _this$props.initialValues,\n          dishId = _this$props.dishId;\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 32,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(DishAutocompleteSection, {\n        withSizes: true,\n        valuesToExclude: [dishId],\n        placeholder: \"Copy sizes from...\",\n        onChange: this.handleCopySizesFromDish,\n        category_id: category_id,\n        value: lastSizesCopiedFrom,\n        optionFilter: hasSizes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(SizesForm, {\n        initialValues: initialValues.dishSizesForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"onModalEnter\",\n    value: function onModalEnter() {\n      var _this$props2 = this.props,\n          onEnter = _this$props2.onEnter,\n          getCategoryById = _this$props2.getCategoryById,\n          category_id = _this$props2.category_id;\n      category_id && getCategoryById(category_id);\n      onEnter && onEnter();\n    }\n  }, {\n    key: \"renderExtrasSection\",\n    value: function renderExtrasSection() {\n      var _this$props3 = this.props,\n          initialValues = _this$props3.initialValues,\n          extrasFormProps = _this$props3.extrasFormProps,\n          lastExtrasCopiedForm = _this$props3.lastExtrasCopiedForm,\n          extrasSuggestions = _this$props3.extrasSuggestions,\n          copyExtrasToForm = _this$props3.copyExtrasToForm,\n          dishId = _this$props3.dishId;\n      var category_id = this.props.category_id;\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 32,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(DishAutocompleteSection, {\n        withExtras: true,\n        valuesToExclude: [dishId],\n        placeholder: \"Copy extras from ...\",\n        onChange: this.handleCopyExtrasFromDish,\n        category_id: category_id,\n        value: lastExtrasCopiedForm,\n        optionFilter: hasExtras,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(ExtrasSuggestionSection, {\n        suggestions: extrasSuggestions,\n        onExtraSelect: function onExtraSelect(extra) {\n          return copyExtrasToForm({\n            extrasToCopy: [extra]\n          });\n        },\n        onExtraListSelect: function onExtraListSelect(list) {\n          return copyExtrasToForm({\n            extrasListsToCopy: [list]\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(ExtrasForm, Object.assign({\n        GroupedExtrasListsComponent: ExtrasListsPreview,\n        initialValues: initialValues.dishExtrasForm,\n        extrasSectionHeader: React.createElement(Typography, {\n          variant: \"subtitle1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, \"Single extras:\"),\n        canSetTargetSize: true,\n        sizesOptions: mapSizesToOptions(initialValues.dishSizesForm.sizes)\n      }, extrasFormProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle() {\n      var _this$props4 = this.props,\n          activeStep = _this$props4.activeStep,\n          changeActiveStep = _this$props4.changeActiveStep,\n          header = _this$props4.header,\n          isExtrasTabDisabled = _this$props4.isExtrasTabDisabled;\n      return React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \" \", header, \" \"), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        value: activeStep,\n        onChange: changeActiveStep,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        label: \"Info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(Tab, {\n        label: \"Sizes\",\n        disabled: isExtrasTabDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(Tab, {\n        label: \"Extras\",\n        disabled: isExtrasTabDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"getSubmitBtnText\",\n    value: function getSubmitBtnText() {\n      var _this$props5 = this.props,\n          activeStep = _this$props5.activeStep,\n          customSubmitBtnText = _this$props5.customSubmitBtnText;\n      return customSubmitBtnText || \"Save \".concat(stepNamesByValues[activeStep]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          open = _this$props6.open,\n          onClose = _this$props6.onClose,\n          onSecondaryAction = _this$props6.onSecondaryAction,\n          isInvalid = _this$props6.isInvalid,\n          isLoading = _this$props6.isLoading,\n          isPristine = _this$props6.isPristine,\n          activeStep = _this$props6.activeStep,\n          onFormSubmit = _this$props6.onFormSubmit,\n          customModalBody = _this$props6.customModalBody,\n          isSubmitDisabled = _this$props6.isSubmitDisabled,\n          baseModalProps = _objectWithoutProperties(_this$props6, [\"open\", \"onClose\", \"onSecondaryAction\", \"isInvalid\", \"isLoading\", \"isPristine\", \"activeStep\", \"onFormSubmit\", \"customModalBody\", \"isSubmitDisabled\"]);\n\n      var submitBtnText = this.getSubmitBtnText();\n      return React.createElement(BaseModal, Object.assign({\n        title: this.renderTitle(),\n        isLoading: isLoading,\n        onSubmit: onFormSubmit,\n        isSubmitDisabled: isSubmitDisabled || isLoading || isInvalid || isPristine,\n        onClose: onClose,\n        open: open,\n        onSecondaryAction: onSecondaryAction,\n        submitBtnText: submitBtnText\n      }, baseModalProps || {}, {\n        onEnter: this.onModalEnter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }), customModalBody || this.bodyRenderByActiveStep[activeStep]());\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return BaseDishModal;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"renderInfoSection\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"renderInfoSection\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"handleCopyExtrasFromDish\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"handleCopyExtrasFromDish\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"handleCopySizesFromDish\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"handleCopySizesFromDish\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"renderSizesSection\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"renderSizesSection\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onModalEnter\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onModalEnter\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"renderExtrasSection\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"renderExtrasSection\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"renderTitle\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"renderTitle\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"getSubmitBtnText\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"getSubmitBtnText\"), _class2.prototype)), _class2)) || _class);\nexport { BaseDishModal as default };\nBaseDishModal.propTypes = {\n  onSubmit: PropTypes.func,\n  restaurant_id: PropTypes.string,\n  isInvalid: PropTypes.bool,\n  extrasFormProps: PropTypes.object\n};\nBaseDishModal.defaultProps = {\n  extrasFormProps: {},\n  initialValues: {\n    dishInfoForm: {\n      name: '',\n      description: ''\n    },\n    dishExtrasForm: {\n      extras: [],\n      extra_lists: []\n    },\n    dishSizesForm: {\n      sizes: []\n    }\n  }\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapSizesToOptions, \"mapSizesToOptions\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/dish/base/BaseDishModal.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/dish/base/BaseDishModal.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/dish/base/BaseDishModal.js\");\n  reactHotLoader.register(BaseDishModal, \"BaseDishModal\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/dish/base/BaseDishModal.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/dish/base/BaseDishModal.js"],"names":["React","PureComponent","PropTypes","Tab","Tabs","Divider","Grid","Typography","autobind","connect","BaseModal","DishInfoForm","ExtrasForm","SizesForm","DishAutocompleteSection","ExtrasListsPreview","ExtrasSuggestionSection","dishModalStepsValues","steps","dishModalStepsNamesByValues","stepNamesByValues","extrasFromCategorySuggestionsSelector","initialDishFormsValuesSelector","dishModalActiveStepSelector","isDishFormInvalidSelector","isDishFormPristineSelector","managedDishIdSelector","setDishModal","clearDishModal","resetDishModalForms","dishListFiltersSelector","hasExtras","hasSizes","isSidngleDishLoadingSelector","copySizesToForm","lastSizesCopiedFromNameSelector","lastExtrasCopiedFromNameSelector","copyExtrasToForm","getCategoryById","mapSizesToOptions","sizes","map","id","name","value","mapStateToProps","state","isLoading","isInvalid","isPristine","activeStep","category_id","lastSizesCopiedFrom","lastExtrasCopiedFrom","extrasSuggestions","initialValues","dishId","mapDispatchToProps","dispatch","changeActiveStep","_","onClose","onSecondaryAction","extras","BaseDishModal","bodyRenderByActiveStep","INFO","renderInfoSection","SIZES","renderSizesSection","EXTRAS","renderExtrasSection","props","dishInfoForm","dishSizesForm","dish","extrasToCopy","extrasListsToCopy","extra_lists","copiedFrom","label","handleCopySizesFromDish","onEnter","extrasFormProps","lastExtrasCopiedForm","handleCopyExtrasFromDish","extra","list","dishExtrasForm","header","isExtrasTabDisabled","customSubmitBtnText","open","onFormSubmit","customModalBody","isSubmitDisabled","baseModalProps","submitBtnText","getSubmitBtnText","renderTitle","onModalEnter","propTypes","onSubmit","func","restaurant_id","string","bool","object","defaultProps","description"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tab, Tabs, Divider, Grid, Typography } from '@material-ui/core';\nimport { autobind } from 'core-decorators';\nimport { connect } from 'react-redux';\n\nimport { BaseModal } from '../../BaseModal';\nimport {\n  DishInfoForm,\n  ExtrasForm,\n  SizesForm,\n} from '../../../../components/forms';\nimport {\n  DishAutocompleteSection,\n  ExtrasListsPreview,\n  ExtrasSuggestionSection,\n} from './components';\n\nimport {\n  dishModalStepsValues as steps,\n  dishModalStepsNamesByValues as stepNamesByValues,\n} from '../../../../modules/modals/dish/dish-modal.utils';\n\nimport {\n  extrasFromCategorySuggestionsSelector,\n  initialDishFormsValuesSelector,\n  dishModalActiveStepSelector,\n  isDishFormInvalidSelector,\n  isDishFormPristineSelector,\n  managedDishIdSelector,\n  setDishModal,\n  clearDishModal,\n  resetDishModalForms,\n} from '../../../../modules/modals/dish';\n\nimport {\n  dishListFiltersSelector,\n  hasExtras,\n  hasSizes,\n  isSidngleDishLoadingSelector,\n} from '../../../../modules/dishes';\n\nimport {\n  copySizesToForm,\n  lastSizesCopiedFromNameSelector,\n  lastExtrasCopiedFromNameSelector,\n  copyExtrasToForm,\n} from '../../../../modules/forms/plugins';\n\nimport { getCategoryById } from '../../../../modules/categories';\n\nconst mapSizesToOptions = sizes =>\n  sizes.map(({ id, name }) => ({\n    name,\n    value: id,\n  }));\n\nconst mapStateToProps = state => ({\n  isLoading: isSidngleDishLoadingSelector(state),\n  isInvalid: isDishFormInvalidSelector(state),\n  isPristine: isDishFormPristineSelector(state),\n  activeStep: dishModalActiveStepSelector(state),\n  category_id: dishListFiltersSelector(state).category_id,\n  lastSizesCopiedFrom: lastSizesCopiedFromNameSelector(state),\n  lastExtrasCopiedFrom: lastExtrasCopiedFromNameSelector(state),\n  extrasSuggestions: extrasFromCategorySuggestionsSelector(state),\n  initialValues: initialDishFormsValuesSelector(state),\n  dishId: managedDishIdSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeActiveStep: (_, activeStep) => dispatch(setDishModal({ activeStep })),\n  onClose: () => dispatch(clearDishModal()),\n  onSecondaryAction: () => dispatch(resetDishModalForms()),\n  copyExtrasToForm: extras => dispatch(copyExtrasToForm(extras)),\n  copySizesToForm: sizes => dispatch(copySizesToForm(sizes)),\n  getCategoryById: id => dispatch(getCategoryById({ id })),\n});\n\nexport default\n@connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)\nclass BaseDishModal extends PureComponent {\n  bodyRenderByActiveStep = {\n    [steps.INFO]: this.renderInfoSection,\n    [steps.SIZES]: this.renderSizesSection,\n    [steps.EXTRAS]: this.renderExtrasSection,\n  };\n\n  @autobind\n  renderInfoSection() {\n    const { initialValues } = this.props;\n\n    return (\n      <DishInfoForm\n        initialValues={initialValues.dishInfoForm}\n        initialSizes={initialValues.dishSizesForm.sizes}\n      />\n    );\n  }\n\n  @autobind\n  handleCopyExtrasFromDish(dish) {\n    const { copyExtrasToForm } = this.props;\n    const {\n      extras: extrasToCopy,\n      extra_lists: extrasListsToCopy,\n      label: copiedFrom,\n    } = dish;\n\n    copyExtrasToForm({ extrasToCopy, extrasListsToCopy, copiedFrom });\n  }\n\n  @autobind\n  handleCopySizesFromDish(dish) {\n    const { copySizesToForm } = this.props;\n\n    copySizesToForm(dish.sizes, dish.label);\n  }\n\n  @autobind\n  renderSizesSection() {\n    const {\n      category_id,\n      lastSizesCopiedFrom,\n      initialValues,\n      dishId,\n    } = this.props;\n\n    return (\n      <Grid container spacing={32}>\n        <DishAutocompleteSection\n          withSizes\n          valuesToExclude={[dishId]}\n          placeholder=\"Copy sizes from...\"\n          onChange={this.handleCopySizesFromDish}\n          category_id={category_id}\n          value={lastSizesCopiedFrom}\n          optionFilter={hasSizes}\n        />\n\n        <Grid item container>\n          <SizesForm initialValues={initialValues.dishSizesForm} />\n        </Grid>\n      </Grid>\n    );\n  }\n\n  @autobind\n  onModalEnter() {\n    const { onEnter, getCategoryById, category_id } = this.props;\n    category_id && getCategoryById(category_id);\n    onEnter && onEnter();\n  }\n\n  @autobind\n  renderExtrasSection() {\n    const {\n      initialValues,\n      extrasFormProps,\n      lastExtrasCopiedForm,\n      extrasSuggestions,\n      copyExtrasToForm,\n      dishId,\n    } = this.props;\n    const { category_id } = this.props;\n\n    return (\n      <Grid container spacing={32}>\n        <Grid item container>\n          <DishAutocompleteSection\n            withExtras\n            valuesToExclude={[dishId]}\n            placeholder=\"Copy extras from ...\"\n            onChange={this.handleCopyExtrasFromDish}\n            category_id={category_id}\n            value={lastExtrasCopiedForm}\n            optionFilter={hasExtras}\n          />\n\n          <ExtrasSuggestionSection\n            suggestions={extrasSuggestions}\n            onExtraSelect={extra => copyExtrasToForm({ extrasToCopy: [extra] })}\n            onExtraListSelect={list =>\n              copyExtrasToForm({ extrasListsToCopy: [list] })\n            }\n          />\n        </Grid>\n\n        <Grid item container>\n          <ExtrasForm\n            GroupedExtrasListsComponent={ExtrasListsPreview}\n            initialValues={initialValues.dishExtrasForm}\n            extrasSectionHeader={\n              <Typography variant=\"subtitle1\">Single extras:</Typography>\n            }\n            canSetTargetSize\n            sizesOptions={mapSizesToOptions(initialValues.dishSizesForm.sizes)}\n            {...extrasFormProps}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n\n  @autobind\n  renderTitle() {\n    const {\n      activeStep,\n      changeActiveStep,\n      header,\n      isExtrasTabDisabled,\n    } = this.props;\n\n    return (\n      <Grid container direction=\"column\" spacing={8}>\n        <Grid item> {header} </Grid>\n        <Grid item>\n          <Tabs value={activeStep} onChange={changeActiveStep}>\n            <Tab label=\"Info\" />\n            <Tab label=\"Sizes\" disabled={isExtrasTabDisabled} />\n            <Tab label=\"Extras\" disabled={isExtrasTabDisabled} />\n          </Tabs>\n          <Divider />\n        </Grid>\n      </Grid>\n    );\n  }\n\n  @autobind\n  getSubmitBtnText() {\n    const { activeStep, customSubmitBtnText } = this.props;\n    return customSubmitBtnText || `Save ${stepNamesByValues[activeStep]}`;\n  }\n\n  render() {\n    const {\n      open,\n      onClose,\n      onSecondaryAction,\n      isInvalid,\n      isLoading,\n      isPristine,\n      activeStep,\n      onFormSubmit,\n      customModalBody,\n      isSubmitDisabled,\n      ...baseModalProps\n    } = this.props;\n\n    const submitBtnText = this.getSubmitBtnText();\n\n    return (\n      <BaseModal\n        title={this.renderTitle()}\n        isLoading={isLoading}\n        onSubmit={onFormSubmit}\n        isSubmitDisabled={\n          isSubmitDisabled || isLoading || isInvalid || isPristine\n        }\n        onClose={onClose}\n        open={open}\n        onSecondaryAction={onSecondaryAction}\n        submitBtnText={submitBtnText}\n        {...baseModalProps || {}}\n        onEnter={this.onModalEnter}>\n        {customModalBody || this.bodyRenderByActiveStep[activeStep]()}\n      </BaseModal>\n    );\n  }\n}\n\nBaseDishModal.propTypes = {\n  onSubmit: PropTypes.func,\n  restaurant_id: PropTypes.string,\n  isInvalid: PropTypes.bool,\n  extrasFormProps: PropTypes.object,\n};\n\nBaseDishModal.defaultProps = {\n  extrasFormProps: {},\n\n  initialValues: {\n    dishInfoForm: {\n      name: '',\n      description: '',\n    },\n    dishExtrasForm: {\n      extras: [],\n      extra_lists: [],\n    },\n    dishSizesForm: {\n      sizes: [],\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}