{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/components/DesignerForm/DesignerForm.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport { Field } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport { AppFormTextField, AppFormColorPicker, AppPreloaderSmall, AppDropzone } from '/components';\nexport var DesignerForm =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(DesignerForm, _PureComponent);\n\n  function DesignerForm() {\n    _classCallCheck(this, DesignerForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DesignerForm).apply(this, arguments));\n  }\n\n  _createClass(DesignerForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          background_pictureCrop = _this$props.background_pictureCrop,\n          logoCrop = _this$props.logoCrop,\n          onDropBackgroundImage = _this$props.onDropBackgroundImage,\n          onDropLogo = _this$props.onDropLogo,\n          onBackgroundCrop = _this$props.onBackgroundCrop,\n          onLogoCrop = _this$props.onLogoCrop,\n          onUpdateCLick = _this$props.onUpdateCLick,\n          invalid = _this$props.invalid,\n          logo = _this$props.logo,\n          background_picture = _this$props.background_picture,\n          url = _this$props.url;\n      debugger;\n      return React.createElement(\"form\", {\n        className: 'designer__form',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, loading && React.createElement(AppPreloaderSmall, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: 'url',\n        required: true,\n        type: 'text',\n        className: 'designer__control',\n        label: 'Page url address',\n        component: AppFormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Your restaurant link is: \"), React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: \"\".concat(process.env.REACT_APP_HOSTNAME, \"/r/\").concat(url),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"\".concat(process.env.REACT_APP_HOSTNAME, \"/r/\").concat(url)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: 'menu_page_name',\n        className: 'designer__control',\n        required: true,\n        type: 'text',\n        label: 'Menu page name',\n        component: AppFormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: 'menu_navigation_color',\n        className: 'designer__control',\n        label: 'Menu theme color',\n        component: AppFormColorPicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: 'menu_background_color',\n        className: 'designer__control',\n        label: 'Menu background color',\n        component: AppFormColorPicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(AppDropzone, {\n        file: logo,\n        useCrop: true,\n        label: 'Menu restaurant logo',\n        accept: ['image/*'],\n        crop: logoCrop,\n        onDrop: onDropLogo,\n        onChange: onLogoCrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(AppDropzone, {\n        file: background_picture,\n        useCrop: true,\n        label: 'Menu restaurant background',\n        accept: ['image/*'],\n        crop: background_pictureCrop,\n        onDrop: onDropBackgroundImage,\n        onChange: onBackgroundCrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: onUpdateCLick,\n        variant: \"contained\",\n        color: 'primary',\n        type: 'submit',\n        disabled: loading || invalid,\n        className: 'designer__update-btn',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Update page designer\"));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return DesignerForm;\n}(PureComponent);\nDesignerForm.propTypes = {};\nDesignerForm.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DesignerForm, \"DesignerForm\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/components/DesignerForm/DesignerForm.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/components/DesignerForm/DesignerForm.js"],"names":["React","PureComponent","Field","Button","AppFormTextField","AppFormColorPicker","AppPreloaderSmall","AppDropzone","DesignerForm","props","loading","background_pictureCrop","logoCrop","onDropBackgroundImage","onDropLogo","onBackgroundCrop","onLogoCrop","onUpdateCLick","invalid","logo","background_picture","url","process","env","REACT_APP_HOSTNAME","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Field } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport {\n    AppFormTextField,\n    AppFormColorPicker,\n    AppPreloaderSmall,\n    AppDropzone\n} from '/components';\n\nexport class DesignerForm extends PureComponent {\n    render() {\n        const {\n            loading,\n            background_pictureCrop,\n            logoCrop,\n            onDropBackgroundImage,\n            onDropLogo,\n            onBackgroundCrop,\n            onLogoCrop,\n            onUpdateCLick,\n            invalid,\n            logo,\n            background_picture,\n            url\n        } = this.props;\n\n        debugger\n\n        return (\n            <form className={'designer__form'}>\n                {loading && <AppPreloaderSmall />}\n                <Field\n                    name={'url'}\n                    required\n                    type={'text'}\n                    className={'designer__control'}\n                    label={'Page url address'}\n                    component={AppFormTextField}\n                />\n                <h4>Your restaurant link is: </h4>\n                <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={`${process.env.REACT_APP_HOSTNAME}/r/${url}`}\n                >\n                    {`${process.env.REACT_APP_HOSTNAME}/r/${url}`}\n                </a>\n                <br />\n                <br />\n                <Field\n                    name={'menu_page_name'}\n                    className={'designer__control'}\n                    required\n                    type={'text'}\n                    label={'Menu page name'}\n                    component={AppFormTextField}\n                />\n\n                <Field\n                    name={'menu_navigation_color'}\n                    className={'designer__control'}\n                    label={'Menu theme color'}\n                    component={AppFormColorPicker}\n                />\n\n                <Field\n                    name={'menu_background_color'}\n                    className={'designer__control'}\n                    label={'Menu background color'}\n                    component={AppFormColorPicker}\n                />\n\n                <AppDropzone\n                    file={logo}\n                    useCrop\n                    label={'Menu restaurant logo'}\n                    accept={['image/*']}\n                    crop={logoCrop}\n                    onDrop={onDropLogo}\n                    onChange={onLogoCrop}\n                />\n\n                <AppDropzone\n                    file={background_picture}\n                    useCrop\n                    label={'Menu restaurant background'}\n                    accept={['image/*']}\n                    crop={background_pictureCrop}\n                    onDrop={onDropBackgroundImage}\n                    onChange={onBackgroundCrop}\n                />\n\n                <Button\n                    onClick={onUpdateCLick}\n                    variant='contained'\n                    color={'primary'}\n                    type={'submit'}\n                    disabled={loading || invalid}\n                    className={'designer__update-btn'}\n                >\n                    Update page designer\n                </Button>\n            </form>\n        );\n    }\n}\n\nDesignerForm.propTypes = {};\nDesignerForm.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}