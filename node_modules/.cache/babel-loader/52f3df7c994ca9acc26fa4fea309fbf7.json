{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _dec2,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/CuisineAutoComplete/CuisineAutoComplete.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { withStyles } from '@material-ui/core';\nimport { AppCleanHOC, AppAutoComplete } from '../../components';\nimport { HelperService } from '../../services';\nimport styles from './styles';\nimport { cuisinesFiltersSelector, cuisinesListSelector, cuisinesLoadingSelector, updateFilters, abortPageRequests, getCuisinesForAutocomplete, cuisinesCountSelector, setPage, clearAutocomplete } from './modules';\nvar clearOption = {\n  value: '',\n  label: ''\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cuisines: cuisinesListSelector(state),\n    filters: cuisinesFiltersSelector(state),\n    loading: cuisinesLoadingSelector(state),\n    count: cuisinesCountSelector(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  getCuisinesForAutocomplete: getCuisinesForAutocomplete,\n  updateFilters: updateFilters,\n  abortPageRequests: abortPageRequests,\n  setPage: setPage,\n  clearAutocomplete: clearAutocomplete\n};\nvar CuisineAutocomplete = (_dec = withStyles(styles), _dec2 = connect(mapStateToProps, mapDispatchToProps), _dec(_class = _dec2(_class = AppCleanHOC(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CuisineAutocomplete, _PureComponent);\n\n  function CuisineAutocomplete() {\n    _classCallCheck(this, CuisineAutocomplete);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CuisineAutocomplete).apply(this, arguments));\n  }\n\n  _createClass(CuisineAutocomplete, [{\n    key: \"makeRequest\",\n    value: function makeRequest(rest) {\n      var _this$props = this.props,\n          getCuisinesForAutocomplete = _this$props.getCuisinesForAutocomplete,\n          updateFilters = _this$props.updateFilters,\n          filters = _this$props.filters;\n\n      var body = _objectSpread({}, filters, rest);\n\n      updateFilters(body);\n      getCuisinesForAutocomplete({\n        body: body\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var clearAutocomplete = this.props.clearAutocomplete;\n      clearAutocomplete();\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange(name) {\n      this.makeRequest({\n        name: name\n      });\n    }\n  }, {\n    key: \"onMenuScrollToBottom\",\n    value: function onMenuScrollToBottom() {\n      if (this.state.page) {\n        this.setState({\n          page: this.state.page + 1\n        });\n      } else {\n        this.setState({\n          page: 1\n        });\n      }\n\n      var _this$props2 = this.props,\n          setPage = _this$props2.setPage,\n          getCuisinesForAutocomplete = _this$props2.getCuisinesForAutocomplete;\n      var body = {\n        page: this.state.page\n      };\n      setPage(this.state.page);\n      getCuisinesForAutocomplete({\n        body: body\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(option) {\n      var onChange = this.props.onChange;\n      onChange(option || clearOption);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.makeRequest();\n      this.setState({\n        page: 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          cuisines = _this$props3.cuisines,\n          classes = _this$props3.classes,\n          wrapperClassName = _this$props3.wrapperClassName,\n          rest = _objectWithoutProperties(_this$props3, [\"cuisines\", \"classes\", \"wrapperClassName\"]);\n\n      return React.createElement(\"div\", {\n        className: \"\".concat(classes.cuisineAutocompleteWrapper, \"  \").concat(wrapperClassName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(AppAutoComplete, Object.assign({}, HelperService.pick(this.props, ['loading', 'compareKey', 'placeholder', 'isClearable', 'selectedOption', 'value', 'count']), {\n        onMenuScrollToBottom: this.onMenuScrollToBottom,\n        onInputChange: this.onInputChange,\n        options: cuisines,\n        className: \"dish-autocomplete\",\n        onChange: this.onChange\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return CuisineAutocomplete;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onInputChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onInputChange\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onMenuScrollToBottom\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onMenuScrollToBottom\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onChange\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"componentDidMount\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"componentDidMount\"), _class2.prototype)), _class2)) || _class) || _class) || _class);\nexport { CuisineAutocomplete as default };\nCuisineAutocomplete.propTypes = {\n  wrapperClassName: PropTypes.string,\n  cuisines: PropTypes.array,\n  loading: PropTypes.bool,\n  compareKey: PropTypes.string,\n  onChange: PropTypes.func,\n  theme: PropTypes.object,\n  placeholder: PropTypes.string\n};\nCuisineAutocomplete.defaultProps = {\n  cuisineAutocompleteWrapper: '',\n  compareKey: 'label',\n  placeholder: 'Select cuisine',\n  isClearable: true\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(clearOption, \"clearOption\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/CuisineAutoComplete/CuisineAutoComplete.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/CuisineAutoComplete/CuisineAutoComplete.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/CuisineAutoComplete/CuisineAutoComplete.js\");\n  reactHotLoader.register(CuisineAutocomplete, \"CuisineAutocomplete\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/CuisineAutoComplete/CuisineAutoComplete.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/CuisineAutoComplete/CuisineAutoComplete.js"],"names":["React","PureComponent","PropTypes","connect","autobind","withStyles","AppCleanHOC","AppAutoComplete","HelperService","styles","cuisinesFiltersSelector","cuisinesListSelector","cuisinesLoadingSelector","updateFilters","abortPageRequests","getCuisinesForAutocomplete","cuisinesCountSelector","setPage","clearAutocomplete","clearOption","value","label","mapStateToProps","state","cuisines","filters","loading","count","mapDispatchToProps","CuisineAutocomplete","rest","props","body","name","makeRequest","page","setState","option","onChange","classes","wrapperClassName","cuisineAutocompleteWrapper","pick","onMenuScrollToBottom","onInputChange","propTypes","string","array","bool","compareKey","func","theme","object","placeholder","defaultProps","isClearable"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { withStyles } from '@material-ui/core';\nimport { AppCleanHOC, AppAutoComplete } from '../../components';\nimport { HelperService } from '../../services';\n\nimport styles from './styles';\n\nimport {\n  cuisinesFiltersSelector,\n  cuisinesListSelector,\n  cuisinesLoadingSelector,\n  updateFilters,\n  abortPageRequests,\n  getCuisinesForAutocomplete,\n  cuisinesCountSelector,\n  setPage,\n  clearAutocomplete,\n} from './modules';\n\nconst clearOption = {\n  value: '',\n  label: '',\n};\n\nconst mapStateToProps = state => ({\n  cuisines: cuisinesListSelector(state),\n  filters: cuisinesFiltersSelector(state),\n  loading: cuisinesLoadingSelector(state),\n  count: cuisinesCountSelector(state),\n});\n\nconst mapDispatchToProps = {\n  getCuisinesForAutocomplete,\n  updateFilters,\n  abortPageRequests,\n  setPage,\n  clearAutocomplete,\n};\n\nexport default\n@withStyles(styles)\n@connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)\n@AppCleanHOC\nclass CuisineAutocomplete extends PureComponent {\n  makeRequest(rest) {\n    const { getCuisinesForAutocomplete, updateFilters, filters } = this.props;\n    const body = { ...filters, ...rest };\n\n    updateFilters(body);\n    getCuisinesForAutocomplete({ body });\n  }\n\n  componentWillUnmount() {\n    const { clearAutocomplete } = this.props;\n    clearAutocomplete();\n  }\n\n  @autobind\n  onInputChange(name) {\n    this.makeRequest({ name });\n  }\n\n  @autobind\n  onMenuScrollToBottom() {\n    if (this.state.page) {\n      this.setState({ page: this.state.page + 1 });\n    } else {\n      this.setState({ page: 1 });\n    }\n\n    const { setPage, getCuisinesForAutocomplete } = this.props;\n    const body = { page: this.state.page };\n\n    setPage(this.state.page);\n    getCuisinesForAutocomplete({ body });\n  }\n\n  @autobind\n  onChange(option) {\n    const { onChange } = this.props;\n    onChange(option || clearOption);\n  }\n\n  @autobind\n  componentDidMount() {\n    this.makeRequest();\n    this.setState({ page: 1 });\n  }\n\n  render() {\n    const { cuisines, classes, wrapperClassName, ...rest } = this.props;\n    return (\n      <div\n        className={`${\n          classes.cuisineAutocompleteWrapper\n        }  ${wrapperClassName}`}>\n        <AppAutoComplete\n          {...HelperService.pick(this.props, [\n            'loading',\n            'compareKey',\n            'placeholder',\n            'isClearable',\n            'selectedOption',\n            'value',\n            'count',\n          ])}\n          onMenuScrollToBottom={this.onMenuScrollToBottom}\n          onInputChange={this.onInputChange}\n          options={cuisines}\n          className=\"dish-autocomplete\"\n          onChange={this.onChange}\n          {...rest}\n        />\n      </div>\n    );\n  }\n}\n\nCuisineAutocomplete.propTypes = {\n  wrapperClassName: PropTypes.string,\n  cuisines: PropTypes.array,\n  loading: PropTypes.bool,\n  compareKey: PropTypes.string,\n  onChange: PropTypes.func,\n  theme: PropTypes.object,\n  placeholder: PropTypes.string,\n};\n\nCuisineAutocomplete.defaultProps = {\n  cuisineAutocompleteWrapper: '',\n  compareKey: 'label',\n  placeholder: 'Select cuisine',\n  isClearable: true,\n};\n"]},"metadata":{},"sourceType":"module"}