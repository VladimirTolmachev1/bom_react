{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _dec2,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ResetPassword/ResetPassword.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport { autobind } from 'core-decorators';\nimport { resetPassword, abortPageRequests, resetPasswordLoadingSelector, signOut } from '../../modules/core';\nimport { AppCleanHOC, AppPreloaderSmall, AppFormTextField } from '../../components';\nimport { resetPasswordValidation } from './modules';\nvar formFieldsSelector = formValueSelector('ResetPassword');\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    loading: resetPasswordLoadingSelector(state),\n    email: formFieldsSelector(state, 'email'),\n    password: formFieldsSelector(state, 'password'),\n    password_confirmation: formFieldsSelector(state, 'password_confirmation'),\n    token: props.location.pathname.split('/')[3]\n  };\n};\n\nvar mapDispatchToProps = {\n  signOut: signOut,\n  resetPassword: resetPassword,\n  abortPageRequests: abortPageRequests\n};\nvar ResetPassword = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec2 = reduxForm({\n  form: 'ResetPassword',\n  validate: resetPasswordValidation\n}), _dec(_class = _dec2(_class = AppCleanHOC(_class = (_class2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResetPassword, _Component);\n\n  function ResetPassword() {\n    _classCallCheck(this, ResetPassword);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ResetPassword).apply(this, arguments));\n  }\n\n  _createClass(ResetPassword, [{\n    key: \"onSubmit\",\n    // todo put this logic in middleware\n    value: function onSubmit(event) {\n      var _this = this;\n\n      event.preventDefault();\n      event.stopPropagation();\n      var _this$props = this.props,\n          resetPassword = _this$props.resetPassword,\n          email = _this$props.email,\n          password = _this$props.password,\n          password_confirmation = _this$props.password_confirmation,\n          token = _this$props.token;\n      var request = resetPassword({\n        email: email,\n        password: password,\n        password_confirmation: password_confirmation,\n        token: token\n      });\n      request.promise.then(function () {\n        _this.props.history.push('/sign-in');\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var signOut = this.props.signOut;\n      signOut();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          loading = _this$props2.loading,\n          invalid = _this$props2.invalid;\n      return React.createElement(\"div\", {\n        className: \"app-static-container auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"auth__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Please, fill the form\"), React.createElement(\"form\", {\n        className: \"auth__form\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, loading && React.createElement(AppPreloaderSmall, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Field, {\n        className: \"auth__field\",\n        name: \"email\",\n        required: true,\n        type: \"text\",\n        label: \"Email\",\n        component: AppFormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Field, {\n        className: \"auth__field\",\n        name: \"password\",\n        required: true,\n        type: \"password\",\n        label: \"Password\",\n        component: AppFormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Field, {\n        className: \"auth__field\",\n        name: \"password_confirmation\",\n        required: true,\n        type: \"password\",\n        label: \"Password confirmation\",\n        component: AppFormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        disabled: loading || invalid,\n        className: \"auth__button\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Reset password\")));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return ResetPassword;\n}(Component), (_applyDecoratedDescriptor(_class2.prototype, \"onSubmit\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onSubmit\"), _class2.prototype)), _class2)) || _class) || _class) || _class);\nexport { ResetPassword as default };\nResetPassword.propTypes = {\n  loading: PropTypes.bool,\n  invalid: PropTypes.bool\n};\nResetPassword.defaultProps = {}; // password/reset/a170829a59996305b0d389efe7d81bd054170e6d369c8ba667d826a12dc0111a\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(formFieldsSelector, \"formFieldsSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ResetPassword/ResetPassword.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ResetPassword/ResetPassword.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ResetPassword/ResetPassword.js\");\n  reactHotLoader.register(ResetPassword, \"ResetPassword\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ResetPassword/ResetPassword.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ResetPassword/ResetPassword.js"],"names":["React","Component","PropTypes","connect","Field","reduxForm","formValueSelector","Button","autobind","resetPassword","abortPageRequests","resetPasswordLoadingSelector","signOut","AppCleanHOC","AppPreloaderSmall","AppFormTextField","resetPasswordValidation","formFieldsSelector","mapStateToProps","state","props","loading","email","password","password_confirmation","token","location","pathname","split","mapDispatchToProps","ResetPassword","form","validate","event","preventDefault","stopPropagation","request","promise","then","history","push","invalid","onSubmit","propTypes","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport { autobind } from 'core-decorators';\nimport {\n  resetPassword,\n  abortPageRequests,\n  resetPasswordLoadingSelector,\n  signOut,\n} from '../../modules/core';\nimport {\n  AppCleanHOC,\n  AppPreloaderSmall,\n  AppFormTextField,\n} from '../../components';\nimport { resetPasswordValidation } from './modules';\n\nconst formFieldsSelector = formValueSelector('ResetPassword');\n\nconst mapStateToProps = (state, props) => ({\n  loading: resetPasswordLoadingSelector(state),\n  email: formFieldsSelector(state, 'email'),\n  password: formFieldsSelector(state, 'password'),\n  password_confirmation: formFieldsSelector(state, 'password_confirmation'),\n  token: props.location.pathname.split('/')[3],\n});\n\nconst mapDispatchToProps = {\n  signOut,\n  resetPassword,\n  abortPageRequests,\n};\n\nexport default\n@connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)\n@reduxForm({\n  form: 'ResetPassword',\n  validate: resetPasswordValidation,\n})\n@AppCleanHOC\nclass ResetPassword extends Component {\n  // todo put this logic in middleware\n  @autobind\n  onSubmit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      resetPassword,\n      email,\n      password,\n      password_confirmation,\n      token,\n    } = this.props;\n    const request = resetPassword({\n      email,\n      password,\n      password_confirmation,\n      token,\n    });\n    request.promise.then(() => {\n      this.props.history.push('/sign-in');\n    });\n  }\n\n  componentDidMount() {\n    const { signOut } = this.props;\n    signOut();\n  }\n\n  render() {\n    const { loading, invalid } = this.props;\n\n    return (\n      <div className=\"app-static-container auth\">\n        <h2 className=\"auth__title\">Please, fill the form</h2>\n        <form className=\"auth__form\" onSubmit={this.onSubmit}>\n          {loading && <AppPreloaderSmall />}\n          <Field\n            className=\"auth__field\"\n            name=\"email\"\n            required\n            type=\"text\"\n            label=\"Email\"\n            component={AppFormTextField}\n          />\n          <Field\n            className=\"auth__field\"\n            name=\"password\"\n            required\n            type=\"password\"\n            label=\"Password\"\n            component={AppFormTextField}\n          />\n          <Field\n            className=\"auth__field\"\n            name=\"password_confirmation\"\n            required\n            type=\"password\"\n            label=\"Password confirmation\"\n            component={AppFormTextField}\n          />\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={loading || invalid}\n            className=\"auth__button\"\n            color=\"primary\">\n            Reset password\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nResetPassword.propTypes = {\n  loading: PropTypes.bool,\n  invalid: PropTypes.bool,\n};\nResetPassword.defaultProps = {};\n\n// password/reset/a170829a59996305b0d389efe7d81bd054170e6d369c8ba667d826a12dc0111a\n"]},"metadata":{},"sourceType":"module"}