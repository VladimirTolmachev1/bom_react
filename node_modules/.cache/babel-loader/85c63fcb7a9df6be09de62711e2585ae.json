{"ast":null,"code":"import _defineProperty from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/BaseModal/BaseModal.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core';\nimport { autobind } from 'core-decorators';\nimport styles from './styles';\nimport { AppPreloaderSmall } from '../../../components';\nvar BaseModal = (_dec = withStyles(styles), _dec(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(BaseModal, _PureComponent);\n\n  function BaseModal() {\n    _classCallCheck(this, BaseModal);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BaseModal).apply(this, arguments));\n  }\n\n  _createClass(BaseModal, [{\n    key: \"renderDialogActions\",\n    value: function renderDialogActions() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          actions = _this$props.actions,\n          isLoading = _this$props.isLoading,\n          secondaryBtnText = _this$props.secondaryBtnText,\n          isSubmitDisabled = _this$props.isSubmitDisabled,\n          submitBtnText = _this$props.submitBtnText,\n          onSubmit = _this$props.onSubmit,\n          onSecondaryAction = _this$props.onSecondaryAction;\n\n      if (actions) {\n        return actions;\n      }\n\n      return React.createElement(Grid, {\n        container: true,\n        justify: \"space-between\",\n        wrap: \"nowrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: onSecondaryAction,\n        variant: \"contained\",\n        className: classes.modalBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, secondaryBtnText), React.createElement(Button, {\n        onClick: onSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.modalBtn,\n        disabled: isLoading || isSubmitDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, submitBtnText));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          title = _this$props2.title,\n          content = _this$props2.content,\n          children = _this$props2.children,\n          isLoading = _this$props2.isLoading,\n          dialogProps = _this$props2.dialogProps,\n          open = _this$props2.open,\n          onClose = _this$props2.onClose,\n          onEnter = _this$props2.onEnter,\n          customModalBody = _this$props2.customModalBody,\n          closeBtnClassName = _this$props2.closeBtnClassName,\n          closeWithACross = _this$props2.closeWithACross;\n      return React.createElement(Dialog, Object.assign({\n        fullWidth: true,\n        maxWidth: \"md\",\n        open: open,\n        onClose: onClose,\n        onEnter: onEnter\n      }, dialogProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), isLoading && React.createElement(AppPreloaderSmall, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), title && React.createElement(DialogTitle, {\n        className: classNames(_defineProperty({}, classes.title, closeWithACross)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        justify: \"space-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, title, closeWithACross && React.createElement(IconButton, {\n        onClick: onClose,\n        className: classNames(classes.closeBtn, closeBtnClassName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })))), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, customModalBody || children || content), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.renderDialogActions()));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return BaseModal;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"renderDialogActions\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"renderDialogActions\"), _class2.prototype)), _class2)) || _class);\nexport { BaseModal as default };\nBaseModal.propTypes = {\n  onSubmitAndClose: PropTypes.func,\n  content: PropTypes.node.isRequired,\n  title: PropTypes.node,\n  actions: PropTypes.node,\n  secondaryBtnText: PropTypes.string,\n  submitBtnText: PropTypes.string,\n  isSubmitDisabled: PropTypes.bool,\n  closeWithACross: PropTypes.bool,\n  dialogProps: PropTypes.object\n};\nBaseModal.defaultProps = {\n  secondaryBtnText: 'Reset',\n  submitBtnText: 'Save',\n  isSubmitDisabled: false,\n  dialogProps: {},\n  closeWithACross: true\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(BaseModal, \"BaseModal\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/BaseModal/BaseModal.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/BaseModal/BaseModal.js"],"names":["React","PureComponent","PropTypes","classNames","Dialog","DialogActions","DialogContent","DialogTitle","Divider","Button","IconButton","CloseIcon","Grid","withStyles","autobind","styles","AppPreloaderSmall","BaseModal","props","classes","actions","isLoading","secondaryBtnText","isSubmitDisabled","submitBtnText","onSubmit","onSecondaryAction","modalBtn","title","content","children","dialogProps","open","onClose","onEnter","customModalBody","closeBtnClassName","closeWithACross","closeBtn","renderDialogActions","propTypes","onSubmitAndClose","func","node","isRequired","string","bool","object","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;IAIMC,S,WADLJ,UAAU,CAACE,MAAD,C;;;;;;;;;;;;;0CAGa;AAAA,wBAUhB,KAAKG,KAVW;AAAA,UAElBC,OAFkB,eAElBA,OAFkB;AAAA,UAGlBC,OAHkB,eAGlBA,OAHkB;AAAA,UAIlBC,SAJkB,eAIlBA,SAJkB;AAAA,UAKlBC,gBALkB,eAKlBA,gBALkB;AAAA,UAMlBC,gBANkB,eAMlBA,gBANkB;AAAA,UAOlBC,aAPkB,eAOlBA,aAPkB;AAAA,UAQlBC,QARkB,eAQlBA,QARkB;AAAA,UASlBC,iBATkB,eASlBA,iBATkB;;AAYpB,UAAIN,OAAJ,EAAa;AACX,eAAOA,OAAP;AACD;;AAED,aACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,eAAxB;AAAwC,QAAA,IAAI,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAEM,iBADX;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,SAAS,EAAEP,OAAO,CAACQ,QAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGL,gBAJH,CADF,EAQE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAEG,QADX;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,SAAS,EAAEN,OAAO,CAACQ,QAJrB;AAKE,QAAA,QAAQ,EAAEN,SAAS,IAAIE,gBALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGC,aANH,CARF,CADF;AAmBD;;;6BAEQ;AAAA,yBAcH,KAAKN,KAdF;AAAA,UAELC,OAFK,gBAELA,OAFK;AAAA,UAGLS,KAHK,gBAGLA,KAHK;AAAA,UAILC,OAJK,gBAILA,OAJK;AAAA,UAKLC,QALK,gBAKLA,QALK;AAAA,UAMLT,SANK,gBAMLA,SANK;AAAA,UAOLU,WAPK,gBAOLA,WAPK;AAAA,UAQLC,IARK,gBAQLA,IARK;AAAA,UASLC,OATK,gBASLA,OATK;AAAA,UAULC,OAVK,gBAULA,OAVK;AAAA,UAWLC,eAXK,gBAWLA,eAXK;AAAA,UAYLC,iBAZK,gBAYLA,iBAZK;AAAA,UAaLC,eAbK,gBAaLA,eAbK;AAgBP,aACE,oBAAC,MAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,QAAQ,EAAC,IAFX;AAGE,QAAA,IAAI,EAAEL,IAHR;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,OAAO,EAAEC;AALX,SAMMH,WANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOGV,SAAS,IAAI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPhB,EAQGO,KAAK,IACJ,oBAAC,WAAD;AACE,QAAA,SAAS,EAAEzB,UAAU,qBAAIgB,OAAO,CAACS,KAAZ,EAAoBS,eAApB,EADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGT,KADH,EAEGS,eAAe,IACd,oBAAC,UAAD;AACE,QAAA,OAAO,EAAEJ,OADX;AAEE,QAAA,SAAS,EAAE9B,UAAU,CAACgB,OAAO,CAACmB,QAAT,EAAmBF,iBAAnB,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAHJ,CAFF,CATJ,EAwBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgBD,eAAe,IAAIL,QAAnB,IAA+BD,OAA/C,CAxBF,EA0BE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BF,EA2BE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB,KAAKU,mBAAL,EAAhB,CA3BF,CADF;AA+BD;;;;;;;;;;;EAtFqBtC,a,yEACrBa,Q;SADGG,S;AAyFNA,SAAS,CAACuB,SAAV,GAAsB;AACpBC,EAAAA,gBAAgB,EAAEvC,SAAS,CAACwC,IADR;AAEpBb,EAAAA,OAAO,EAAE3B,SAAS,CAACyC,IAAV,CAAeC,UAFJ;AAGpBhB,EAAAA,KAAK,EAAE1B,SAAS,CAACyC,IAHG;AAIpBvB,EAAAA,OAAO,EAAElB,SAAS,CAACyC,IAJC;AAMpBrB,EAAAA,gBAAgB,EAAEpB,SAAS,CAAC2C,MANR;AAOpBrB,EAAAA,aAAa,EAAEtB,SAAS,CAAC2C,MAPL;AAQpBtB,EAAAA,gBAAgB,EAAErB,SAAS,CAAC4C,IARR;AASpBT,EAAAA,eAAe,EAAEnC,SAAS,CAAC4C,IATP;AAWpBf,EAAAA,WAAW,EAAE7B,SAAS,CAAC6C;AAXH,CAAtB;AAcA9B,SAAS,CAAC+B,YAAV,GAAyB;AACvB1B,EAAAA,gBAAgB,EAAE,OADK;AAEvBE,EAAAA,aAAa,EAAE,MAFQ;AAIvBD,EAAAA,gBAAgB,EAAE,KAJK;AAKvBQ,EAAAA,WAAW,EAAE,EALU;AAMvBM,EAAAA,eAAe,EAAE;AANM,CAAzB;;;;;;;;;;0BAvGMpB,S","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core';\nimport { autobind } from 'core-decorators';\n\nimport styles from './styles';\nimport { AppPreloaderSmall } from '../../../components';\n\nexport default\n@withStyles(styles)\nclass BaseModal extends PureComponent {\n  @autobind\n  renderDialogActions() {\n    const {\n      classes,\n      actions,\n      isLoading,\n      secondaryBtnText,\n      isSubmitDisabled,\n      submitBtnText,\n      onSubmit,\n      onSecondaryAction,\n    } = this.props;\n\n    if (actions) {\n      return actions;\n    }\n\n    return (\n      <Grid container justify=\"space-between\" wrap=\"nowrap\">\n        <Button\n          onClick={onSecondaryAction}\n          variant=\"contained\"\n          className={classes.modalBtn}>\n          {secondaryBtnText}\n        </Button>\n\n        <Button\n          onClick={onSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.modalBtn}\n          disabled={isLoading || isSubmitDisabled}>\n          {submitBtnText}\n        </Button>\n      </Grid>\n    );\n  }\n\n  render() {\n    const {\n      classes,\n      title,\n      content,\n      children,\n      isLoading,\n      dialogProps,\n      open,\n      onClose,\n      onEnter,\n      customModalBody,\n      closeBtnClassName,\n      closeWithACross,\n    } = this.props;\n\n    return (\n      <Dialog\n        fullWidth\n        maxWidth=\"md\"\n        open={open}\n        onClose={onClose}\n        onEnter={onEnter}\n        {...dialogProps}>\n        {isLoading && <AppPreloaderSmall />}\n        {title && (\n          <DialogTitle\n            className={classNames({ [classes.title]: closeWithACross })}>\n            <Grid container justify=\"space-between\">\n              {title}\n              {closeWithACross && (\n                <IconButton\n                  onClick={onClose}\n                  className={classNames(classes.closeBtn, closeBtnClassName)}>\n                  <CloseIcon />\n                </IconButton>\n              )}\n            </Grid>\n          </DialogTitle>\n        )}\n\n        <DialogContent>{customModalBody || children || content}</DialogContent>\n\n        <Divider />\n        <DialogActions>{this.renderDialogActions()}</DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nBaseModal.propTypes = {\n  onSubmitAndClose: PropTypes.func,\n  content: PropTypes.node.isRequired,\n  title: PropTypes.node,\n  actions: PropTypes.node,\n\n  secondaryBtnText: PropTypes.string,\n  submitBtnText: PropTypes.string,\n  isSubmitDisabled: PropTypes.bool,\n  closeWithACross: PropTypes.bool,\n\n  dialogProps: PropTypes.object,\n};\n\nBaseModal.defaultProps = {\n  secondaryBtnText: 'Reset',\n  submitBtnText: 'Save',\n\n  isSubmitDisabled: false,\n  dialogProps: {},\n  closeWithACross: true,\n};\n"]},"metadata":{},"sourceType":"module"}