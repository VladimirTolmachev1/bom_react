{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppFormColorPicker/AppFormColorPicker.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport PropTypes from 'prop-types';\nimport { AppColorPicker } from '../';\nexport var AppFormColorPicker = function AppFormColorPicker(_ref) {\n  var input = _ref.input,\n      className = _ref.className,\n      type = _ref.type,\n      label = _ref.label,\n      required = _ref.required,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error;\n  return React.createElement(\"div\", {\n    className: \"app-form-control \".concat(className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(AppColorPicker, Object.assign({\n    label: label,\n    required: required\n  }, input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), Boolean(touched && error) ? React.createElement(FormHelperText, {\n    className: \"app-form-control__error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, error) : false);\n};\nAppFormColorPicker.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.bool\n};\nAppFormColorPicker.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AppFormColorPicker, \"AppFormColorPicker\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppFormColorPicker/AppFormColorPicker.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppFormColorPicker/AppFormColorPicker.js"],"names":["React","FormHelperText","PropTypes","AppColorPicker","AppFormColorPicker","input","className","type","label","required","meta","touched","error","Boolean","propTypes","string","value","bool","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,KAA/B;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAUO;AAAA,MATFC,KASE,QATFA,KASE;AAAA,MARFC,SAQE,QARFA,SAQE;AAAA,MAPFC,IAOE,QAPFA,IAOE;AAAA,MANFC,KAME,QANFA,KAME;AAAA,MALFC,QAKE,QALFA,QAKE;AAAA,uBAJFC,IAIE;AAAA,MAHEC,OAGF,aAHEA,OAGF;AAAA,MAFEC,KAEF,aAFEA,KAEF;AACrC,SACI;AAAK,IAAA,SAAS,6BAAuBN,SAAvB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD,gBACS;AACDE,IAAAA,KAAK,EAALA,KADC;AAEDC,IAAAA,QAAQ,EAARA;AAFC,GADT,EAKSJ,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAQMQ,OAAO,CAACF,OAAO,IAAIC,KAAZ,CAAP,GACI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,yBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDA,KAAtD,CADJ,GAEI,KAVV,CADJ;AAeH,CA1BM;AA4BPR,kBAAkB,CAACU,SAAnB,GAA+B;AAC3BR,EAAAA,SAAS,EAAEJ,SAAS,CAACa,MADM;AAE3BP,EAAAA,KAAK,EAAEN,SAAS,CAACa,MAFU;AAG3BC,EAAAA,KAAK,EAAEd,SAAS,CAACe;AAHU,CAA/B;AAMAb,kBAAkB,CAACc,YAAnB,GAAkC,EAAlC;;;;;;;;;;;;0BAlCad,kB","sourcesContent":["import React from 'react';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport PropTypes from 'prop-types';\nimport { AppColorPicker } from '../';\n\nexport const AppFormColorPicker = ({\n                                       input,\n                                       className,\n                                       type,\n                                       label,\n                                       required,\n                                       meta: {\n                                           touched,\n                                           error\n                                       }\n                                   }) => {\n    return (\n        <div className={ `app-form-control ${className}` }>\n            <AppColorPicker\n                { ...{\n                    label,\n                    required\n                } }\n                { ...input }\n            />\n            { Boolean(touched && error)\n                ? <FormHelperText className=\"app-form-control__error\">{ error }</FormHelperText>\n                : false\n            }\n        </div>\n    );\n};\n\nAppFormColorPicker.propTypes = {\n    className: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.bool\n};\n\nAppFormColorPicker.defaultProps = {\n\n};\n"]},"metadata":{},"sourceType":"module"}