{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/components/CategoryListItem/CategoryListItem.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Edit from '@material-ui/icons/Edit';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { autobind } from 'core-decorators';\nimport { NavLink } from 'react-router-dom';\nexport var CategoryListItem = (_class =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CategoryListItem, _PureComponent);\n\n  function CategoryListItem() {\n    _classCallCheck(this, CategoryListItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CategoryListItem).apply(this, arguments));\n  }\n\n  _createClass(CategoryListItem, [{\n    key: \"onDeleteClick\",\n    value: function onDeleteClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var _this$props = this.props,\n          showConfirm = _this$props.showConfirm,\n          handleDeleteCategory = _this$props.handleDeleteCategory,\n          id = _this$props.id;\n      showConfirm({\n        data: {\n          body: {\n            id: id\n          }\n        },\n        onSuccess: handleDeleteCategory,\n        content: 'Are you sure you want to delete category? Note, that all dishes within this category will be also deleted.'\n      });\n    }\n  }, {\n    key: \"onEditClick\",\n    value: function onEditClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          handleEditCategoryClick = _this$props2.handleEditCategoryClick;\n      handleEditCategoryClick(id);\n    }\n  }, {\n    key: \"onClickListItem\",\n    value: function onClickListItem() {\n      var _this$props3 = this.props,\n          getDishes = _this$props3.getDishes,\n          id = _this$props3.id,\n          dishFilters = _this$props3.dishFilters,\n          updateDishFilters = _this$props3.updateDishFilters,\n          category_id = _this$props3.category_id,\n          cleanDishList = _this$props3.cleanDishList;\n\n      if (+category_id !== +id) {\n        var dishBody = {\n          category_id: id,\n          page: 1\n        };\n        cleanDishList();\n        updateDishFilters(dishBody);\n        getDishes({\n          body: _objectSpread({}, dishFilters, dishBody)\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          restaurant_id = _this$props4.restaurant_id,\n          category_id = _this$props4.category_id,\n          name = _this$props4.name,\n          id = _this$props4.id,\n          mode = _this$props4.mode,\n          restaurant_name = _this$props4.restaurant_name,\n          category_name = _this$props4.category_name,\n          themeColor = _this$props4.themeColor; // TODO: move all constants and renders, that related to \"mode\" props outside this component.\n      // We should pass all specific stuf from outer component and make this component more stupid.\n\n      var link = mode === 'client' ? \"/r/\".concat(restaurant_name, \"/\").concat(name) : \"/menu?restaurant_id=\".concat(restaurant_id, \"&category_id=\").concat(id);\n      var isActive = // eslint-disable-next-line no-nested-ternary\n      mode === 'client' ? category_name === name ? 'active' : '' : category_id === id ? 'active' : '';\n      var navLinkStyle = {\n        backgroundColor: isActive ? themeColor : 'white'\n      };\n      return React.createElement(NavLink, {\n        className: \"categories-list__item \".concat(isActive),\n        style: navLinkStyle,\n        to: link,\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        key: id,\n        onClick: this.onClickListItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        className: \"categories-list__item-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, name), mode !== 'client' && React.createElement(React.Fragment, null, React.createElement(IconButton, {\n        className: \"categories-list__item-control\",\n        onClick: this.onEditClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Edit, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        className: \"categories-list__item-control\",\n        onClick: this.onDeleteClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Delete, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return CategoryListItem;\n}(PureComponent), (_applyDecoratedDescriptor(_class.prototype, \"onDeleteClick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onDeleteClick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onEditClick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onEditClick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onClickListItem\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onClickListItem\"), _class.prototype)), _class);\nCategoryListItem.propTypes = {\n  updateDishFilters: PropTypes.func,\n  showConfirm: PropTypes.func,\n  handleDeleteCategory: PropTypes.func,\n  restaurant_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  category_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  dishFilters: PropTypes.any,\n  mode: PropTypes.string\n};\nCategoryListItem.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CategoryListItem, \"CategoryListItem\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/components/CategoryListItem/CategoryListItem.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/components/CategoryListItem/CategoryListItem.js"],"names":["React","PureComponent","PropTypes","ListItem","Edit","Delete","IconButton","ListItemText","autobind","NavLink","CategoryListItem","e","preventDefault","stopPropagation","props","showConfirm","handleDeleteCategory","id","data","body","onSuccess","content","handleEditCategoryClick","getDishes","dishFilters","updateDishFilters","category_id","cleanDishList","dishBody","page","restaurant_id","name","mode","restaurant_name","category_name","themeColor","link","isActive","navLinkStyle","backgroundColor","onClickListItem","onEditClick","onDeleteClick","propTypes","func","oneOfType","string","number","any","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Edit from '@material-ui/icons/Edit';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { autobind } from 'core-decorators';\nimport { NavLink } from 'react-router-dom';\n\nexport class CategoryListItem extends PureComponent {\n  @autobind\n  onDeleteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const { showConfirm, handleDeleteCategory, id } = this.props;\n\n    showConfirm({\n      data: { body: { id } },\n      onSuccess: handleDeleteCategory,\n      content:\n        'Are you sure you want to delete category? Note, that all dishes within this category will be also deleted.',\n    });\n  }\n\n  @autobind\n  onEditClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const { id, handleEditCategoryClick } = this.props;\n    handleEditCategoryClick(id);\n  }\n\n  @autobind\n  onClickListItem() {\n    const {\n      getDishes,\n      id,\n      dishFilters,\n      updateDishFilters,\n      category_id,\n      cleanDishList,\n    } = this.props;\n\n    if (+category_id !== +id) {\n      const dishBody = { category_id: id, page: 1 };\n\n      cleanDishList();\n      updateDishFilters(dishBody);\n\n      getDishes({\n        body: {\n          ...dishFilters,\n          ...dishBody,\n        },\n      });\n    }\n  }\n\n  render() {\n    const {\n      restaurant_id,\n      category_id,\n      name,\n      id,\n      mode,\n      restaurant_name,\n      category_name,\n      themeColor,\n    } = this.props;\n    // TODO: move all constants and renders, that related to \"mode\" props outside this component.\n    // We should pass all specific stuf from outer component and make this component more stupid.\n    const link =\n      mode === 'client'\n        ? `/r/${restaurant_name}/${name}`\n        : `/menu?restaurant_id=${restaurant_id}&category_id=${id}`;\n\n    const isActive =\n      // eslint-disable-next-line no-nested-ternary\n      mode === 'client'\n        ? category_name === name\n          ? 'active'\n          : ''\n        : category_id === id\n        ? 'active'\n        : '';\n\n    const navLinkStyle = {\n      backgroundColor: isActive ? themeColor : 'white',\n    };\n\n    return (\n      <NavLink\n        className={`categories-list__item ${isActive}`}\n        style={navLinkStyle}\n        to={link}\n        key={id}>\n        <ListItem key={id} onClick={this.onClickListItem}>\n          <ListItemText className=\"categories-list__item-label\">\n            {name}\n          </ListItemText>\n\n          {mode !== 'client' && (\n            <>\n              <IconButton\n                className=\"categories-list__item-control\"\n                onClick={this.onEditClick}>\n                <Edit />\n              </IconButton>\n\n              <IconButton\n                className=\"categories-list__item-control\"\n                onClick={this.onDeleteClick}>\n                <Delete />\n              </IconButton>\n            </>\n          )}\n        </ListItem>\n      </NavLink>\n    );\n  }\n}\n\nCategoryListItem.propTypes = {\n  updateDishFilters: PropTypes.func,\n  showConfirm: PropTypes.func,\n  handleDeleteCategory: PropTypes.func,\n  restaurant_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  category_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  dishFilters: PropTypes.any,\n  mode: PropTypes.string,\n};\n\nCategoryListItem.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}