{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/MenuClient.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Hidden from '@material-ui/core/Hidden';\nimport PropTypes from 'prop-types';\nimport { autobind } from 'core-decorators';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { DishOrderCreationModal } from '../modals/dish-order';\nimport { setDishOrderModal } from '../../modules/modals/dish-order';\nimport { HelperService } from '../../services';\nimport { RestaurantHeader, Preloader } from '../../components';\nimport { DishList, DishOrder, RestaurantInfo, CategoriesList } from './components';\nimport { getRestaurantForClient, managedRestaurantSelector, isRestaurantsLoadingSelector } from '../../modules/restaurants';\nimport { themeColorSelector } from '../../modules/core';\nimport { checkoutItemsSelector, totalPriceSelector, removeItemFromCheckout } from '../../modules/checkout';\nimport { getDishes, updateDishFilters, setDishPage, cleanupDish, cleanDishList, allDishesSelector, dishListCountSelector, dishListFiltersSelector, dishListLoadingSelector } from '../../modules/dishes';\nimport { categoriesListLoading, categoriesListSelector, categoriesListFiltersSelector, getCategories, cleanupCategories, updateCategoryFilters } from '../../modules/categories';\nimport './Menu.scss';\nimport { Errorcomponent } from './components/ErrorComponent/ErrorComponent';\nimport { CheckoutChangeListener } from '../CheckoutChangeListener';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    categories: categoriesListSelector(state),\n    dishes: allDishesSelector(state),\n    dishesCount: dishListCountSelector(state),\n    dishesLoading: dishListLoadingSelector(state),\n    dishFilters: dishListFiltersSelector(state),\n    categoriesFilters: categoriesListFiltersSelector(state),\n    categoriesLoading: categoriesListLoading(state),\n    restaurantLoading: isRestaurantsLoadingSelector(state),\n    restaurant: managedRestaurantSelector(state),\n    totalPrice: totalPriceSelector(state),\n    order: checkoutItemsSelector(state),\n    themeColor: themeColorSelector(state),\n    // REPLACE\n    // restaurantError: restaurantErrorSelector(state)\n    restaurantError: null // hard fix\n\n  };\n};\n\nvar mapDispatchToProps = {\n  getCategories: getCategories,\n  getDishes: getDishes,\n  updateCategoryFilters: updateCategoryFilters,\n  updateDishFilters: updateDishFilters,\n  setDishPage: setDishPage,\n  cleanupDish: cleanupDish,\n  cleanupCategories: cleanupCategories,\n  getRestaurantForClient: getRestaurantForClient,\n  setDishOrderModal: setDishOrderModal,\n  cleanDishList: cleanDishList,\n  removeItemFromCheckout: removeItemFromCheckout\n};\nvar MenuClient = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(MenuClient, _PureComponent);\n\n  function MenuClient() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MenuClient);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MenuClient)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTab: 0\n    };\n\n    _this.dishesRequest = function (name) {\n      var _this$props = _this.props,\n          dishFilters = _this$props.dishFilters,\n          updateDishFilters = _this$props.updateDishFilters,\n          pathname = _this$props.history.location.pathname,\n          getDishes = _this$props.getDishes;\n      var category_name = name || pathname.split('/')[3];\n      var restaurant_url = pathname.split('/')[2];\n\n      if (!category_name) {\n        return false;\n      }\n\n      var dishBody = {\n        category_name: category_name,\n        restaurant_url: restaurant_url\n      };\n      updateDishFilters(dishBody);\n      getDishes({\n        body: _objectSpread({}, dishFilters, dishBody)\n      });\n    };\n\n    _this.onChangeTab = function (event, activeTab) {\n      _this.setState({\n        activeTab: activeTab\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MenuClient, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props2 = this.props,\n          cleanupCategories = _this$props2.cleanupCategories,\n          cleanDishList = _this$props2.cleanDishList;\n      cleanupCategories();\n      cleanDishList();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3 = this.props,\n          getCategories = _this$props3.getCategories,\n          updateCategoryFilters = _this$props3.updateCategoryFilters,\n          categoriesFilters = _this$props3.categoriesFilters,\n          cleanupDish = _this$props3.cleanupDish,\n          getRestaurantForClient = _this$props3.getRestaurantForClient,\n          pathname = _this$props3.history.location.pathname;\n      var restaurant_url = pathname.split('/')[2];\n      var categoryFiltersPayload = {\n        restaurant_url: restaurant_url\n      };\n      var categoriesPayload = {\n        body: _objectSpread({}, categoriesFilters, categoryFiltersPayload)\n      };\n      cleanupDish();\n      getRestaurantForClient(restaurant_url);\n      updateCategoryFilters(categoryFiltersPayload);\n      getCategories(categoriesPayload);\n      this.dishesRequest();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$props4 = this.props,\n          categories = _this$props4.categories,\n          categoriesLoading = _this$props4.categoriesLoading,\n          pathname = _this$props4.history.location.pathname;\n      var restaurant_url = pathname.split('/')[2];\n      var category_name = pathname.split('/')[3];\n\n      if (categoriesLoading || category_name && categories.find(function (category) {\n        return category.name === category_name;\n      }) || !categories.length) {\n        return false;\n      }\n\n      category_name = categories[0].name;\n      this.dishesRequest(category_name);\n      this.props.history.replace(\"/r/\".concat(restaurant_url, \"/\").concat(category_name));\n    }\n  }, {\n    key: \"onBasketClick\",\n    value: function onBasketClick(dish) {\n      var setDishOrderModal = this.props.setDishOrderModal;\n      setDishOrderModal({\n        open: true,\n        id: dish.id\n      });\n    }\n  }, {\n    key: \"renderMenu\",\n    value: function renderMenu() {\n      var activeTab = this.state.activeTab;\n      var _this$props5 = this.props,\n          totalPrice = _this$props5.totalPrice,\n          restaurant = _this$props5.restaurant,\n          pathname = _this$props5.history.location.pathname,\n          removeItemFromCheckout = _this$props5.removeItemFromCheckout,\n          cleanDishList = _this$props5.cleanDishList;\n      var category_name = pathname.split('/')[3];\n      var restaurant_name = pathname.split('/')[2];\n      var category = this.props.categories.find(function (category) {\n        return category.name === category_name;\n      });\n      var category_id = category && +category.id || null;\n      return React.createElement(\"div\", {\n        className: \"menu__content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, activeTab === 0 && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"menu__content-aside\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"List of categories\"), React.createElement(CategoriesList, Object.assign({}, HelperService.pick(this.props, ['categories', 'themeColor', 'categoriesLoading', 'showConfirm', 'dishFilters', 'updateDishFilters', 'getDishes']), {\n        cleanDishList: cleanDishList,\n        mode: \"client\",\n        category_id: category_id,\n        restaurant_name: restaurant_name,\n        category_name: category_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }))), React.createElement(DishList, Object.assign({\n        category: category\n      }, {\n        category_id: category_id\n      }, {\n        mode: \"client\",\n        onBasketClick: this.onBasketClick\n      }, HelperService.pick(this.props, ['dishesLoading', 'dishesCount', 'setDishPage', 'dishes', 'showConfirm', 'addDishInOrder', 'dishFilters', 'getDishes', 'setDishSize']), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }))), activeTab === 1 && React.createElement(RestaurantInfo, {\n        restaurant: restaurant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(Hidden, {\n        smDown: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(DishOrder, Object.assign({\n        totalPrice: totalPrice,\n        restaurant_url: restaurant_name,\n        removeDishFromOrder: removeItemFromCheckout\n      }, HelperService.pick(this.props, ['removeDishFromOrder', 'order']), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"getRestaurantPhones\",\n    value: function getRestaurantPhones() {\n      var restaurant = this.props.restaurant;\n      return [restaurant.phone_number, restaurant.phone_number2].filter(Boolean);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          restaurantLoading = _this$props6.restaurantLoading,\n          restaurant = _this$props6.restaurant,\n          restaurantError = _this$props6.restaurantError;\n      var activeTab = this.state.activeTab;\n\n      if (restaurantLoading) {\n        return React.createElement(Preloader, {\n          className: \"menu-client-loader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        });\n      }\n\n      var restaurant_name = restaurant.restaurant_name,\n          page_info = restaurant.page_info;\n\n      var _ref = page_info || {},\n          background_picture = _ref.background_picture,\n          logo = _ref.logo;\n\n      if (restaurantError && restaurantError === 404) {\n        return React.createElement(Errorcomponent, {\n          message: \"404. Page not found!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        });\n      }\n\n      if (restaurantError && restaurantError === 406) {\n        return React.createElement(Errorcomponent, {\n          message: \"Sorry. This restaurant was blocked!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(DragDropContext, {\n        onDragEnd: function onDragEnd() {\n          return null;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(CheckoutChangeListener, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), React.createElement(RestaurantHeader, {\n        background_picture: background_picture,\n        address: restaurant.street_address,\n        phones: this.getRestaurantPhones(),\n        name: restaurant_name,\n        city: restaurant.city,\n        logo: logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"app-static-container menu-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        className: \"menu-client__tabs\",\n        value: activeTab,\n        indicatorColor: \"primary\",\n        onChange: this.onChangeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        label: \"Menu\",\n        className: \"menu-client__tabs-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(Tab, {\n        label: \"Info\",\n        className: \"menu-client__tabs-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      })), this.renderMenu()), React.createElement(DishOrderCreationModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return MenuClient;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onBasketClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onBasketClick\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"getRestaurantPhones\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"getRestaurantPhones\"), _class2.prototype)), _class2)) || _class);\nexport { MenuClient as default };\nMenuClient.propTypes = {\n  getCategories: PropTypes.func,\n  categories: PropTypes.array,\n  categoriesLoading: PropTypes.bool\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/MenuClient.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/MenuClient.js\");\n  reactHotLoader.register(MenuClient, \"MenuClient\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/MenuClient.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/MenuClient.js"],"names":["React","PureComponent","connect","Tabs","Tab","Hidden","PropTypes","autobind","DragDropContext","DishOrderCreationModal","setDishOrderModal","HelperService","RestaurantHeader","Preloader","DishList","DishOrder","RestaurantInfo","CategoriesList","getRestaurantForClient","managedRestaurantSelector","isRestaurantsLoadingSelector","themeColorSelector","checkoutItemsSelector","totalPriceSelector","removeItemFromCheckout","getDishes","updateDishFilters","setDishPage","cleanupDish","cleanDishList","allDishesSelector","dishListCountSelector","dishListFiltersSelector","dishListLoadingSelector","categoriesListLoading","categoriesListSelector","categoriesListFiltersSelector","getCategories","cleanupCategories","updateCategoryFilters","Errorcomponent","CheckoutChangeListener","mapStateToProps","state","categories","dishes","dishesCount","dishesLoading","dishFilters","categoriesFilters","categoriesLoading","restaurantLoading","restaurant","totalPrice","order","themeColor","restaurantError","mapDispatchToProps","MenuClient","activeTab","dishesRequest","name","props","pathname","history","location","category_name","split","restaurant_url","dishBody","body","onChangeTab","event","setState","categoryFiltersPayload","categoriesPayload","find","category","length","replace","dish","open","id","restaurant_name","category_id","pick","onBasketClick","phone_number","phone_number2","filter","Boolean","page_info","background_picture","logo","street_address","getRestaurantPhones","city","renderMenu","propTypes","func","array","bool"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Hidden from '@material-ui/core/Hidden';\nimport PropTypes from 'prop-types';\nimport { autobind } from 'core-decorators';\n\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { DishOrderCreationModal } from '../modals/dish-order';\nimport { setDishOrderModal } from '../../modules/modals/dish-order';\nimport { HelperService } from '../../services';\nimport { RestaurantHeader, Preloader } from '../../components';\nimport {\n  DishList,\n  DishOrder,\n  RestaurantInfo,\n  CategoriesList,\n} from './components';\n\nimport {\n  getRestaurantForClient,\n  managedRestaurantSelector,\n  isRestaurantsLoadingSelector,\n} from '../../modules/restaurants';\nimport { themeColorSelector } from '../../modules/core';\n\nimport {\n  checkoutItemsSelector,\n  totalPriceSelector,\n  removeItemFromCheckout,\n} from '../../modules/checkout';\n\nimport {\n  getDishes,\n  updateDishFilters,\n  setDishPage,\n  cleanupDish,\n  cleanDishList,\n  allDishesSelector,\n  dishListCountSelector,\n  dishListFiltersSelector,\n  dishListLoadingSelector,\n} from '../../modules/dishes';\n\nimport {\n  categoriesListLoading,\n  categoriesListSelector,\n  categoriesListFiltersSelector,\n  getCategories,\n  cleanupCategories,\n  updateCategoryFilters,\n} from '../../modules/categories';\n\nimport './Menu.scss';\nimport { Errorcomponent } from './components/ErrorComponent/ErrorComponent';\nimport { CheckoutChangeListener } from '../CheckoutChangeListener';\n\nconst mapStateToProps = state => ({\n  categories: categoriesListSelector(state),\n  dishes: allDishesSelector(state),\n  dishesCount: dishListCountSelector(state),\n  dishesLoading: dishListLoadingSelector(state),\n  dishFilters: dishListFiltersSelector(state),\n  categoriesFilters: categoriesListFiltersSelector(state),\n  categoriesLoading: categoriesListLoading(state),\n  restaurantLoading: isRestaurantsLoadingSelector(state),\n  restaurant: managedRestaurantSelector(state),\n  totalPrice: totalPriceSelector(state),\n  order: checkoutItemsSelector(state),\n  themeColor: themeColorSelector(state),\n  // REPLACE\n  // restaurantError: restaurantErrorSelector(state)\n  restaurantError: null, // hard fix\n});\n\nconst mapDispatchToProps = {\n  getCategories,\n  getDishes,\n  updateCategoryFilters,\n  updateDishFilters,\n  setDishPage,\n  cleanupDish,\n  cleanupCategories,\n  getRestaurantForClient,\n  setDishOrderModal,\n  cleanDishList,\n  removeItemFromCheckout,\n};\n\nexport default\n@connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)\nclass MenuClient extends PureComponent {\n  state = {\n    activeTab: 0,\n  };\n\n  componentWillUnmount() {\n    const { cleanupCategories, cleanDishList } = this.props;\n\n    cleanupCategories();\n    cleanDishList();\n  }\n\n  componentDidMount() {\n    const {\n      getCategories,\n      updateCategoryFilters,\n      categoriesFilters,\n      cleanupDish,\n      getRestaurantForClient,\n      history: {\n        location: { pathname },\n      },\n    } = this.props;\n\n    const restaurant_url = pathname.split('/')[2];\n    const categoryFiltersPayload = { restaurant_url };\n\n    const categoriesPayload = {\n      body: { ...categoriesFilters, ...categoryFiltersPayload },\n    };\n\n    cleanupDish();\n    getRestaurantForClient(restaurant_url);\n    updateCategoryFilters(categoryFiltersPayload);\n    getCategories(categoriesPayload);\n    this.dishesRequest();\n  }\n\n  componentDidUpdate() {\n    const {\n      categories,\n      categoriesLoading,\n      history: {\n        location: { pathname },\n      },\n    } = this.props;\n\n    const restaurant_url = pathname.split('/')[2];\n    let category_name = pathname.split('/')[3];\n\n    if (\n      categoriesLoading ||\n      (category_name &&\n        categories.find(category => category.name === category_name)) ||\n      !categories.length\n    ) {\n      return false;\n    }\n\n    category_name = categories[0].name;\n\n    this.dishesRequest(category_name);\n    this.props.history.replace(`/r/${restaurant_url}/${category_name}`);\n  }\n\n  dishesRequest = name => {\n    const {\n      dishFilters,\n      updateDishFilters,\n      history: {\n        location: { pathname },\n      },\n      getDishes,\n    } = this.props;\n    const category_name = name || pathname.split('/')[3];\n    const restaurant_url = pathname.split('/')[2];\n\n    if (!category_name) {\n      return false;\n    }\n\n    const dishBody = { category_name, restaurant_url };\n    updateDishFilters(dishBody);\n    getDishes({ body: { ...dishFilters, ...dishBody } });\n  };\n\n  @autobind\n  onBasketClick(dish) {\n    const { setDishOrderModal } = this.props;\n    setDishOrderModal({ open: true, id: dish.id });\n  }\n\n  renderMenu() {\n    const { activeTab } = this.state;\n    const {\n      totalPrice,\n      restaurant,\n      history: {\n        location: { pathname },\n      },\n      removeItemFromCheckout,\n      cleanDishList,\n    } = this.props;\n    const category_name = pathname.split('/')[3];\n    const restaurant_name = pathname.split('/')[2];\n    const category = this.props.categories.find(\n      category => category.name === category_name,\n    );\n    const category_id = (category && +category.id) || null;\n\n    return (\n      <div className=\"menu__content\">\n        {activeTab === 0 && (\n          <>\n            <div className=\"menu__content-aside\">\n              <h3>List of categories</h3>\n              <CategoriesList\n                {...HelperService.pick(this.props, [\n                  'categories',\n                  'themeColor',\n                  'categoriesLoading',\n                  'showConfirm',\n                  'dishFilters',\n                  'updateDishFilters',\n                  'getDishes',\n                ])}\n                cleanDishList={cleanDishList}\n                mode=\"client\"\n                category_id={category_id}\n                restaurant_name={restaurant_name}\n                category_name={category_name}\n              />\n            </div>\n            <DishList\n              category={category}\n              {...{\n                category_id,\n              }}\n              mode=\"client\"\n              onBasketClick={this.onBasketClick}\n              {...HelperService.pick(this.props, [\n                'dishesLoading',\n                'dishesCount',\n                'setDishPage',\n                'dishes',\n                'showConfirm',\n                'addDishInOrder',\n                'dishFilters',\n                'getDishes',\n                'setDishSize',\n              ])}\n            />\n          </>\n        )}\n\n        {activeTab === 1 && <RestaurantInfo restaurant={restaurant} />}\n\n        <Hidden smDown>\n          <DishOrder\n            totalPrice={totalPrice}\n            restaurant_url={restaurant_name}\n            removeDishFromOrder={removeItemFromCheckout}\n            {...HelperService.pick(this.props, [\n              'removeDishFromOrder',\n              'order',\n            ])}\n          />\n        </Hidden>\n      </div>\n    );\n  }\n\n  onChangeTab = (event, activeTab) => {\n    this.setState({ activeTab });\n  };\n\n  @autobind\n  getRestaurantPhones() {\n    const { restaurant } = this.props;\n\n    return [restaurant.phone_number, restaurant.phone_number2].filter(Boolean);\n  }\n\n  render() {\n    const { restaurantLoading, restaurant, restaurantError } = this.props;\n    const { activeTab } = this.state;\n\n    if (restaurantLoading) {\n      return <Preloader className=\"menu-client-loader\" />;\n    }\n\n    const { restaurant_name, page_info } = restaurant;\n\n    const { background_picture, logo } = page_info || {};\n\n    if (restaurantError && restaurantError === 404) {\n      return <Errorcomponent message=\"404. Page not found!\" />;\n    }\n\n    if (restaurantError && restaurantError === 406) {\n      return <Errorcomponent message=\"Sorry. This restaurant was blocked!\" />;\n    }\n\n    return (\n      <DragDropContext onDragEnd={() => null}>\n        <CheckoutChangeListener />\n        <RestaurantHeader\n          background_picture={background_picture}\n          address={restaurant.street_address}\n          phones={this.getRestaurantPhones()}\n          name={restaurant_name}\n          city={restaurant.city}\n          logo={logo}\n        />\n        <div className=\"app-static-container menu-container\">\n          <Tabs\n            className=\"menu-client__tabs\"\n            value={activeTab}\n            indicatorColor=\"primary\"\n            onChange={this.onChangeTab}>\n            <Tab label=\"Menu\" className=\"menu-client__tabs-item\" />\n            <Tab label=\"Info\" className=\"menu-client__tabs-item\" />\n          </Tabs>\n\n          {this.renderMenu()}\n        </div>\n\n        <DishOrderCreationModal />\n      </DragDropContext>\n    );\n  }\n}\n\nMenuClient.propTypes = {\n  getCategories: PropTypes.func,\n  categories: PropTypes.array,\n  categoriesLoading: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}