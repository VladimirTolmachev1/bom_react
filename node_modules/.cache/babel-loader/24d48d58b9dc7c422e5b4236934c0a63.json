{"ast":null,"code":"import _regeneratorRuntime from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getRestaurantForClientSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(restaurantsSaga);\n\nimport { takeLatest, all, call, put } from 'redux-saga/effects';\nimport RestaurantsApiService from './restaurants.api.service';\nimport { setThemeColor } from '../core/core.actions';\nimport * as actions from './restaurants.actions';\nimport { GET_RESTAURANT_FOR_CLIENT_REQUEST } from './restaurants.types';\n\nfunction getRestaurantForClientSaga(_ref) {\n  var url, _ref2, restaurant, _restaurant$page_info, menu_navigation_color, menu_background_color;\n\n  return _regeneratorRuntime.wrap(function getRestaurantForClientSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(RestaurantsApiService.getByUrlForClient, url);\n\n        case 4:\n          _ref2 = _context.sent;\n          restaurant = _ref2.data;\n          _restaurant$page_info = restaurant.page_info, menu_navigation_color = _restaurant$page_info.menu_navigation_color, menu_background_color = _restaurant$page_info.menu_background_color;\n          _context.next = 9;\n          return put(actions.getRestaurantForClientSuccess(restaurant));\n\n        case 9:\n          _context.next = 11;\n          return put(setThemeColor(menu_navigation_color, menu_background_color));\n\n        case 11:\n          _context.next = 18;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](1);\n          console.error(_context.t0);\n          _context.next = 18;\n          return put(actions.getRestaurantForClientError(_context.t0));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[1, 13]]);\n}\n\nexport function restaurantsSaga() {\n  return _regeneratorRuntime.wrap(function restaurantsSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([takeLatest(GET_RESTAURANT_FOR_CLIENT_REQUEST, getRestaurantForClientSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(getRestaurantForClientSaga, \"getRestaurantForClientSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/restaurants/restaurants.sagas.js\");\n  reactHotLoader.register(restaurantsSaga, \"restaurantsSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/restaurants/restaurants.sagas.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/restaurants/restaurants.sagas.js"],"names":["getRestaurantForClientSaga","restaurantsSaga","takeLatest","all","call","put","RestaurantsApiService","setThemeColor","actions","GET_RESTAURANT_FOR_CLIENT_REQUEST","url","payload","getByUrlForClient","restaurant","data","page_info","menu_navigation_color","menu_background_color","getRestaurantForClientSuccess","console","error","getRestaurantForClientError"],"mappings":";;;;;;;;;yBASUA,0B;;;yBAoBOC,e;;AA7BjB,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,qBAAP,MAAkC,2BAAlC;AAEA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AAEA,SAASC,iCAAT,QAAkD,qBAAlD;;AAEA,SAAUT,0BAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAgDU,UAAAA,GAAhD,QAAuCC,OAAvC;AAAA;AAAA;AAEiC,iBAAMP,IAAI,CACrCE,qBAAqB,CAACM,iBADe,EAErCF,GAFqC,CAAV;;AAFjC;AAAA;AAEkBG,UAAAA,UAFlB,SAEYC,IAFZ;AAAA,kCAUQD,UAAU,CAACE,SAVnB,EAQMC,qBARN,yBAQMA,qBARN,EASMC,qBATN,yBASMA,qBATN;AAAA;AAYI,iBAAMZ,GAAG,CAACG,OAAO,CAACU,6BAAR,CAAsCL,UAAtC,CAAD,CAAT;;AAZJ;AAAA;AAaI,iBAAMR,GAAG,CAACE,aAAa,CAACS,qBAAD,EAAwBC,qBAAxB,CAAd,CAAT;;AAbJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAeIE,UAAAA,OAAO,CAACC,KAAR;AAfJ;AAgBI,iBAAMf,GAAG,CAACG,OAAO,CAACa,2BAAR,aAAD,CAAT;;AAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,OAAO,SAAUpB,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,GAAG,CAAC,CACRD,UAAU,CAACO,iCAAD,EAAoCT,0BAApC,CADF,CAAD,CAAT;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;0BApBGA,0B;0BAoBOC,e","sourcesContent":["import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport RestaurantsApiService from './restaurants.api.service';\n\nimport { setThemeColor } from '../core/core.actions';\n\nimport * as actions from './restaurants.actions';\n\nimport { GET_RESTAURANT_FOR_CLIENT_REQUEST } from './restaurants.types';\n\nfunction* getRestaurantForClientSaga({ payload: url }) {\n  try {\n    const { data: restaurant } = yield call(\n      RestaurantsApiService.getByUrlForClient,\n      url,\n    );\n\n    const {\n      menu_navigation_color,\n      menu_background_color,\n    } = restaurant.page_info;\n\n    yield put(actions.getRestaurantForClientSuccess(restaurant));\n    yield put(setThemeColor(menu_navigation_color, menu_background_color));\n  } catch (error) {\n    console.error(error);\n    yield put(actions.getRestaurantForClientError(error));\n  }\n}\n\nexport function* restaurantsSaga() {\n  yield all([\n    takeLatest(GET_RESTAURANT_FOR_CLIENT_REQUEST, getRestaurantForClientSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}