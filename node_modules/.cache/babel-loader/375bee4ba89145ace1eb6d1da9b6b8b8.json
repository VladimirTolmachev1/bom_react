{"ast":null,"code":"import _regeneratorRuntime from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/MenuRestorator.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Add from '@material-ui/icons/Add';\nimport { autobind } from 'core-decorators';\nimport { HelperService } from '/services/'; //todo add here multiabort page request\n\nimport { CategoriesList, DishList } from './components/';\nimport { CategoryModal } from '/scenes/CategoryModal';\nimport { DishModal } from '/scenes/DishModal';\nimport { showConfirm } from '../AppConfirm/modules';\nimport { queryParamsFromPropsSelector } from './../../selectors/common';\nimport { toggleCategoryModal, setMode as setCategoryModalMode } from '/scenes/CategoryModal/modules';\nimport { toggleDishModal, setMode as setDishModalMode } from '/scenes/DishModal/modules';\nimport { categoriesListLoading, categoriesListSelector, dishListLoadingSelector, getCategories, getDishes, deleteCategory, publishDishes, removeDish, updateCategory, dishListSelector, updateCategoryFilters, updateDishFilters, categoriesListFiltersSelector, dishListCountSelector, dishListFiltersSelector, setDishPage, unpublishDishes, cleanupDish, cleanupCategories } from './modules';\nimport './Menu.scss';\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    categories: categoriesListSelector(state),\n    dishes: dishListSelector(state),\n    dishesCount: dishListCountSelector(state),\n    dishesLoading: dishListLoadingSelector(state),\n    dishFilters: dishListFiltersSelector(state),\n    categoriesFilters: categoriesListFiltersSelector(state),\n    categoriesLoading: categoriesListLoading(state),\n    queryParams: queryParamsFromPropsSelector(ownProps)\n  };\n};\n\nvar mapDispatchToProps = {\n  getCategories: getCategories,\n  getDishes: getDishes,\n  deleteCategory: deleteCategory,\n  updateCategory: updateCategory,\n  showConfirm: showConfirm,\n  toggleCategoryModal: toggleCategoryModal,\n  setCategoryModalMode: setCategoryModalMode,\n  updateCategoryFilters: updateCategoryFilters,\n  toggleDishModal: toggleDishModal,\n  setDishModalMode: setDishModalMode,\n  publishDishes: publishDishes,\n  unpublishDishes: unpublishDishes,\n  updateDishFilters: updateDishFilters,\n  removeDish: removeDish,\n  setDishPage: setDishPage,\n  cleanupDish: cleanupDish,\n  cleanupCategories: cleanupCategories\n};\nvar MenuRestorator = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = (_class2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MenuRestorator, _Component);\n\n  function MenuRestorator() {\n    _classCallCheck(this, MenuRestorator);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MenuRestorator).apply(this, arguments));\n  }\n\n  _createClass(MenuRestorator, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props = this.props,\n          cleanupDish = _this$props.cleanupDish,\n          cleanupCategories = _this$props.cleanupCategories;\n      cleanupCategories();\n      cleanupDish();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this$props2, getCategories, cleanupDish, updateCategoryFilters, categoriesFilters, queryParams, restaurant_id, category_id, categoryBody, categories;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props2 = this.props, getCategories = _this$props2.getCategories, cleanupDish = _this$props2.cleanupDish, updateCategoryFilters = _this$props2.updateCategoryFilters, categoriesFilters = _this$props2.categoriesFilters, queryParams = _this$props2.queryParams;\n                restaurant_id = queryParams.restaurant_id, category_id = queryParams.category_id;\n                categoryBody = {\n                  restaurant_id: restaurant_id\n                };\n                cleanupDish();\n                updateCategoryFilters(categoryBody);\n                _context.next = 7;\n                return getCategories({\n                  body: _objectSpread({}, categoriesFilters, categoryBody)\n                }).promise;\n\n              case 7:\n                categories = _context.sent;\n\n                if (categories.data.length) {\n                  _context.next = 10;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 10:\n                if (!categories.data.find(function (category) {\n                  return category.id === category_id;\n                })) {\n                  category_id = categories.data[0].id;\n                }\n\n                this.handleSetQueryParams({\n                  category_id: category_id\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"dishesRequest\",\n    value: function dishesRequest(category_id) {\n      var _this$props3 = this.props,\n          dishFilters = _this$props3.dishFilters,\n          updateDishFilters = _this$props3.updateDishFilters,\n          getDishes = _this$props3.getDishes;\n      var dishBody = {\n        category_id: category_id\n      };\n      updateDishFilters(dishBody);\n      getDishes({\n        body: _objectSpread({}, dishFilters, dishBody)\n      });\n    }\n  }, {\n    key: \"onAddCategoryClick\",\n    value: function onAddCategoryClick() {\n      var _this$props4 = this.props,\n          toggleCategoryModal = _this$props4.toggleCategoryModal,\n          setCategoryModalMode = _this$props4.setCategoryModalMode;\n      toggleCategoryModal();\n      setCategoryModalMode('add');\n    }\n  }, {\n    key: \"onAddDishClick\",\n    value: function onAddDishClick() {\n      var toggleDishModal = this.props.toggleDishModal;\n      toggleDishModal();\n    }\n  }, {\n    key: \"onPublishClick\",\n    value: function onPublishClick() {\n      var _this$props5 = this.props,\n          publishDishes = _this$props5.publishDishes,\n          dishes = _this$props5.dishes,\n          showConfirm = _this$props5.showConfirm;\n      var ids = dishes.filter(function (dish) {\n        return !dish.isPublished;\n      }).map(function (dish) {\n        return dish.id;\n      });\n      showConfirm({\n        data: {\n          dish_items: ids\n        },\n        onSuccess: publishDishes,\n        content: 'Are you sure you want to publish all unpublished dishes?'\n      });\n    }\n  }, {\n    key: \"isAddNewDishDisabled\",\n    value: function isAddNewDishDisabled() {\n      var _this$props6 = this.props,\n          categories = _this$props6.categories,\n          queryParams = _this$props6.queryParams;\n      return !queryParams.category_id || !categories.length;\n    }\n  }, {\n    key: \"isPublishUpdatesDisabled\",\n    value: function isPublishUpdatesDisabled() {\n      var dishes = this.props.dishes;\n      return dishes.every(function (dish) {\n        return dish.isPublished;\n      });\n    }\n  }, {\n    key: \"handleCategoryFilterChange\",\n    value: function handleCategoryFilterChange(_ref) {\n      var id = _ref.id;\n      this.handleSetQueryParams({\n        category_id: id\n      });\n    }\n  }, {\n    key: \"handleSetQueryParams\",\n    value: function handleSetQueryParams(queryParamsObj) {\n      var _this$props7 = this.props,\n          cleanupDish = _this$props7.cleanupDish,\n          _this$props7$queryPar = _this$props7.queryParams,\n          restaurant_id = _this$props7$queryPar.restaurant_id,\n          category_id = _this$props7$queryPar.category_id,\n          history = _this$props7.history;\n\n      if (queryParamsObj.category_id === category_id) {\n        return;\n      }\n\n      var query = HelperService.objToQueryString(_objectSpread({\n        restaurant_id: restaurant_id\n      }, queryParamsObj));\n\n      if (queryParamsObj.category_id) {\n        this.dishesRequest(queryParamsObj.category_id);\n      } else {\n        cleanupDish();\n      }\n\n      history.replace(\"/menu?\".concat(query));\n    }\n  }, {\n    key: \"handleDeleteCategory\",\n    value: function () {\n      var _handleDeleteCategory = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(_ref2) {\n        var body, _this$props8, deleteCategory, categories, category_id, filteredCategories, length;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                body = _ref2.body;\n                _this$props8 = this.props, deleteCategory = _this$props8.deleteCategory, categories = _this$props8.categories;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return deleteCategory({\n                  body: body\n                }).promise;\n\n              case 5:\n                filteredCategories = categories.filter(function (_ref3) {\n                  var id = _ref3.id;\n                  return id !== body.id;\n                });\n                length = filteredCategories.length;\n\n                if (length) {\n                  category_id = filteredCategories[length - 1].id;\n                }\n\n                this.handleSetQueryParams({\n                  category_id: category_id\n                });\n                _context2.next = 13;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](2);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 11]]);\n      }));\n\n      return function handleDeleteCategory(_x) {\n        return _handleDeleteCategory.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$queryPara = this.props.queryParams,\n          restaurant_id = _this$props$queryPara.restaurant_id,\n          _this$props$queryPara2 = _this$props$queryPara.category_id,\n          category_id = _this$props$queryPara2 === void 0 ? '' : _this$props$queryPara2;\n      return React.createElement(\"div\", {\n        className: \"app-static-container menu-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(CategoryModal, {\n        restaurant_id: restaurant_id,\n        onSuccessAction: this.handleCategoryFilterChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(DishModal, {\n        category_id: category_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"menu__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Menu management\"), React.createElement(Button, {\n        variant: \"contained\",\n        className: 'menu__add-dish-btn',\n        color: 'primary',\n        onClick: this.onAddCategoryClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Add, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), \"Add new category\"), React.createElement(Button, {\n        variant: \"contained\",\n        className: 'menu__add-dish-btn',\n        color: 'primary',\n        onClick: this.onAddDishClick,\n        disabled: this.isAddNewDishDisabled(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Add, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), \"Add new dish\")), React.createElement(\"div\", {\n        className: \"menu__content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menu__content-aside\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"List of categories\"), React.createElement(CategoriesList, Object.assign({}, HelperService.pick(this.props, ['categories', 'setCategoryModalMode', 'toggleCategoryModal', 'categoriesLoading', 'showConfirm', 'dishFilters', 'updateDishFilters', 'getDishes']), {\n        restaurant_id: restaurant_id,\n        category_id: category_id\n      }, {\n        handleDeleteCategory: this.handleDeleteCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: 'contained',\n        onClick: this.onPublishClick,\n        className: 'menu__publish-btn',\n        disabled: this.isPublishUpdatesDisabled(),\n        color: 'secondary',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Publish updates\")), React.createElement(DishList, Object.assign({\n        category_id: category_id\n      }, HelperService.pick(this.props, ['dishesLoading', 'dishesCount', 'setDishPage', 'dishes', 'toggleDishModal', 'showConfirm', 'removeDish', 'publishDishes', 'unpublishDishes', 'dishFilters', 'getDishes', 'setDishModalMode']), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return MenuRestorator;\n}(Component), (_applyDecoratedDescriptor(_class2.prototype, \"dishesRequest\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"dishesRequest\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onAddCategoryClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onAddCategoryClick\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onAddDishClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onAddDishClick\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onPublishClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onPublishClick\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"handleCategoryFilterChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"handleCategoryFilterChange\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"handleDeleteCategory\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"handleDeleteCategory\"), _class2.prototype)), _class2)) || _class);\nexport { MenuRestorator as default };\nMenuRestorator.propTypes = {\n  getCategories: PropTypes.func,\n  deleteCategory: PropTypes.func,\n  updateCategory: PropTypes.func,\n  showConfirm: PropTypes.func,\n  categories: PropTypes.array,\n  categoriesLoading: PropTypes.bool\n};\nMenuRestorator.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/MenuRestorator.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/MenuRestorator.js\");\n  reactHotLoader.register(MenuRestorator, \"MenuRestorator\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/MenuRestorator.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/MenuRestorator.js"],"names":["React","Component","PropTypes","connect","Button","Add","autobind","HelperService","CategoriesList","DishList","CategoryModal","DishModal","showConfirm","queryParamsFromPropsSelector","toggleCategoryModal","setMode","setCategoryModalMode","toggleDishModal","setDishModalMode","categoriesListLoading","categoriesListSelector","dishListLoadingSelector","getCategories","getDishes","deleteCategory","publishDishes","removeDish","updateCategory","dishListSelector","updateCategoryFilters","updateDishFilters","categoriesListFiltersSelector","dishListCountSelector","dishListFiltersSelector","setDishPage","unpublishDishes","cleanupDish","cleanupCategories","mapStateToProps","state","ownProps","categories","dishes","dishesCount","dishesLoading","dishFilters","categoriesFilters","categoriesLoading","queryParams","mapDispatchToProps","MenuRestorator","props","restaurant_id","category_id","categoryBody","body","promise","data","length","find","category","id","handleSetQueryParams","dishBody","ids","filter","dish","isPublished","map","dish_items","onSuccess","content","every","queryParamsObj","history","query","objToQueryString","dishesRequest","replace","filteredCategories","handleCategoryFilterChange","onAddCategoryClick","onAddDishClick","isAddNewDishDisabled","pick","handleDeleteCategory","onPublishClick","isPublishUpdatesDisabled","propTypes","func","array","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Add from '@material-ui/icons/Add';\nimport { autobind } from 'core-decorators';\n\nimport { HelperService } from '/services/';\n\n//todo add here multiabort page request\n\nimport { CategoriesList, DishList } from './components/';\nimport { CategoryModal } from '/scenes/CategoryModal';\nimport { DishModal } from '/scenes/DishModal';\n\nimport { showConfirm } from '../AppConfirm/modules';\nimport { queryParamsFromPropsSelector } from './../../selectors/common';\n\nimport {\n    toggleCategoryModal,\n    setMode as setCategoryModalMode\n} from '/scenes/CategoryModal/modules';\n\nimport {\n    toggleDishModal,\n    setMode as setDishModalMode\n} from '/scenes/DishModal/modules';\n\nimport {\n    categoriesListLoading,\n    categoriesListSelector,\n    dishListLoadingSelector,\n    getCategories,\n    getDishes,\n    deleteCategory,\n    publishDishes,\n    removeDish,\n    updateCategory,\n    dishListSelector,\n    updateCategoryFilters,\n    updateDishFilters,\n    categoriesListFiltersSelector,\n    dishListCountSelector,\n    dishListFiltersSelector,\n    setDishPage,\n    unpublishDishes,\n    cleanupDish,\n    cleanupCategories\n} from './modules';\n\nimport './Menu.scss';\n\n\n\nconst mapStateToProps = (state, ownProps) => ({\n    categories: categoriesListSelector(state),\n    dishes: dishListSelector(state),\n    dishesCount: dishListCountSelector(state),\n    dishesLoading: dishListLoadingSelector(state),\n    dishFilters: dishListFiltersSelector(state),\n    categoriesFilters: categoriesListFiltersSelector(state),\n    categoriesLoading: categoriesListLoading(state),\n    queryParams: queryParamsFromPropsSelector(ownProps),\n\n});\n\nconst mapDispatchToProps = {\n    getCategories,\n    getDishes,\n    deleteCategory,\n    updateCategory,\n    showConfirm,\n    toggleCategoryModal,\n    setCategoryModalMode,\n    updateCategoryFilters,\n    toggleDishModal,\n    setDishModalMode,\n    publishDishes,\n    unpublishDishes,\n    updateDishFilters,\n    removeDish,\n    setDishPage,\n    cleanupDish,\n    cleanupCategories\n};\n\nexport default\n@connect(\n    mapStateToProps,\n    mapDispatchToProps\n)\nclass MenuRestorator extends Component {\n\n    componentWillUnmount() {\n        const { cleanupDish, cleanupCategories } = this.props;\n        cleanupCategories();\n        cleanupDish();\n    }\n\n    async componentDidMount() {\n        const {\n            getCategories,\n            cleanupDish,\n            updateCategoryFilters,\n            categoriesFilters,\n            queryParams\n        } = this.props;\n        let { restaurant_id, category_id } = queryParams;\n        const categoryBody = { restaurant_id };\n\n        cleanupDish();\n        updateCategoryFilters(categoryBody);\n\n        const categories = await getCategories({ body: { ...categoriesFilters, ...categoryBody } }).promise;\n\n        if( !categories.data.length ) {\n            return;\n        }\n\n        if( !categories.data.find(category => category.id === category_id) ) {\n            category_id = categories.data[0].id;\n        }\n\n        this.handleSetQueryParams({ category_id });\n    }\n\n    @autobind\n    dishesRequest(category_id) {\n        const { dishFilters, updateDishFilters, getDishes } = this.props;\n\n        const dishBody = { category_id };\n        updateDishFilters(dishBody);\n        getDishes({ body: { ...dishFilters, ...dishBody } });\n    }\n\n    @autobind\n    onAddCategoryClick() {\n        const { toggleCategoryModal, setCategoryModalMode } = this.props;\n\n        toggleCategoryModal();\n        setCategoryModalMode('add');\n    }\n\n    @autobind\n    onAddDishClick() {\n        const { toggleDishModal } = this.props;\n        toggleDishModal();\n    }\n\n    @autobind\n    onPublishClick() {\n        const { publishDishes, dishes, showConfirm } = this.props;\n        const ids = dishes\n            .filter(dish => !dish.isPublished)\n            .map(dish => dish.id);\n\n        showConfirm({\n            data: { dish_items: ids },\n            onSuccess: publishDishes,\n            content: 'Are you sure you want to publish all unpublished dishes?'\n        });\n    }\n\n    isAddNewDishDisabled() {\n        const { categories, queryParams } = this.props;\n        \n        return !queryParams.category_id || !categories.length;\n    }\n\n    isPublishUpdatesDisabled() {\n        const { dishes } = this.props;\n        return dishes.every(dish => dish.isPublished);\n    }\n\n    @autobind\n    handleCategoryFilterChange( { id } ) {\n        this.handleSetQueryParams({ category_id: id })\n    }\n\n    handleSetQueryParams(queryParamsObj) {\n        const { \n          cleanupDish,\n          queryParams: {restaurant_id, category_id},\n          history\n        } = this.props;\n        \n        if( queryParamsObj.category_id === category_id) {\n          return\n        }\n\n        const query = HelperService.objToQueryString({ restaurant_id, ...queryParamsObj });\n\n        if( queryParamsObj.category_id ) {\n          this.dishesRequest(queryParamsObj.category_id)\n        } else {\n          cleanupDish()\n        }\n\n        history.replace(`/menu?${ query }`);\n    }\n\n    @autobind\n    async handleDeleteCategory( { body } ) {\n        const { deleteCategory, categories } = this.props;\n        let category_id\n\n        try {\n            await deleteCategory( { body } ).promise;\n\n            const filteredCategories = categories.filter( ({ id }) => id !== body.id );\n            const length = filteredCategories.length\n            if(length) {\n                category_id = filteredCategories[length - 1 ].id\n            } \n\n            this.handleSetQueryParams({ category_id })\n          \n        } catch (error) {\n            // todo: error notifications\n        }\n    }\n\n    render() {\n        const { restaurant_id, category_id = '' } = this.props.queryParams;\n        return (\n            <div className='app-static-container menu-container'>\n                <CategoryModal \n                    restaurant_id={restaurant_id} \n                    onSuccessAction={ this.handleCategoryFilterChange }\n                />\n\n                <DishModal category_id={category_id} />\n                <div className='menu__header'>\n                    <h1>Menu management</h1>\n                    <Button\n                        variant='contained'\n                        className={'menu__add-dish-btn'}\n                        color={'primary'}\n                        onClick={this.onAddCategoryClick}\n                    >\n                        <Add />\n                        Add new category\n                    </Button>\n\n                    <Button\n                        variant='contained'\n                        className={'menu__add-dish-btn'}\n                        color={'primary'}\n                        onClick={this.onAddDishClick}\n                        disabled={ this.isAddNewDishDisabled() }\n                    >\n                        <Add />\n                        Add new dish\n                    </Button>\n                </div>\n                <div className='menu__content'>\n                    <div className='menu__content-aside'>\n                        <h3>List of categories</h3>\n                        <CategoriesList\n                            {...HelperService.pick(this.props, [\n                                'categories',\n                                'setCategoryModalMode',\n                                'toggleCategoryModal',\n                                'categoriesLoading',\n                                'showConfirm',\n                                'dishFilters',\n                                'updateDishFilters',\n                                'getDishes'\n                            ])}\n                            {...{\n                                restaurant_id,\n                                category_id\n                            }}\n                            handleDeleteCategory={ this.handleDeleteCategory }\n                        />\n                        <Button\n                            variant={'contained'}\n                            onClick={this.onPublishClick}\n                            className={'menu__publish-btn'}\n                            disabled={this.isPublishUpdatesDisabled()}\n                            color={'secondary'}\n                        >\n                            Publish updates\n                        </Button>\n                    </div>\n\n                    <DishList\n                        {...{\n                            category_id\n                        }}\n                        {...HelperService.pick(this.props, [\n                            'dishesLoading',\n                            'dishesCount',\n                            'setDishPage',\n                            'dishes',\n                            'toggleDishModal',\n                            'showConfirm',\n                            'removeDish',\n                            'publishDishes',\n                            'unpublishDishes',\n                            'dishFilters',\n                            'getDishes',\n                            'setDishModalMode'\n                        ])}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nMenuRestorator.propTypes = {\n    getCategories: PropTypes.func,\n    deleteCategory: PropTypes.func,\n    updateCategory: PropTypes.func,\n    showConfirm: PropTypes.func,\n    categories: PropTypes.array,\n    categoriesLoading: PropTypes.bool\n};\nMenuRestorator.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}