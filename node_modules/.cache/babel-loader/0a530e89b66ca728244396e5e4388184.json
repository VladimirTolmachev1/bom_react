{"ast":null,"code":"import _regeneratorRuntime from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signInSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signOutSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(authSaga);\n\n/* eslint-disable require-yield */\nimport { takeLatest, all } from 'redux-saga/effects';\nimport { axiosInstance } from '../../services/BaseApiService/axiosInstance';\nimport { SIGN_IN_SUCCESS, SIGN_OUT } from './core.types'; // todo: put here all sign-in logic\n\nfunction signInSaga(action) {\n  var token;\n  return _regeneratorRuntime.wrap(function signInSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          token = action.response.token;\n          axiosInstance.defaults.headers.Authorization = \"Bearer \".concat(token);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this);\n}\n\nfunction signOutSaga() {\n  return _regeneratorRuntime.wrap(function signOutSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          delete axiosInstance.defaults.headers.Authorization;\n          localStorage.removeItem('token');\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport function authSaga() {\n  return _regeneratorRuntime.wrap(function authSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([// TODO: change trigger to SIGN_IN_REQUEST\n          takeLatest(SIGN_IN_SUCCESS, signInSaga), takeLatest(SIGN_OUT, signOutSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(signInSaga, \"signInSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.sagas.js\");\n  reactHotLoader.register(signOutSaga, \"signOutSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.sagas.js\");\n  reactHotLoader.register(authSaga, \"authSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.sagas.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.sagas.js"],"names":["signInSaga","signOutSaga","authSaga","takeLatest","all","axiosInstance","SIGN_IN_SUCCESS","SIGN_OUT","action","token","response","defaults","headers","Authorization","localStorage","removeItem"],"mappings":";;;;;;;;;yBAOUA,U;;;yBAMAC,W;;;yBAKOC,Q;;AAlBjB;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SAASC,aAAT,QAA8B,6CAA9B;AAEA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,cAA1C,C,CAEA;;AACA,SAAUP,UAAV,CAAqBQ,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,UAAAA,KADV,GACoBD,MAAM,CAACE,QAD3B,CACUD,KADV;AAGEJ,UAAAA,aAAa,CAACM,QAAd,CAAuBC,OAAvB,CAA+BC,aAA/B,oBAAyDJ,KAAzD;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,SAAUR,WAAV;AAAA;AAAA;AAAA;AAAA;AACE,iBAAOI,aAAa,CAACM,QAAd,CAAuBC,OAAvB,CAA+BC,aAAtC;AACAC,UAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,OAAO,SAAUb,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,GAAG,CAAC,CACR;AACAD,UAAAA,UAAU,CAACG,eAAD,EAAkBN,UAAlB,CAFF,EAGRG,UAAU,CAACI,QAAD,EAAWN,WAAX,CAHF,CAAD,CAAT;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;0BAXGD,U;0BAMAC,W;0BAKOC,Q","sourcesContent":["/* eslint-disable require-yield */\nimport { takeLatest, all } from 'redux-saga/effects';\nimport { axiosInstance } from '../../services/BaseApiService/axiosInstance';\n\nimport { SIGN_IN_SUCCESS, SIGN_OUT } from './core.types';\n\n// todo: put here all sign-in logic\nfunction* signInSaga(action) {\n  const { token } = action.response;\n\n  axiosInstance.defaults.headers.Authorization = `Bearer ${token}`;\n}\n\nfunction* signOutSaga() {\n  delete axiosInstance.defaults.headers.Authorization;\n  localStorage.removeItem('token');\n}\n\nexport function* authSaga() {\n  yield all([\n    // TODO: change trigger to SIGN_IN_REQUEST\n    takeLatest(SIGN_IN_SUCCESS, signInSaga),\n    takeLatest(SIGN_OUT, signOutSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}