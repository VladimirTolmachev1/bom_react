{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class,\n    _class2,\n    _temp,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppTable/AppTable.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\nimport MoreHoriz from '@material-ui/icons/MoreHoriz';\nimport { autobind } from 'core-decorators';\nimport { AppTableFooter, AppTableHeader } from './components';\nimport { AppPreloaderSmall } from '../AppPreloaderSmall';\nimport './AppTable.scss';\nexport var AppTable = (_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AppTable, _PureComponent);\n\n  function AppTable() {\n    _classCallCheck(this, AppTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppTable).apply(this, arguments));\n  }\n\n  _createClass(AppTable, [{\n    key: \"onSortHeaderCellClick\",\n    value: function onSortHeaderCellClick(event) {\n      var sort_field = event.currentTarget.dataset.sort_field;\n\n      var _this$getTableOptions = this.getTableOptions(),\n          onSortChange = _this$getTableOptions.onSortChange;\n\n      var sort_order;\n\n      if (sort_field !== this.props.sort_field) {\n        sort_order = 'asc';\n        onSortChange({\n          sort_field: sort_field,\n          sort_order: sort_order\n        });\n        return;\n      }\n\n      switch (this.props.sort_order) {\n        case '':\n          {\n            sort_order = 'asc';\n            break;\n          }\n\n        case 'asc':\n          {\n            sort_order = 'desc';\n            break;\n          }\n\n        case 'desc':\n          {\n            sort_order = '';\n            sort_field = '';\n            break;\n          }\n\n        default:\n          {\n            sort_order = 'asc';\n            break;\n          }\n      }\n\n      onSortChange({\n        sort_field: sort_field,\n        sort_order: sort_order\n      });\n    }\n  }, {\n    key: \"getSortCaretIcon\",\n    value: function getSortCaretIcon(field) {\n      var sort_order = this.props.sort_order; // eslint-disable-next-line no-nested-ternary\n\n      return sort_order ? sort_order === 'asc' ? React.createElement(KeyboardArrowDown, {\n        \"data-sort_field\": field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }) : React.createElement(KeyboardArrowUp, {\n        \"data-sort_field\": field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }) : null;\n    }\n  }, {\n    key: \"mapTableHead\",\n    value: function mapTableHead() {\n      var _this = this;\n\n      var dataSettings = this.props.dataSettings;\n      var sort_field = this.props.sort_field;\n      return dataSettings.map(function (_ref, index) {\n        var title = _ref.title,\n            sort = _ref.sort,\n            field = _ref.field,\n            style = _ref.style;\n\n        if (sort) {\n          return React.createElement(TableCell, {\n            key: index,\n            \"data-sort_field\": field,\n            onClick: _this.onSortHeaderCellClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"voc-table_th-cell voc-table_th-cell--sort\",\n            style: style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, title, sort_field === field ? _this.getSortCaretIcon(field) : React.createElement(MoreHoriz, {\n            \"data-sort_field\": field,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          })));\n        }\n\n        return React.createElement(TableCell, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"voc-table_th-cell\",\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, title));\n      });\n    } // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"getTableCellFormatter\",\n    value: function getTableCellFormatter(formatter) {\n      return formatter ? AppTable.formatters[formatter] : null;\n    }\n  }, {\n    key: \"mapRow\",\n    value: function mapRow(item) {\n      var _this2 = this;\n\n      var dataSettings = this.props.dataSettings;\n      return dataSettings.map(function (_ref2, index) {\n        var field = _ref2.field,\n            formatter = _ref2.formatter,\n            style = _ref2.style,\n            mask = _ref2.mask;\n        var dataField = item[field];\n\n        if (typeof formatter === 'function') {\n          return React.createElement(TableCell, {\n            key: index,\n            style: style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, formatter(dataField, item));\n        }\n\n        var TableCellFormatter = _this2.getTableCellFormatter(formatter);\n\n        return React.createElement(TableCell, {\n          key: index,\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, TableCellFormatter ? React.createElement(TableCellFormatter, {\n          field: dataField,\n          mask: mask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }) : dataField);\n      });\n    }\n  }, {\n    key: \"mapTableBodyRows\",\n    value: function mapTableBodyRows() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          rowStyle = _this$props.options.rowStyle;\n      return data.map(function (item, index) {\n        return React.createElement(TableRow, {\n          key: index,\n          style: rowStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, _this3.mapRow(item));\n      });\n    }\n  }, {\n    key: \"getEmptyTable\",\n    value: function getEmptyTable() {\n      var dataSettings = this.props.dataSettings;\n      var cellsLength = dataSettings.length;\n      return React.createElement(TableRow, {\n        className: \"voc-table__empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: cellsLength,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"There is no data to display\"));\n    }\n  }, {\n    key: \"getTableOptions\",\n    value: function getTableOptions() {\n      var defaultOptions = {\n        onSortChange: this.onSortChange,\n        onLimitChange: this.onLimitChange,\n        onSearchType: this.onSearchType,\n        onPageChange: this.onPageChange\n      };\n      return _objectSpread({}, defaultOptions, this.props.options);\n    }\n  }, {\n    key: \"updateFiltersAndRequest\",\n    value: function updateFiltersAndRequest(newFilters) {\n      var _this$props2 = this.props,\n          _this$props2$options = _this$props2.options,\n          updateFilters = _this$props2$options.updateFilters,\n          requestTrigger = _this$props2$options.requestTrigger,\n          filters = _this$props2.filters;\n      updateFilters(newFilters);\n      requestTrigger(_objectSpread({}, filters, newFilters));\n    }\n  }, {\n    key: \"onSortChange\",\n    value: function onSortChange(newFilters) {\n      this.updateFiltersAndRequest(newFilters);\n    }\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange(page) {\n      this.updateFiltersAndRequest({\n        page: page\n      });\n    }\n  }, {\n    key: \"onLimitChange\",\n    value: function onLimitChange(limit) {\n      this.updateFiltersAndRequest({\n        limit: limit,\n        page: 1\n      });\n    }\n  }, {\n    key: \"onSearchType\",\n    value: function onSearchType(search) {\n      this.updateFiltersAndRequest({\n        search: search,\n        page: 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getTableOptions2 = this.getTableOptions(),\n          onPageChange = _this$getTableOptions2.onPageChange,\n          onLimitChange = _this$getTableOptions2.onLimitChange,\n          rowStyle = _this$getTableOptions2.rowStyle,\n          onSearchType = _this$getTableOptions2.onSearchType,\n          haveSearch = _this$getTableOptions2.haveSearch,\n          customTableHeader = _this$getTableOptions2.customTableHeader;\n\n      var _this$props3 = this.props,\n          limit = _this$props3.limit,\n          search = _this$props3.search,\n          page = _this$props3.page,\n          data = _this$props3.data,\n          total = _this$props3.total,\n          loading = _this$props3.loading;\n      return React.createElement(\"div\", {\n        className: \"voc-table__container \".concat(loading && 'voc-table__container-loading'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(AppTableHeader, Object.assign({\n        haveSearch: haveSearch,\n        search: search,\n        onSearchType: onSearchType\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), customTableHeader), React.createElement(\"div\", {\n        className: \"voc-table__wrapper \".concat(loading && 'voc-table__wrapper-loading'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, loading && React.createElement(AppPreloaderSmall, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(Table, {\n        className: \"voc-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        className: \"voc-table__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        style: rowStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, this.mapTableHead())), React.createElement(TableBody, {\n        className: \"voc-table__body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, data.length ? this.mapTableBodyRows() : this.getEmptyTable()), React.createElement(AppTableFooter, Object.assign({\n        total: total,\n        page: page,\n        limit: limit,\n        onPageChange: onPageChange,\n        onLimitChange: onLimitChange\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return AppTable;\n}(PureComponent), _class2.formatters = {}, _temp), (_applyDecoratedDescriptor(_class.prototype, \"onSortHeaderCellClick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onSortHeaderCellClick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onSortChange\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onSortChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onPageChange\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onPageChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onLimitChange\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onLimitChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onSearchType\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onSearchType\"), _class.prototype)), _class);\nAppTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  total: PropTypes.number.isRequired,\n  loading: PropTypes.bool.isRequired,\n  dataSettings: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    formatter: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    style: PropTypes.shape({\n      width: PropTypes.string,\n      textAlign: PropTypes.string,\n      maxWidth: PropTypes.string\n    }),\n    sort: PropTypes.bool,\n    mask: PropTypes.string\n  })).isRequired,\n  sort_order: PropTypes.string,\n  sort_field: PropTypes.string,\n  search: PropTypes.string,\n  limit: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  options: PropTypes.shape({\n    onSortChange: PropTypes.func,\n    updateFilters: PropTypes.func,\n    haveSearch: PropTypes.bool,\n    requestTrigger: PropTypes.func,\n    rowStyle: PropTypes.shape({\n      height: PropTypes.string\n    }),\n    customTableHeader: PropTypes.any,\n    onSearchType: PropTypes.func,\n    onPageChange: PropTypes.func,\n    onLimitChange: PropTypes.func\n  }).isRequired\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AppTable, \"AppTable\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppTable/AppTable.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppTable/AppTable.js"],"names":["React","PureComponent","PropTypes","Table","TableBody","TableCell","TableHead","TableRow","KeyboardArrowDown","KeyboardArrowUp","MoreHoriz","autobind","AppTableFooter","AppTableHeader","AppPreloaderSmall","AppTable","event","sort_field","currentTarget","dataset","getTableOptions","onSortChange","sort_order","props","field","dataSettings","map","index","title","sort","style","onSortHeaderCellClick","getSortCaretIcon","formatter","formatters","item","mask","dataField","TableCellFormatter","getTableCellFormatter","data","rowStyle","options","mapRow","cellsLength","length","defaultOptions","onLimitChange","onSearchType","onPageChange","newFilters","updateFilters","requestTrigger","filters","updateFiltersAndRequest","page","limit","search","haveSearch","customTableHeader","total","loading","mapTableHead","mapTableBodyRows","getEmptyTable","propTypes","array","isRequired","number","bool","arrayOf","shape","string","oneOfType","func","width","textAlign","maxWidth","height","any"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\nimport MoreHoriz from '@material-ui/icons/MoreHoriz';\n\nimport { autobind } from 'core-decorators';\nimport { AppTableFooter, AppTableHeader } from './components';\nimport { AppPreloaderSmall } from '../AppPreloaderSmall';\n\nimport './AppTable.scss';\n\nexport class AppTable extends PureComponent {\n  static formatters = {};\n\n  @autobind\n  onSortHeaderCellClick(event) {\n    let { sort_field } = event.currentTarget.dataset;\n    const { onSortChange } = this.getTableOptions();\n    let sort_order;\n\n    if (sort_field !== this.props.sort_field) {\n      sort_order = 'asc';\n      onSortChange({ sort_field, sort_order });\n      return;\n    }\n\n    switch (this.props.sort_order) {\n      case '': {\n        sort_order = 'asc';\n        break;\n      }\n      case 'asc': {\n        sort_order = 'desc';\n        break;\n      }\n      case 'desc': {\n        sort_order = '';\n        sort_field = '';\n        break;\n      }\n      default: {\n        sort_order = 'asc';\n        break;\n      }\n    }\n\n    onSortChange({ sort_field, sort_order });\n  }\n\n  getSortCaretIcon(field) {\n    const { sort_order } = this.props;\n\n    // eslint-disable-next-line no-nested-ternary\n    return sort_order ? (\n      sort_order === 'asc' ? (\n        <KeyboardArrowDown data-sort_field={field} />\n      ) : (\n        <KeyboardArrowUp data-sort_field={field} />\n      )\n    ) : null;\n  }\n\n  mapTableHead() {\n    const { dataSettings } = this.props;\n    const { sort_field } = this.props;\n    return dataSettings.map(({ title, sort, field, style }, index) => {\n      if (sort) {\n        return (\n          <TableCell\n            key={index}\n            data-sort_field={field}\n            onClick={this.onSortHeaderCellClick}>\n            <div\n              className=\"voc-table_th-cell voc-table_th-cell--sort\"\n              style={style}>\n              {title}\n              {sort_field === field ? (\n                this.getSortCaretIcon(field)\n              ) : (\n                <MoreHoriz data-sort_field={field} />\n              )}\n            </div>\n          </TableCell>\n        );\n      }\n\n      return (\n        <TableCell key={index}>\n          <div className=\"voc-table_th-cell\" style={style}>\n            {title}\n          </div>\n        </TableCell>\n      );\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getTableCellFormatter(formatter) {\n    return formatter ? AppTable.formatters[formatter] : null;\n  }\n\n  mapRow(item) {\n    const { dataSettings } = this.props;\n\n    return dataSettings.map(({ field, formatter, style, mask }, index) => {\n      const dataField = item[field];\n\n      if (typeof formatter === 'function') {\n        return (\n          <TableCell key={index} style={style}>\n            {formatter(dataField, item)}\n          </TableCell>\n        );\n      }\n\n      const TableCellFormatter = this.getTableCellFormatter(formatter);\n\n      return (\n        <TableCell key={index} style={style}>\n          {TableCellFormatter ? (\n            <TableCellFormatter field={dataField} mask={mask} />\n          ) : (\n            dataField\n          )}\n        </TableCell>\n      );\n    });\n  }\n\n  mapTableBodyRows() {\n    const {\n      data,\n      options: { rowStyle },\n    } = this.props;\n    return data.map((item, index) => (\n      <TableRow key={index} style={rowStyle}>\n        {this.mapRow(item)}\n      </TableRow>\n    ));\n  }\n\n  getEmptyTable() {\n    const { dataSettings } = this.props;\n    const cellsLength = dataSettings.length;\n\n    return (\n      <TableRow className=\"voc-table__empty\">\n        <TableCell colSpan={cellsLength}>There is no data to display</TableCell>\n      </TableRow>\n    );\n  }\n\n  getTableOptions() {\n    const defaultOptions = {\n      onSortChange: this.onSortChange,\n      onLimitChange: this.onLimitChange,\n      onSearchType: this.onSearchType,\n      onPageChange: this.onPageChange,\n    };\n\n    return { ...defaultOptions, ...this.props.options };\n  }\n\n  updateFiltersAndRequest(newFilters) {\n    const {\n      options: { updateFilters, requestTrigger },\n      filters,\n    } = this.props;\n    updateFilters(newFilters);\n    requestTrigger({ ...filters, ...newFilters });\n  }\n\n  @autobind\n  onSortChange(newFilters) {\n    this.updateFiltersAndRequest(newFilters);\n  }\n\n  @autobind\n  onPageChange(page) {\n    this.updateFiltersAndRequest({ page });\n  }\n\n  @autobind\n  onLimitChange(limit) {\n    this.updateFiltersAndRequest({ limit, page: 1 });\n  }\n\n  @autobind\n  onSearchType(search) {\n    this.updateFiltersAndRequest({ search, page: 1 });\n  }\n\n  render() {\n    const {\n      onPageChange,\n      onLimitChange,\n      rowStyle,\n      onSearchType,\n      haveSearch,\n      customTableHeader,\n    } = this.getTableOptions();\n\n    const { limit, search, page, data, total, loading } = this.props;\n\n    return (\n      <div\n        className={`voc-table__container ${loading &&\n          'voc-table__container-loading'}`}>\n        <AppTableHeader\n          {...{\n            haveSearch,\n            search,\n            onSearchType,\n          }}>\n          {customTableHeader}\n        </AppTableHeader>\n        <div\n          className={`voc-table__wrapper ${loading &&\n            'voc-table__wrapper-loading'}`}>\n          {loading && <AppPreloaderSmall />}\n          <Table className=\"voc-table\">\n            <TableHead className=\"voc-table__header\">\n              <TableRow style={rowStyle}>{this.mapTableHead()}</TableRow>\n            </TableHead>\n            <TableBody className=\"voc-table__body\">\n              {data.length ? this.mapTableBodyRows() : this.getEmptyTable()}\n            </TableBody>\n            <AppTableFooter\n              {...{\n                total,\n                page,\n                limit,\n                onPageChange,\n                onLimitChange,\n              }}\n            />\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nAppTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  total: PropTypes.number.isRequired,\n  loading: PropTypes.bool.isRequired,\n\n  dataSettings: PropTypes.arrayOf(\n    PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      formatter: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n      style: PropTypes.shape({\n        width: PropTypes.string,\n        textAlign: PropTypes.string,\n        maxWidth: PropTypes.string,\n      }),\n      sort: PropTypes.bool,\n      mask: PropTypes.string,\n    }),\n  ).isRequired,\n\n  sort_order: PropTypes.string,\n  sort_field: PropTypes.string,\n  search: PropTypes.string,\n  limit: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n\n  options: PropTypes.shape({\n    onSortChange: PropTypes.func,\n    updateFilters: PropTypes.func,\n    haveSearch: PropTypes.bool,\n    requestTrigger: PropTypes.func,\n    rowStyle: PropTypes.shape({\n      height: PropTypes.string,\n    }),\n    customTableHeader: PropTypes.any,\n    onSearchType: PropTypes.func,\n    onPageChange: PropTypes.func,\n    onLimitChange: PropTypes.func,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}