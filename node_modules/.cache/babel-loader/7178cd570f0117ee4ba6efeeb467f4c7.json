{"ast":null,"code":"import _defineProperty from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { ReduxCrudService } from '../../../services';\nimport { API_REQUESTS_ABORT } from '../../../modules/core';\nimport { CREATE_CHARGE_REQUEST, CREATE_CHARGE_SUCCESS, CREATE_CHARGE_ERROR } from '../../Checkout/modules';\nexport var resource = '/order';\nexport var getInitialState = function getInitialState() {\n  return {\n    loadingCreateOrder: false,\n    error: null\n  };\n};\n\nvar _ReduxCrudService$get = ReduxCrudService.getActionCrudTypes(resource),\n    _ReduxCrudService$get2 = _slicedToArray(_ReduxCrudService$get.POST, 3),\n    CREATE_ORDER_REQUEST = _ReduxCrudService$get2[0],\n    CREATE_ORDER_SUCCESS = _ReduxCrudService$get2[1],\n    CREATE_ORDER_ERROR = _ReduxCrudService$get2[2];\n\nexport { CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_ERROR };\nexport var reducer = _defineProperty({\n  name: resource\n}, resource, function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getInitialState();\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case CREATE_CHARGE_REQUEST:\n    case CREATE_ORDER_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          loadingCreateOrder: true\n        });\n      }\n\n    case CREATE_CHARGE_SUCCESS:\n    case CREATE_ORDER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loadingCreateOrder: false\n        });\n      }\n\n    case CREATE_CHARGE_ERROR:\n    case CREATE_ORDER_ERROR:\n      {\n        return _objectSpread({}, state, {\n          loadingCreateOrder: false\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n});\nexport var createOrder = ReduxCrudService.resourceAction({\n  resource: resource,\n  method: 'POST',\n  logger: {\n    success: 'Order was successful created',\n    error: 'Error during order creation'\n  }\n});\nexport function abortPageRequests() {\n  return {\n    type: API_REQUESTS_ABORT,\n    requestTypes: [CREATE_ORDER_REQUEST]\n  };\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(resource, \"resource\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Order/modules/order.modules.js\");\n  reactHotLoader.register(getInitialState, \"getInitialState\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Order/modules/order.modules.js\");\n  reactHotLoader.register(CREATE_ORDER_REQUEST, \"CREATE_ORDER_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Order/modules/order.modules.js\");\n  reactHotLoader.register(CREATE_ORDER_SUCCESS, \"CREATE_ORDER_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Order/modules/order.modules.js\");\n  reactHotLoader.register(CREATE_ORDER_ERROR, \"CREATE_ORDER_ERROR\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Order/modules/order.modules.js\");\n  reactHotLoader.register(reducer, \"reducer\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Order/modules/order.modules.js\");\n  reactHotLoader.register(createOrder, \"createOrder\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Order/modules/order.modules.js\");\n  reactHotLoader.register(abortPageRequests, \"abortPageRequests\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Order/modules/order.modules.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Order/modules/order.modules.js"],"names":["ReduxCrudService","API_REQUESTS_ABORT","CREATE_CHARGE_REQUEST","CREATE_CHARGE_SUCCESS","CREATE_CHARGE_ERROR","resource","getInitialState","loadingCreateOrder","error","getActionCrudTypes","POST","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_ERROR","reducer","name","state","action","type","createOrder","resourceAction","method","logger","success","abortPageRequests","requestTypes"],"mappings":";;;;;;;;;AAAA,SAASA,gBAAT,QAAiC,mBAAjC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,mBAHF,QAIO,wBAJP;AAMA,OAAO,IAAMC,QAAQ,GAAG,QAAjB;AAEP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AACpCC,IAAAA,kBAAkB,EAAE,KADgB;AAEpCC,IAAAA,KAAK,EAAE;AAF6B,GAAP;AAAA,CAAxB;;4BAOHR,gBAAgB,CAACS,kBAAjB,CAAoCJ,QAApC,C;kEADFK,I;IAAOC,oB;IAAsBC,oB;IAAsBC,kB;;;AAGrD,OAAO,IAAMC,OAAO;AAClBC,EAAAA,IAAI,EAAEV;AADY,GAEjBA,QAFiB,cAEiC;AAAA,MAAxCW,KAAwC,uEAAhCV,eAAe,EAAiB;AAAA,MAAbW,MAAa,uEAAJ,EAAI;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,qBAAL;AACA,SAAKS,oBAAL;AAA2B;AACzB,iCACKK,KADL;AAEET,UAAAA,kBAAkB,EAAE;AAFtB;AAID;;AAED,SAAKJ,qBAAL;AACA,SAAKS,oBAAL;AAA2B;AACzB,iCACKI,KADL;AAEET,UAAAA,kBAAkB,EAAE;AAFtB;AAID;;AAED,SAAKH,mBAAL;AACA,SAAKS,kBAAL;AAAyB;AACvB,iCACKG,KADL;AAEET,UAAAA,kBAAkB,EAAE;AAFtB;AAID;;AAED;AAAS;AACP,eAAOS,KAAP;AACD;AA3BH;AA6BD,CAhCiB,CAAb;AAmCP,OAAO,IAAMG,WAAW,GAAGnB,gBAAgB,CAACoB,cAAjB,CAAgC;AACzDf,EAAAA,QAAQ,EAARA,QADyD;AAEzDgB,EAAAA,MAAM,EAAE,MAFiD;AAGzDC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,8BADH;AAENf,IAAAA,KAAK,EAAE;AAFD;AAHiD,CAAhC,CAApB;AASP,OAAO,SAASgB,iBAAT,GAA6B;AAClC,SAAO;AACLN,IAAAA,IAAI,EAAEjB,kBADD;AAELwB,IAAAA,YAAY,EAAE,CAACd,oBAAD;AAFT,GAAP;AAID;;;;;;;;;;0BA5DYN,Q;0BAEAC,e;0BAMJK,oB;0BAAsBC,oB;0BAAsBC,kB;0BAGxCC,O;0BAmCAK,W;0BASGK,iB","sourcesContent":["import { ReduxCrudService } from '../../../services';\nimport { API_REQUESTS_ABORT } from '../../../modules/core';\nimport {\n  CREATE_CHARGE_REQUEST,\n  CREATE_CHARGE_SUCCESS,\n  CREATE_CHARGE_ERROR,\n} from '../../Checkout/modules';\n\nexport const resource = '/order';\n\nexport const getInitialState = () => ({\n  loadingCreateOrder: false,\n  error: null,\n});\n\nexport const {\n  POST: [CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_ERROR],\n} = ReduxCrudService.getActionCrudTypes(resource);\n\nexport const reducer = {\n  name: resource,\n  [resource](state = getInitialState(), action = {}) {\n    switch (action.type) {\n      case CREATE_CHARGE_REQUEST:\n      case CREATE_ORDER_REQUEST: {\n        return {\n          ...state,\n          loadingCreateOrder: true,\n        };\n      }\n\n      case CREATE_CHARGE_SUCCESS:\n      case CREATE_ORDER_SUCCESS: {\n        return {\n          ...state,\n          loadingCreateOrder: false,\n        };\n      }\n\n      case CREATE_CHARGE_ERROR:\n      case CREATE_ORDER_ERROR: {\n        return {\n          ...state,\n          loadingCreateOrder: false,\n        };\n      }\n\n      default: {\n        return state;\n      }\n    }\n  },\n};\n\nexport const createOrder = ReduxCrudService.resourceAction({\n  resource,\n  method: 'POST',\n  logger: {\n    success: 'Order was successful created',\n    error: 'Error during order creation',\n  },\n});\n\nexport function abortPageRequests() {\n  return {\n    type: API_REQUESTS_ABORT,\n    requestTypes: [CREATE_ORDER_REQUEST],\n  };\n}\n"]},"metadata":{},"sourceType":"module"}