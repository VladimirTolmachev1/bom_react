{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/OrdersPageHeader/OrdersPageHeader.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tab, Tabs, Grid, Button, Divider, withStyles, Typography } from '@material-ui/core';\nimport { TabLabelWithNumber } from '../../../../components';\nimport { CurrencyService } from '../../../../services';\nimport styles from './styles';\n\nvar OrdersPageHeader = function OrdersPageHeader(_ref) {\n  var currentTab = _ref.currentTab,\n      handleTabChange = _ref.handleTabChange,\n      totalOrdersCompleted = _ref.totalOrdersCompleted,\n      processingOrdersAmount = _ref.processingOrdersAmount,\n      completedOrdersAmount = _ref.completedOrdersAmount,\n      newOrdersAmount = _ref.newOrdersAmount,\n      totalRevenue = _ref.totalRevenue,\n      classes = _ref.classes,\n      onNewOrderClick = _ref.onNewOrderClick;\n  return React.createElement(React.Fragment, null, React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    className: classes.headerWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    wrap: \"nowrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"My orders\"), newOrdersAmount > 0 && React.createElement(\"span\", {\n    className: classes.newOrdersAmount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \" (\".concat(newOrdersAmount, \" new)\")), React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    className: classes.newOrderBtn,\n    onClick: onNewOrderClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"New Order\")), React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justify: \"flex-end\",\n    spacing: 32,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    className: classes.metaInfoWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSecondary\",\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Total Orders Completed:\"), React.createElement(\"span\", {\n    className: classes.margenedCaption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, totalOrdersCompleted)), React.createElement(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    className: classes.metaInfoWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSecondary\",\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Total Revenue:\"), React.createElement(\"span\", {\n    className: classes.margenedCaption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"$\", CurrencyService.show(totalRevenue))))), React.createElement(Tabs, {\n    value: currentTab,\n    onChange: handleTabChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    label: React.createElement(TabLabelWithNumber, {\n      text: \"Inbox\",\n      number: newOrdersAmount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    label: React.createElement(TabLabelWithNumber, {\n      text: \"Processing\",\n      number: processingOrdersAmount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    label: React.createElement(TabLabelWithNumber, {\n      text: \"Completed\",\n      number: completedOrdersAmount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }));\n};\n\nOrdersPageHeader.propTypes = {\n  currentTab: PropTypes.number.isRequired,\n  handleTabChange: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nvar _default = withStyles(styles)(OrdersPageHeader);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(OrdersPageHeader, \"OrdersPageHeader\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/OrdersPageHeader/OrdersPageHeader.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/OrdersPageHeader/OrdersPageHeader.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/OrdersPageHeader/OrdersPageHeader.js"],"names":["React","PropTypes","Tab","Tabs","Grid","Button","Divider","withStyles","Typography","TabLabelWithNumber","CurrencyService","styles","OrdersPageHeader","currentTab","handleTabChange","totalOrdersCompleted","processingOrdersAmount","completedOrdersAmount","newOrdersAmount","totalRevenue","classes","onNewOrderClick","headerWrapper","title","newOrderBtn","metaInfoWrapper","margenedCaption","show","propTypes","number","isRequired","func","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Tab,\n  Tabs,\n  Grid,\n  Button,\n  Divider,\n  withStyles,\n  Typography,\n} from '@material-ui/core';\n\nimport { TabLabelWithNumber } from '../../../../components';\nimport { CurrencyService } from '../../../../services';\n\nimport styles from './styles';\n\nconst OrdersPageHeader = ({\n  currentTab,\n  handleTabChange,\n  totalOrdersCompleted,\n  processingOrdersAmount,\n  completedOrdersAmount,\n  newOrdersAmount,\n  totalRevenue,\n  classes,\n  onNewOrderClick,\n}) => (\n  <>\n    <Grid container wrap=\"nowrap\" className={classes.headerWrapper}>\n      <Grid container alignItems=\"center\" wrap=\"nowrap\">\n        <span className={classes.title}>My orders</span>\n\n        {newOrdersAmount > 0 && (\n          <span className={classes.newOrdersAmount}>\n            {` (${newOrdersAmount} new)`}\n          </span>\n        )}\n\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          className={classes.newOrderBtn}\n          onClick={onNewOrderClick}>\n          New Order\n        </Button>\n      </Grid>\n\n      <Grid container alignItems=\"center\" justify=\"flex-end\" spacing={32}>\n        <Grid\n          item\n          container\n          alignItems=\"center\"\n          className={classes.metaInfoWrapper}>\n          <Typography color=\"textSecondary\" component=\"span\">\n            Total Orders Completed:\n          </Typography>\n\n          <span className={classes.margenedCaption}>\n            {totalOrdersCompleted}\n          </span>\n        </Grid>\n\n        <Grid\n          item\n          container\n          alignItems=\"center\"\n          className={classes.metaInfoWrapper}>\n          <Typography color=\"textSecondary\" component=\"span\">\n            Total Revenue:\n          </Typography>\n\n          <span className={classes.margenedCaption}>\n            ${CurrencyService.show(totalRevenue)}\n          </span>\n        </Grid>\n      </Grid>\n    </Grid>\n\n    <Tabs value={currentTab} onChange={handleTabChange}>\n      <Tab\n        label={<TabLabelWithNumber text=\"Inbox\" number={newOrdersAmount} />}\n      />\n      <Tab\n        label={\n          <TabLabelWithNumber\n            text=\"Processing\"\n            number={processingOrdersAmount}\n          />\n        }\n      />\n      <Tab\n        label={\n          <TabLabelWithNumber text=\"Completed\" number={completedOrdersAmount} />\n        }\n      />\n    </Tabs>\n\n    <Divider />\n  </>\n);\n\nOrdersPageHeader.propTypes = {\n  currentTab: PropTypes.number.isRequired,\n  handleTabChange: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(OrdersPageHeader);\n"]},"metadata":{},"sourceType":"module"}