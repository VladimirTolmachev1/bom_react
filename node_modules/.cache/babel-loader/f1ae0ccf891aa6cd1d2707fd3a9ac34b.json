{"ast":null,"code":"(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { ValidationService } from '../../../services/ValidationService/ValidationService';\nexport var checkoutValidations = function checkoutValidations(values) {\n  var errors = {};\n  var requiredFields = ['name', 'phone', 'payment_method'];\n  requiredFields.forEach(function (key) {\n    if (!values[key]) {\n      errors[key] = 'Required';\n    }\n  });\n\n  if (ValidationService.exist(values.phone) && !ValidationService.validatePhone(values.phone)) {\n    errors.phone = 'Invalid phone';\n  }\n\n  if (ValidationService.exist(values.email) && !ValidationService.email(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(checkoutValidations, \"checkoutValidations\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/modules/checkout.validations.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/modules/checkout.validations.js"],"names":["ValidationService","checkoutValidations","values","errors","requiredFields","forEach","key","exist","phone","validatePhone","email"],"mappings":";;;;;;AAAA,SAASA,iBAAT,QAAkC,uDAAlC;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,MAAM,EAAI;AACzC,MAAMC,MAAM,GAAG,EAAf;AAEA,MAAMC,cAAc,GAAG,CACnB,MADmB,EAEnB,OAFmB,EAGnB,gBAHmB,CAAvB;AAMAA,EAAAA,cAAc,CAACC,OAAf,CAAuB,UAAAC,GAAG,EAAI;AAC1B,QAAI,CAACJ,MAAM,CAACI,GAAD,CAAX,EAAkB;AACdH,MAAAA,MAAM,CAACG,GAAD,CAAN,GAAc,UAAd;AACH;AACJ,GAJD;;AAMA,MACIN,iBAAiB,CAACO,KAAlB,CAAwBL,MAAM,CAACM,KAA/B,KACA,CAACR,iBAAiB,CAACS,aAAlB,CAAgCP,MAAM,CAACM,KAAvC,CAFL,EAGE;AACEL,IAAAA,MAAM,CAACK,KAAP,GAAe,eAAf;AACH;;AAED,MAAIR,iBAAiB,CAACO,KAAlB,CAAwBL,MAAM,CAACQ,KAA/B,KAAyC,CAACV,iBAAiB,CAACU,KAAlB,CAAwBR,MAAM,CAACQ,KAA/B,CAA9C,EAAqF;AACjFP,IAAAA,MAAM,CAACO,KAAP,GAAe,uBAAf;AACH;;AAED,SAAOP,MAAP;AACH,CA3BM;;;;;;;;;;;;0BAAMF,mB","sourcesContent":["import { ValidationService } from '../../../services/ValidationService/ValidationService';\n\nexport const checkoutValidations = values => {\n    const errors = {};\n\n    const requiredFields = [\n        'name',\n        'phone',\n        'payment_method'\n    ];\n\n    requiredFields.forEach(key => {\n        if (!values[key]) {\n            errors[key] = 'Required';\n        }\n    });\n\n    if (\n        ValidationService.exist(values.phone) &&\n        !ValidationService.validatePhone(values.phone)\n    ) {\n        errors.phone = 'Invalid phone';\n    }\n\n    if (ValidationService.exist(values.email) && !ValidationService.email(values.email)) {\n        errors.email = 'Invalid email address';\n    }\n\n    return errors;\n};\n"]},"metadata":{},"sourceType":"module"}