{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, withStyles } from '@material-ui/core';\nimport styles from './styles';\nimport { DropableOrderStatusColumn } from '../OrderStatusColumn';\nimport { orderStatuses, orderDeliveryMethods } from '../../../../constants';\nimport { orderShape } from '../../../../constants/propTypes';\nvar READY = orderStatuses.READY,\n    REFUND = orderStatuses.REFUND,\n    IN_DELIVERY = orderStatuses.IN_DELIVERY,\n    IN_PROCESS = orderStatuses.IN_PROCESS;\nvar PICKUP = orderDeliveryMethods.PICKUP,\n    DELIVERY = orderDeliveryMethods.DELIVERY;\n\nvar canDropToPickup = function canDropToPickup(_ref) {\n  var delivery_method = _ref.delivery_method,\n      status = _ref.status;\n  return delivery_method === PICKUP && status !== IN_PROCESS;\n};\n\nvar canDropToReadyForPickup = function canDropToReadyForPickup(_ref2) {\n  var delivery_method = _ref2.delivery_method,\n      status = _ref2.status;\n  return delivery_method === PICKUP && status !== READY;\n};\n\nvar canDropToDelivery = function canDropToDelivery(_ref3) {\n  var delivery_method = _ref3.delivery_method,\n      status = _ref3.status;\n  return delivery_method === DELIVERY && status !== IN_PROCESS;\n};\n\nvar canDropToDeliveryProcessing = function canDropToDeliveryProcessing(_ref4) {\n  var delivery_method = _ref4.delivery_method,\n      status = _ref4.status;\n  return delivery_method === DELIVERY && ![IN_DELIVERY, READY].find(function (orderStatus) {\n    return orderStatus === status;\n  });\n};\n\nvar ProcessingOrdersTab = function ProcessingOrdersTab(_ref5) {\n  var pickupOrders = _ref5.pickupOrders,\n      deliveryOrders = _ref5.deliveryOrders,\n      readyForPickupOrders = _ref5.readyForPickupOrders,\n      deliveryProcessingOrders = _ref5.deliveryProcessingOrders,\n      createOrderStatusSetter = _ref5.createOrderStatusSetter,\n      handleCompleteOrder = _ref5.handleCompleteOrder;\n  return React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    spacing: 32,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(DropableOrderStatusColumn, {\n    name: \"Pickup\",\n    orders: pickupOrders,\n    canDrop: canDropToPickup,\n    handleDropOrder: createOrderStatusSetter(IN_PROCESS, true),\n    orderPopupActions: [{\n      name: 'Cancel',\n      onClick: createOrderStatusSetter(REFUND)\n    }, {\n      name: 'Ready for pickup',\n      onClick: createOrderStatusSetter(READY)\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(DropableOrderStatusColumn, {\n    name: \"Ready for pickup\",\n    orders: readyForPickupOrders,\n    canDrop: canDropToReadyForPickup,\n    handleDropOrder: createOrderStatusSetter(READY, true),\n    orderPopupActions: [{\n      name: 'Complete',\n      onClick: handleCompleteOrder\n    }, {\n      name: 'Cancel',\n      onClick: createOrderStatusSetter(REFUND)\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(DropableOrderStatusColumn, {\n    name: \"Delivery\",\n    orders: deliveryOrders,\n    canDrop: canDropToDelivery,\n    handleDropOrder: createOrderStatusSetter(IN_PROCESS, true),\n    orderPopupActions: [{\n      name: 'Cancel',\n      onClick: createOrderStatusSetter(REFUND)\n    }, {\n      name: 'Ready for delivery',\n      onClick: createOrderStatusSetter(READY)\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(DropableOrderStatusColumn, {\n    name: \"Delivery processing\",\n    orders: deliveryProcessingOrders,\n    canDrop: canDropToDeliveryProcessing,\n    handleDropOrder: createOrderStatusSetter(READY, true),\n    orderPopupActions: [{\n      name: 'In delivery',\n      onClick: createOrderStatusSetter(IN_DELIVERY),\n      isVisible: function isVisible(_ref6) {\n        var status = _ref6.status;\n        return status !== IN_DELIVERY;\n      }\n    }, {\n      name: 'Complete',\n      onClick: handleCompleteOrder\n    }, {\n      name: 'Cancel',\n      onClick: createOrderStatusSetter(REFUND)\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n};\n\nProcessingOrdersTab.propTypes = {\n  createOrderStatusSetter: PropTypes.func.isRequired,\n  pickupOrders: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n  deliveryOrders: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n  readyForPickupOrders: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n  deliveryProcessingOrders: PropTypes.arrayOf(PropTypes.shape(orderShape))\n};\nProcessingOrdersTab.defaultProps = {\n  pickupOrders: [],\n  deliveryOrders: [],\n  readyForPickupOrders: [],\n  deliveryProcessingOrders: []\n};\n\nvar _default = withStyles(styles)(ProcessingOrdersTab);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(READY, \"READY\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js\");\n  reactHotLoader.register(REFUND, \"REFUND\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js\");\n  reactHotLoader.register(IN_DELIVERY, \"IN_DELIVERY\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js\");\n  reactHotLoader.register(IN_PROCESS, \"IN_PROCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js\");\n  reactHotLoader.register(PICKUP, \"PICKUP\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js\");\n  reactHotLoader.register(DELIVERY, \"DELIVERY\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js\");\n  reactHotLoader.register(canDropToPickup, \"canDropToPickup\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js\");\n  reactHotLoader.register(canDropToReadyForPickup, \"canDropToReadyForPickup\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js\");\n  reactHotLoader.register(canDropToDelivery, \"canDropToDelivery\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js\");\n  reactHotLoader.register(canDropToDeliveryProcessing, \"canDropToDeliveryProcessing\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js\");\n  reactHotLoader.register(ProcessingOrdersTab, \"ProcessingOrdersTab\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/ProcessingOrdersTab/ProcessingOrdersTab.js"],"names":["React","PropTypes","Grid","withStyles","styles","DropableOrderStatusColumn","orderStatuses","orderDeliveryMethods","orderShape","READY","REFUND","IN_DELIVERY","IN_PROCESS","PICKUP","DELIVERY","canDropToPickup","delivery_method","status","canDropToReadyForPickup","canDropToDelivery","canDropToDeliveryProcessing","find","orderStatus","ProcessingOrdersTab","pickupOrders","deliveryOrders","readyForPickupOrders","deliveryProcessingOrders","createOrderStatusSetter","handleCompleteOrder","name","onClick","isVisible","propTypes","func","isRequired","arrayOf","shape","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, withStyles } from '@material-ui/core';\n\nimport styles from './styles';\nimport { DropableOrderStatusColumn } from '../OrderStatusColumn';\nimport { orderStatuses, orderDeliveryMethods } from '../../../../constants';\nimport { orderShape } from '../../../../constants/propTypes';\n\nconst { READY, REFUND, IN_DELIVERY, IN_PROCESS } = orderStatuses;\nconst { PICKUP, DELIVERY } = orderDeliveryMethods;\n\nconst canDropToPickup = ({ delivery_method, status }) =>\n  delivery_method === PICKUP && status !== IN_PROCESS;\n\nconst canDropToReadyForPickup = ({ delivery_method, status }) =>\n  delivery_method === PICKUP && status !== READY;\n\nconst canDropToDelivery = ({ delivery_method, status }) =>\n  delivery_method === DELIVERY && status !== IN_PROCESS;\n\nconst canDropToDeliveryProcessing = ({ delivery_method, status }) =>\n  delivery_method === DELIVERY &&\n  ![IN_DELIVERY, READY].find(orderStatus => orderStatus === status);\n\nconst ProcessingOrdersTab = ({\n  pickupOrders,\n  deliveryOrders,\n  readyForPickupOrders,\n  deliveryProcessingOrders,\n  createOrderStatusSetter,\n  handleCompleteOrder,\n}) => {\n  return (\n    <Grid container wrap=\"nowrap\" spacing={32}>\n      <DropableOrderStatusColumn\n        name=\"Pickup\"\n        orders={pickupOrders}\n        canDrop={canDropToPickup}\n        handleDropOrder={createOrderStatusSetter(IN_PROCESS, true)}\n        orderPopupActions={[\n          {\n            name: 'Cancel',\n            onClick: createOrderStatusSetter(REFUND),\n          },\n          {\n            name: 'Ready for pickup',\n            onClick: createOrderStatusSetter(READY),\n          },\n        ]}\n      />\n\n      <DropableOrderStatusColumn\n        name=\"Ready for pickup\"\n        orders={readyForPickupOrders}\n        canDrop={canDropToReadyForPickup}\n        handleDropOrder={createOrderStatusSetter(READY, true)}\n        orderPopupActions={[\n          {\n            name: 'Complete',\n            onClick: handleCompleteOrder,\n          },\n          {\n            name: 'Cancel',\n            onClick: createOrderStatusSetter(REFUND),\n          },\n        ]}\n      />\n\n      <DropableOrderStatusColumn\n        name=\"Delivery\"\n        orders={deliveryOrders}\n        canDrop={canDropToDelivery}\n        handleDropOrder={createOrderStatusSetter(IN_PROCESS, true)}\n        orderPopupActions={[\n          {\n            name: 'Cancel',\n            onClick: createOrderStatusSetter(REFUND),\n          },\n          {\n            name: 'Ready for delivery',\n            onClick: createOrderStatusSetter(READY),\n          },\n        ]}\n      />\n\n      <DropableOrderStatusColumn\n        name=\"Delivery processing\"\n        orders={deliveryProcessingOrders}\n        canDrop={canDropToDeliveryProcessing}\n        handleDropOrder={createOrderStatusSetter(READY, true)}\n        orderPopupActions={[\n          {\n            name: 'In delivery',\n            onClick: createOrderStatusSetter(IN_DELIVERY),\n            isVisible: ({ status }) => status !== IN_DELIVERY,\n          },\n          {\n            name: 'Complete',\n            onClick: handleCompleteOrder,\n          },\n          {\n            name: 'Cancel',\n            onClick: createOrderStatusSetter(REFUND),\n          },\n        ]}\n      />\n    </Grid>\n  );\n};\n\nProcessingOrdersTab.propTypes = {\n  createOrderStatusSetter: PropTypes.func.isRequired,\n  pickupOrders: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n  deliveryOrders: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n  readyForPickupOrders: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n  deliveryProcessingOrders: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n};\n\nProcessingOrdersTab.defaultProps = {\n  pickupOrders: [],\n  deliveryOrders: [],\n  readyForPickupOrders: [],\n  deliveryProcessingOrders: [],\n};\n\nexport default withStyles(styles)(ProcessingOrdersTab);\n"]},"metadata":{},"sourceType":"module"}