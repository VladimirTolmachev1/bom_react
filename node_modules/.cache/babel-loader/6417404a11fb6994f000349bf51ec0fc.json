{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _defineProperty from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _dec,\n    _class,\n    _class2,\n    _class3,\n    _temp,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\",\n    _PropTypes$shape,\n    _ordersByDeliveryAndS;\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { bindActionCreators } from 'redux';\nimport { authRestaurantIdSelector } from '../../modules/core';\nimport { orderShape } from '../../constants/propTypes';\nimport { FullScreenPreloader } from '../../components';\nimport { getRestaurantById, managedRestaurantSelector } from '../../modules/restaurants';\nimport { OrdersPageHeader, InboxOrdersTab, ProcessingOrdersTab, ClientInfoModal } from './components';\nimport { RestauratorOrderEditingModal, RestauratorOrderCreationModal } from '../modals/restaurator-order';\nimport { setRestauratorOrderModal, openRestauratorOrderEditingModal, openRestauratorOrderCreationModal } from '../../modules/modals/restaurator-order';\nimport { getOrdersTotalInfo as _getOrdersTotalInfo, setUpdatedOrderInStore, getOrders, updateOrder, completeOrder, ordersTotalInfoSelector, isOrdersListLoadingSelector, ordersByDeliveryMethodsAndStatusesSelector } from '../../modules/orders';\nimport { orderStatuses, newPaymentMethodByOld, orderDeliveryMethods } from '../../constants';\nvar ordersByStatusesShape = Object.values(orderStatuses).reduce(function (shape, status) {\n  return _objectSpread({}, shape, _defineProperty({}, status, PropTypes.arrayOf(PropTypes.shape(orderShape))));\n}, {});\nvar PICKUP = orderDeliveryMethods.PICKUP,\n    DELIVERY = orderDeliveryMethods.DELIVERY;\nvar NEW = orderStatuses.NEW,\n    IN_PROCESS = orderStatuses.IN_PROCESS,\n    IN_DELIVERY = orderStatuses.IN_DELIVERY,\n    READY = orderStatuses.READY,\n    COMPLETE = orderStatuses.COMPLETE,\n    REFUND = orderStatuses.REFUND;\nvar CLIENT_MODAL = 'CLIENT_MODAL';\nvar ORDER_MODAL_INITIAL_STATE = {\n  name: '',\n  order: {},\n  isEditing: false\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: isOrdersListLoadingSelector(state),\n    authRestaurantId: authRestaurantIdSelector(state),\n    ordersTotalInfo: ordersTotalInfoSelector(state),\n    ordersByDeliveryAndStatuses: ordersByDeliveryMethodsAndStatusesSelector(state),\n    restaurant: managedRestaurantSelector(state)\n  };\n};\n\nvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n  var dispatch = dispatchProps.dispatch;\n  var authRestaurantId = stateProps.authRestaurantId;\n  return _objectSpread({}, stateProps, dispatchProps, ownProps, {\n    actions: _objectSpread({\n      getRestaurantOrders: function getRestaurantOrders() {\n        return dispatch(getOrders({\n          params: {\n            restaurant_id: authRestaurantId\n          }\n        }));\n      },\n      getOrdersTotalInfo: function getOrdersTotalInfo() {\n        return dispatch(_getOrdersTotalInfo(authRestaurantId));\n      },\n      getAuthRestaurant: function getAuthRestaurant() {\n        return dispatch(getRestaurantById({\n          id: authRestaurantId\n        }));\n      }\n    }, bindActionCreators({\n      updateOrder: updateOrder,\n      setUpdatedOrderInStore: setUpdatedOrderInStore,\n      completeOrder: completeOrder,\n      setRestauratorOrderModal: setRestauratorOrderModal,\n      openRestauratorOrderEditingModal: openRestauratorOrderEditingModal,\n      openRestauratorOrderCreationModal: openRestauratorOrderCreationModal\n    }, dispatch))\n  });\n};\n\nvar RestaurantOrders = (_dec = connect(mapStateToProps, null, mergeProps), _dec(_class = (_class2 = (_temp = _class3 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RestaurantOrders, _Component);\n\n  function RestaurantOrders() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RestaurantOrders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RestaurantOrders)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentTab: 0,\n      orderModal: ORDER_MODAL_INITIAL_STATE\n    };\n\n    _this.openClientModal = function (order) {\n      var modalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _this.setState({\n        orderModal: _objectSpread({\n          name: CLIENT_MODAL,\n          open: true,\n          order: order\n        }, modalProps)\n      });\n    };\n\n    _this.toggleEditingModal = function () {\n      return _this.setState({\n        orderModal: _objectSpread({}, _this.state.orderModal, {\n          isEditing: !_this.state.orderModal.isEditing\n        })\n      });\n    };\n\n    _this.closeModal = function () {\n      return _this.setState({\n        orderModal: _objectSpread({}, _this.state.orderModal, {\n          open: false\n        })\n      });\n    };\n\n    _this.createOrderStatusSetter = function (newStatus) {\n      var setInStoreImmidiatly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return function (order) {\n        var actions = _this.props.actions;\n        var updatedOrder = {\n          id: order.id,\n          status: newStatus\n        };\n        setInStoreImmidiatly && actions.setUpdatedOrderInStore(updatedOrder);\n        actions.updateOrder(updatedOrder);\n      };\n    };\n\n    _this.handleDropToPickupNew = function (order) {\n      var actions = _this.props.actions;\n      var updatedOrder = {\n        id: order.id,\n        delivery_method: orderDeliveryMethods.PICKUP,\n        payment_method: newPaymentMethodByOld[order.payment_method]\n      };\n      actions.setUpdatedOrderInStore(updatedOrder);\n      actions.updateOrder(updatedOrder);\n    };\n\n    _this.handleDropToDeliveryNew = function (order) {\n      var actions = _this.props.actions;\n\n      _this.openClientModal(order, {\n        isEditing: true,\n        hideOrderDetails: true,\n        showAdrressDetails: true,\n        canToggleEdit: false,\n        closeBtnText: 'Cancel',\n        submitBtnText: 'Confirm',\n        title: 'Confirm client details for changing delivery method',\n        onSubmit: function () {\n          var _onSubmit = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(clientInfo) {\n            var updatedOrder;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    updatedOrder = _objectSpread({}, clientInfo, {\n                      delivery_method: orderDeliveryMethods.DELIVERY,\n                      payment_method: newPaymentMethodByOld[order.payment_method]\n                    });\n                    _context.prev = 1;\n                    _context.next = 4;\n                    return actions.updateOrder(updatedOrder).promise;\n\n                  case 4:\n                    actions.setUpdatedOrderInStore(_objectSpread({}, order, updatedOrder));\n\n                    _this.closeModal();\n\n                    _context.next = 11;\n                    break;\n\n                  case 8:\n                    _context.prev = 8;\n                    _context.t0 = _context[\"catch\"](1);\n                    console.error(_context.t0);\n\n                  case 11:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this, [[1, 8]]);\n          }));\n\n          return function onSubmit(_x) {\n            return _onSubmit.apply(this, arguments);\n          };\n        }()\n      });\n    };\n\n    _this.tabRenderByCurrentTab = {\n      0: _this.renderInboxOrderTab,\n      1: _this.renderProcessingOrdersTab,\n      2: _this.renderCompletedOrdersTab\n    };\n    return _this;\n  }\n\n  _createClass(RestaurantOrders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var actions = this.props.actions;\n      actions.getOrdersTotalInfo();\n      actions.getRestaurantOrders();\n      actions.getAuthRestaurant();\n    }\n  }, {\n    key: \"handleEditOrderClick\",\n    value: function handleEditOrderClick(order) {\n      var actions = this.props.actions;\n      actions.openRestauratorOrderEditingModal({\n        orderId: order.id\n      });\n    }\n  }, {\n    key: \"handleClientInfoSubmit\",\n    value: function () {\n      var _handleClientInfoSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(orderClientInfo) {\n        var actions;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                actions = this.props.actions;\n                _context2.next = 3;\n                return actions.updateOrder(orderClientInfo).promise;\n\n              case 3:\n                this.closeModal();\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleClientInfoSubmit(_x2) {\n        return _handleClientInfoSubmit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"renderInboxOrderTab\",\n    value: function renderInboxOrderTab() {\n      var ordersByDeliveryAndStatuses = this.props.ordersByDeliveryAndStatuses;\n      return React.createElement(InboxOrdersTab, {\n        pickupOrders: ordersByDeliveryAndStatuses[PICKUP][NEW],\n        deliveryOrders: ordersByDeliveryAndStatuses[DELIVERY][NEW],\n        openClientModal: this.openClientModal,\n        createOrderStatusSetter: this.createOrderStatusSetter,\n        handleDropToDeliveryNew: this.handleDropToDeliveryNew,\n        handleDropToPickupNew: this.handleDropToPickupNew,\n        handleEditOrderClick: this.handleEditOrderClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderProcessingOrdersTab\",\n    value: function renderProcessingOrdersTab() {\n      var _this$props = this.props,\n          ordersByDeliveryAndStatuses = _this$props.ordersByDeliveryAndStatuses,\n          actions = _this$props.actions;\n\n      var deliveryProcessingOrders = _toConsumableArray(ordersByDeliveryAndStatuses[DELIVERY][READY]).concat(_toConsumableArray(ordersByDeliveryAndStatuses[DELIVERY][IN_DELIVERY]));\n\n      return React.createElement(ProcessingOrdersTab, {\n        pickupOrders: ordersByDeliveryAndStatuses[PICKUP][IN_PROCESS],\n        deliveryOrders: ordersByDeliveryAndStatuses[DELIVERY][IN_PROCESS],\n        readyForPickupOrders: ordersByDeliveryAndStatuses[PICKUP][READY],\n        deliveryProcessingOrders: deliveryProcessingOrders,\n        createOrderStatusSetter: this.createOrderStatusSetter,\n        handleCompleteOrder: actions.completeOrder,\n        handleEditOrderClick: this.handleEditOrderClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"getNewOrdersAmount\",\n    value: function getNewOrdersAmount() {\n      var orders = this.props.ordersByDeliveryAndStatuses;\n      return orders[PICKUP][NEW].length + orders[DELIVERY][NEW].length;\n    }\n  }, {\n    key: \"getProcessingOrdersAmount\",\n    value: function getProcessingOrdersAmount() {\n      var orders = this.props.ordersByDeliveryAndStatuses;\n      return orders[PICKUP][IN_PROCESS].length + orders[PICKUP][READY].length + orders[DELIVERY][READY].length + orders[DELIVERY][IN_PROCESS].length + orders[DELIVERY][IN_DELIVERY].length;\n    }\n  }, {\n    key: \"getCompletedOrdersAmount\",\n    value: function getCompletedOrdersAmount() {\n      var orders = this.props.ordersByDeliveryAndStatuses;\n      return orders[PICKUP][COMPLETE].length + orders[PICKUP][REFUND].length + orders[DELIVERY][COMPLETE].length + orders[DELIVERY][REFUND].length;\n    }\n  }, {\n    key: \"renderCompletedOrdersTab\",\n    value: function renderCompletedOrdersTab() {\n      return null;\n    }\n  }, {\n    key: \"handleTabChange\",\n    value: function handleTabChange(e, value) {\n      this.setState({\n        currentTab: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          currentTab = _this$state.currentTab,\n          orderModal = _this$state.orderModal;\n      var _this$props2 = this.props,\n          isLoading = _this$props2.isLoading,\n          ordersTotalInfo = _this$props2.ordersTotalInfo,\n          delivery_method = _this$props2.restaurant.delivery_method,\n          openRestauratorOrderCreationModal = _this$props2.actions.openRestauratorOrderCreationModal;\n\n      var modalName = orderModal.name,\n          open = orderModal.open,\n          orderModalProps = _objectWithoutProperties(orderModal, [\"name\", \"open\"]);\n\n      return React.createElement(\"div\", {\n        className: \"app-static-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(RestauratorOrderCreationModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), React.createElement(RestauratorOrderEditingModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }), React.createElement(OrdersPageHeader, {\n        currentTab: currentTab,\n        handleTabChange: this.handleTabChange,\n        newOrdersAmount: this.getNewOrdersAmount(),\n        processingOrdersAmount: this.getProcessingOrdersAmount(),\n        completedOrdersAmount: this.getCompletedOrdersAmount(),\n        totalOrdersCompleted: ordersTotalInfo.ordersCompleted,\n        totalRevenue: ordersTotalInfo.revenue,\n        onNewOrderClick: openRestauratorOrderCreationModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }), this.tabRenderByCurrentTab[currentTab](), isLoading && React.createElement(FullScreenPreloader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }), React.createElement(ClientInfoModal, Object.assign({\n        open: modalName === CLIENT_MODAL && open,\n        onSubmit: this.handleClientInfoSubmit,\n        onClose: this.closeModal,\n        toggleEditing: this.toggleEditingModal,\n        restaurantDeliveryMethod: delivery_method\n      }, orderModalProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return RestaurantOrders;\n}(Component), _class3.propTypes = {\n  authRestaurantId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  actions: PropTypes.shape({\n    getRestaurantOrders: PropTypes.func.isRequired,\n    updateOrder: PropTypes.func.isRequired,\n    getOrdersTotalInfo: PropTypes.func.isRequired,\n    setUpdatedOrderInStore: PropTypes.func.isRequired\n  }).isRequired,\n  ordersByDeliveryAndStatuses: PropTypes.shape((_PropTypes$shape = {}, _defineProperty(_PropTypes$shape, PICKUP, PropTypes.shape(ordersByStatusesShape)), _defineProperty(_PropTypes$shape, DELIVERY, PropTypes.shape(ordersByStatusesShape)), _PropTypes$shape))\n}, _class3.defaultProps = {\n  ordersByDeliveryAndStatuses: (_ordersByDeliveryAndS = {}, _defineProperty(_ordersByDeliveryAndS, PICKUP, {}), _defineProperty(_ordersByDeliveryAndS, DELIVERY, {}), _ordersByDeliveryAndS)\n}, _temp), (_applyDecoratedDescriptor(_class2.prototype, \"handleEditOrderClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"handleEditOrderClick\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"handleClientInfoSubmit\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"handleClientInfoSubmit\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"renderInboxOrderTab\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"renderInboxOrderTab\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"renderProcessingOrdersTab\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"renderProcessingOrdersTab\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"renderCompletedOrdersTab\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"renderCompletedOrdersTab\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"handleTabChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"handleTabChange\"), _class2.prototype)), _class2)) || _class);\nvar _default = RestaurantOrders;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ordersByStatusesShape, \"ordersByStatusesShape\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(PICKUP, \"PICKUP\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(DELIVERY, \"DELIVERY\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(NEW, \"NEW\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(IN_PROCESS, \"IN_PROCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(IN_DELIVERY, \"IN_DELIVERY\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(READY, \"READY\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(COMPLETE, \"COMPLETE\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(REFUND, \"REFUND\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(CLIENT_MODAL, \"CLIENT_MODAL\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(ORDER_MODAL_INITIAL_STATE, \"ORDER_MODAL_INITIAL_STATE\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(mergeProps, \"mergeProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(RestaurantOrders, \"RestaurantOrders\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/RestaurantOrders.js"],"names":["React","Component","PropTypes","connect","autobind","bindActionCreators","authRestaurantIdSelector","orderShape","FullScreenPreloader","getRestaurantById","managedRestaurantSelector","OrdersPageHeader","InboxOrdersTab","ProcessingOrdersTab","ClientInfoModal","RestauratorOrderEditingModal","RestauratorOrderCreationModal","setRestauratorOrderModal","openRestauratorOrderEditingModal","openRestauratorOrderCreationModal","getOrdersTotalInfo","setUpdatedOrderInStore","getOrders","updateOrder","completeOrder","ordersTotalInfoSelector","isOrdersListLoadingSelector","ordersByDeliveryMethodsAndStatusesSelector","orderStatuses","newPaymentMethodByOld","orderDeliveryMethods","ordersByStatusesShape","Object","values","reduce","shape","status","arrayOf","PICKUP","DELIVERY","NEW","IN_PROCESS","IN_DELIVERY","READY","COMPLETE","REFUND","CLIENT_MODAL","ORDER_MODAL_INITIAL_STATE","name","order","isEditing","mapStateToProps","state","isLoading","authRestaurantId","ordersTotalInfo","ordersByDeliveryAndStatuses","restaurant","mergeProps","stateProps","dispatchProps","ownProps","dispatch","actions","getRestaurantOrders","params","restaurant_id","getAuthRestaurant","id","RestaurantOrders","currentTab","orderModal","openClientModal","modalProps","setState","open","toggleEditingModal","closeModal","createOrderStatusSetter","newStatus","setInStoreImmidiatly","props","updatedOrder","handleDropToPickupNew","delivery_method","payment_method","handleDropToDeliveryNew","hideOrderDetails","showAdrressDetails","canToggleEdit","closeBtnText","submitBtnText","title","onSubmit","clientInfo","promise","console","error","tabRenderByCurrentTab","renderInboxOrderTab","renderProcessingOrdersTab","renderCompletedOrdersTab","orderId","orderClientInfo","handleEditOrderClick","deliveryProcessingOrders","orders","length","e","value","modalName","orderModalProps","handleTabChange","getNewOrdersAmount","getProcessingOrdersAmount","getCompletedOrdersAmount","ordersCompleted","revenue","handleClientInfoSubmit","propTypes","oneOfType","string","number","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { bindActionCreators } from 'redux';\n\nimport { authRestaurantIdSelector } from '../../modules/core';\nimport { orderShape } from '../../constants/propTypes';\nimport { FullScreenPreloader } from '../../components';\nimport {\n  getRestaurantById,\n  managedRestaurantSelector,\n} from '../../modules/restaurants';\n\nimport {\n  OrdersPageHeader,\n  InboxOrdersTab,\n  ProcessingOrdersTab,\n  ClientInfoModal,\n} from './components';\n\nimport {\n  RestauratorOrderEditingModal,\n  RestauratorOrderCreationModal,\n} from '../modals/restaurator-order';\n\nimport {\n  setRestauratorOrderModal,\n  openRestauratorOrderEditingModal,\n  openRestauratorOrderCreationModal,\n} from '../../modules/modals/restaurator-order';\n\nimport {\n  getOrdersTotalInfo,\n  setUpdatedOrderInStore,\n  getOrders,\n  updateOrder,\n  completeOrder,\n  ordersTotalInfoSelector,\n  isOrdersListLoadingSelector,\n  ordersByDeliveryMethodsAndStatusesSelector,\n} from '../../modules/orders';\n\nimport {\n  orderStatuses,\n  newPaymentMethodByOld,\n  orderDeliveryMethods,\n} from '../../constants';\n\nconst ordersByStatusesShape = Object.values(orderStatuses).reduce(\n  (shape, status) => ({\n    ...shape,\n    [status]: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n  }),\n  {},\n);\n\nconst { PICKUP, DELIVERY } = orderDeliveryMethods;\nconst { NEW, IN_PROCESS, IN_DELIVERY, READY, COMPLETE, REFUND } = orderStatuses;\n\nconst CLIENT_MODAL = 'CLIENT_MODAL';\n\nconst ORDER_MODAL_INITIAL_STATE = {\n  name: '',\n  order: {},\n  isEditing: false,\n};\n\nconst mapStateToProps = state => ({\n  isLoading: isOrdersListLoadingSelector(state),\n  authRestaurantId: authRestaurantIdSelector(state),\n  ordersTotalInfo: ordersTotalInfoSelector(state),\n  ordersByDeliveryAndStatuses: ordersByDeliveryMethodsAndStatusesSelector(\n    state,\n  ),\n  restaurant: managedRestaurantSelector(state),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const { dispatch } = dispatchProps;\n  const { authRestaurantId } = stateProps;\n\n  return {\n    ...stateProps,\n    ...dispatchProps,\n    ...ownProps,\n\n    actions: {\n      getRestaurantOrders: () =>\n        dispatch(getOrders({ params: { restaurant_id: authRestaurantId } })),\n      getOrdersTotalInfo: () => dispatch(getOrdersTotalInfo(authRestaurantId)),\n      getAuthRestaurant: () =>\n        dispatch(getRestaurantById({ id: authRestaurantId })),\n\n      ...bindActionCreators(\n        {\n          updateOrder,\n          setUpdatedOrderInStore,\n          completeOrder,\n\n          setRestauratorOrderModal,\n          openRestauratorOrderEditingModal,\n          openRestauratorOrderCreationModal,\n        },\n        dispatch,\n      ),\n    },\n  };\n};\n\n@connect(\n  mapStateToProps,\n  null,\n  mergeProps,\n)\nclass RestaurantOrders extends Component {\n  static propTypes = {\n    authRestaurantId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      .isRequired,\n\n    actions: PropTypes.shape({\n      getRestaurantOrders: PropTypes.func.isRequired,\n      updateOrder: PropTypes.func.isRequired,\n      getOrdersTotalInfo: PropTypes.func.isRequired,\n      setUpdatedOrderInStore: PropTypes.func.isRequired,\n    }).isRequired,\n\n    ordersByDeliveryAndStatuses: PropTypes.shape({\n      [PICKUP]: PropTypes.shape(ordersByStatusesShape),\n      [DELIVERY]: PropTypes.shape(ordersByStatusesShape),\n    }),\n  };\n\n  static defaultProps = {\n    ordersByDeliveryAndStatuses: {\n      [PICKUP]: {},\n      [DELIVERY]: {},\n    },\n  };\n\n  componentDidMount() {\n    const { actions } = this.props;\n    actions.getOrdersTotalInfo();\n    actions.getRestaurantOrders();\n    actions.getAuthRestaurant();\n  }\n\n  state = {\n    currentTab: 0,\n    orderModal: ORDER_MODAL_INITIAL_STATE,\n  };\n\n  openClientModal = (order, modalProps = {}) =>\n    this.setState({\n      orderModal: {\n        name: CLIENT_MODAL,\n        open: true,\n        order,\n        ...modalProps,\n      },\n    });\n\n  toggleEditingModal = () =>\n    this.setState({\n      orderModal: {\n        ...this.state.orderModal,\n        isEditing: !this.state.orderModal.isEditing,\n      },\n    });\n\n  closeModal = () =>\n    this.setState({\n      orderModal: {\n        ...this.state.orderModal,\n        open: false,\n      },\n    });\n\n  @autobind\n  handleEditOrderClick(order) {\n    const { actions } = this.props;\n\n    actions.openRestauratorOrderEditingModal({\n      orderId: order.id,\n    });\n  }\n\n  @autobind\n  async handleClientInfoSubmit(orderClientInfo) {\n    const { actions } = this.props;\n    await actions.updateOrder(orderClientInfo).promise;\n    this.closeModal();\n  }\n\n  createOrderStatusSetter = (\n    newStatus,\n    setInStoreImmidiatly = false,\n  ) => order => {\n    const { actions } = this.props;\n\n    const updatedOrder = {\n      id: order.id,\n      status: newStatus,\n    };\n\n    setInStoreImmidiatly && actions.setUpdatedOrderInStore(updatedOrder);\n    actions.updateOrder(updatedOrder);\n  };\n\n  handleDropToPickupNew = order => {\n    const { actions } = this.props;\n\n    const updatedOrder = {\n      id: order.id,\n      delivery_method: orderDeliveryMethods.PICKUP,\n      payment_method: newPaymentMethodByOld[order.payment_method],\n    };\n\n    actions.setUpdatedOrderInStore(updatedOrder);\n    actions.updateOrder(updatedOrder);\n  };\n\n  handleDropToDeliveryNew = order => {\n    const { actions } = this.props;\n\n    this.openClientModal(order, {\n      isEditing: true,\n      hideOrderDetails: true,\n      showAdrressDetails: true,\n      canToggleEdit: false,\n      closeBtnText: 'Cancel',\n      submitBtnText: 'Confirm',\n      title: 'Confirm client details for changing delivery method',\n      onSubmit: async clientInfo => {\n        const updatedOrder = {\n          ...clientInfo,\n          delivery_method: orderDeliveryMethods.DELIVERY,\n          payment_method: newPaymentMethodByOld[order.payment_method],\n        };\n        try {\n          await actions.updateOrder(updatedOrder).promise;\n          actions.setUpdatedOrderInStore({ ...order, ...updatedOrder });\n          this.closeModal();\n        } catch (e) {\n          console.error(e);\n        }\n      },\n    });\n  };\n\n  tabRenderByCurrentTab = {\n    0: this.renderInboxOrderTab,\n    1: this.renderProcessingOrdersTab,\n    2: this.renderCompletedOrdersTab,\n  };\n\n  @autobind\n  renderInboxOrderTab() {\n    const { ordersByDeliveryAndStatuses } = this.props;\n\n    return (\n      <InboxOrdersTab\n        pickupOrders={ordersByDeliveryAndStatuses[PICKUP][NEW]}\n        deliveryOrders={ordersByDeliveryAndStatuses[DELIVERY][NEW]}\n        openClientModal={this.openClientModal}\n        createOrderStatusSetter={this.createOrderStatusSetter}\n        handleDropToDeliveryNew={this.handleDropToDeliveryNew}\n        handleDropToPickupNew={this.handleDropToPickupNew}\n        handleEditOrderClick={this.handleEditOrderClick}\n      />\n    );\n  }\n\n  @autobind\n  renderProcessingOrdersTab() {\n    const { ordersByDeliveryAndStatuses, actions } = this.props;\n\n    const deliveryProcessingOrders = [\n      ...ordersByDeliveryAndStatuses[DELIVERY][READY],\n      ...ordersByDeliveryAndStatuses[DELIVERY][IN_DELIVERY],\n    ];\n\n    return (\n      <ProcessingOrdersTab\n        pickupOrders={ordersByDeliveryAndStatuses[PICKUP][IN_PROCESS]}\n        deliveryOrders={ordersByDeliveryAndStatuses[DELIVERY][IN_PROCESS]}\n        readyForPickupOrders={ordersByDeliveryAndStatuses[PICKUP][READY]}\n        deliveryProcessingOrders={deliveryProcessingOrders}\n        createOrderStatusSetter={this.createOrderStatusSetter}\n        handleCompleteOrder={actions.completeOrder}\n        handleEditOrderClick={this.handleEditOrderClick}\n      />\n    );\n  }\n\n  getNewOrdersAmount() {\n    const { ordersByDeliveryAndStatuses: orders } = this.props;\n\n    return orders[PICKUP][NEW].length + orders[DELIVERY][NEW].length;\n  }\n\n  getProcessingOrdersAmount() {\n    const { ordersByDeliveryAndStatuses: orders } = this.props;\n\n    return (\n      orders[PICKUP][IN_PROCESS].length +\n      orders[PICKUP][READY].length +\n      orders[DELIVERY][READY].length +\n      orders[DELIVERY][IN_PROCESS].length +\n      orders[DELIVERY][IN_DELIVERY].length\n    );\n  }\n\n  getCompletedOrdersAmount() {\n    const { ordersByDeliveryAndStatuses: orders } = this.props;\n\n    return (\n      orders[PICKUP][COMPLETE].length +\n      orders[PICKUP][REFUND].length +\n      orders[DELIVERY][COMPLETE].length +\n      orders[DELIVERY][REFUND].length\n    );\n  }\n\n  @autobind\n  renderCompletedOrdersTab() {\n    return null;\n  }\n\n  @autobind\n  handleTabChange(e, value) {\n    this.setState({ currentTab: value });\n  }\n\n  render() {\n    const { currentTab, orderModal } = this.state;\n    const {\n      isLoading,\n      ordersTotalInfo,\n      restaurant: { delivery_method },\n      actions: { openRestauratorOrderCreationModal },\n    } = this.props;\n\n    const { name: modalName, open, ...orderModalProps } = orderModal;\n\n    return (\n      <div className=\"app-static-container\">\n        <RestauratorOrderCreationModal />\n        <RestauratorOrderEditingModal />\n\n        <OrdersPageHeader\n          currentTab={currentTab}\n          handleTabChange={this.handleTabChange}\n          newOrdersAmount={this.getNewOrdersAmount()}\n          processingOrdersAmount={this.getProcessingOrdersAmount()}\n          completedOrdersAmount={this.getCompletedOrdersAmount()}\n          totalOrdersCompleted={ordersTotalInfo.ordersCompleted}\n          totalRevenue={ordersTotalInfo.revenue}\n          onNewOrderClick={openRestauratorOrderCreationModal}\n        />\n\n        {this.tabRenderByCurrentTab[currentTab]()}\n\n        {isLoading && <FullScreenPreloader />}\n\n        <ClientInfoModal\n          open={modalName === CLIENT_MODAL && open}\n          onSubmit={this.handleClientInfoSubmit}\n          onClose={this.closeModal}\n          toggleEditing={this.toggleEditingModal}\n          restaurantDeliveryMethod={delivery_method}\n          {...orderModalProps}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RestaurantOrders;\n"]},"metadata":{},"sourceType":"module"}