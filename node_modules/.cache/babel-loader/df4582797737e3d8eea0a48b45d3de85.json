{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppFormTextField/AppFormTextField.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport './AppFormTextField.scss';\nexport var AppFormTextField = function AppFormTextField(_ref) {\n  var input = _ref.input,\n      className = _ref.className,\n      disabled = _ref.disabled,\n      type = _ref.type,\n      label = _ref.label,\n      rows = _ref.rows,\n      autofilled = _ref.autofilled,\n      required = _ref.required,\n      multiline = _ref.multiline,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      rest = _objectWithoutProperties(_ref, [\"input\", \"className\", \"disabled\", \"type\", \"label\", \"rows\", \"autofilled\", \"required\", \"multiline\", \"meta\"]);\n\n  return React.createElement(\"div\", {\n    className: 'app-form-control__container ' + className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({\n    value: input.value,\n    className: \"app-form-control\"\n  }, {\n    type: type,\n    multiline: multiline,\n    autofilled: autofilled,\n    disabled: disabled,\n    label: label,\n    required: required,\n    rows: rows\n  }, {\n    error: Boolean(touched && error)\n  }, input, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), Boolean(touched && error) ? React.createElement(FormHelperText, {\n    className: \"app-form-control__error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, error) : false);\n};\nAppFormTextField.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\nAppFormTextField.defaultProps = {\n  className: ''\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AppFormTextField, \"AppFormTextField\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppFormTextField/AppFormTextField.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppFormTextField/AppFormTextField.js"],"names":["React","PropTypes","TextField","FormHelperText","AppFormTextField","input","className","disabled","type","label","rows","autofilled","required","multiline","meta","touched","error","rest","value","Boolean","propTypes","string","isRequired","defaultProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAO,yBAAP;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAeO;AAAA,MAdFC,KAcE,QAdFA,KAcE;AAAA,MAbFC,SAaE,QAbFA,SAaE;AAAA,MAZFC,QAYE,QAZFA,QAYE;AAAA,MAXFC,IAWE,QAXFA,IAWE;AAAA,MAVFC,KAUE,QAVFA,KAUE;AAAA,MATFC,IASE,QATFA,IASE;AAAA,MARFC,UAQE,QARFA,UAQE;AAAA,MAPFC,QAOE,QAPFA,QAOE;AAAA,MANFC,SAME,QANFA,SAME;AAAA,uBALFC,IAKE;AAAA,MAJEC,OAIF,aAJEA,OAIF;AAAA,MAHEC,KAGF,aAHEA,KAGF;AAAA,MADCC,IACD;;AAEnC,SACI;AAAK,IAAA,SAAS,EAAG,iCAAiCX,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAGD,KAAK,CAACa,KADlB;AAEI,IAAA,SAAS;AAFb,KAGQ;AACAV,IAAAA,IAAI,EAAJA,IADA;AAEAK,IAAAA,SAAS,EAATA,SAFA;AAGAF,IAAAA,UAAU,EAAVA,UAHA;AAIAJ,IAAAA,QAAQ,EAARA,QAJA;AAKAE,IAAAA,KAAK,EAALA,KALA;AAMAG,IAAAA,QAAQ,EAARA,QANA;AAOAF,IAAAA,IAAI,EAAJA;AAPA,GAHR;AAYI,IAAA,KAAK,EAAGS,OAAO,CAACJ,OAAO,IAAIC,KAAZ;AAZnB,KAaSX,KAbT,EAcSY,IAdT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAiBOE,OAAO,CAACJ,OAAO,IAAIC,KAAZ,CAAP,GACG,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,yBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDA,KAAtD,CADH,GAEG,KAnBV,CADJ;AAyBH,CA1CM;AA4CPZ,gBAAgB,CAACgB,SAAjB,GAA6B;AACzBd,EAAAA,SAAS,EAAEL,SAAS,CAACoB,MADI;AAEzBb,EAAAA,IAAI,EAAEP,SAAS,CAACoB,MAAV,CAAiBC,UAFE;AAGzBb,EAAAA,KAAK,EAAER,SAAS,CAACoB,MAAV,CAAiBC;AAHC,CAA7B;AAMAlB,gBAAgB,CAACmB,YAAjB,GAAgC;AAC9BjB,EAAAA,SAAS,EAAE;AADmB,CAAhC;;;;;;;;;;;;0BAlDaF,gB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport './AppFormTextField.scss';\n\nexport const AppFormTextField = ({\n                                     input,\n                                     className,\n                                     disabled,\n                                     type,\n                                     label,\n                                     rows,\n                                     autofilled,\n                                     required,\n                                     multiline,\n                                     meta: {\n                                         touched,\n                                         error\n                                     },\n                                     ...rest\n                                 }) => {\n\n    return (\n        <div className={ 'app-form-control__container ' + className}>\n            <TextField\n                value={ input.value }\n                className={ `app-form-control` }\n                {...{\n                    type,\n                    multiline,\n                    autofilled,\n                    disabled,\n                    label,\n                    required,\n                    rows\n                }}\n                error={ Boolean(touched && error) }\n                { ...input }\n                { ...rest }\n            />\n            {  Boolean(touched && error)\n                ? <FormHelperText className=\"app-form-control__error\">{ error }</FormHelperText>\n                : false\n            }\n\n        </div>\n    );\n};\n\nAppFormTextField.propTypes = {\n    className: PropTypes.string,\n    type: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired\n};\n\nAppFormTextField.defaultProps = {\n  className: '',\n  \n}\n"]},"metadata":{},"sourceType":"module"}