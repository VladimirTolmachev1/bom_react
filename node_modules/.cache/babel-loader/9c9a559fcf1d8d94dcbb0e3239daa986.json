{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppFormCheckbox/AppFormCheckbox.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // import FormHelperText from '@material-ui/core/FormHelperText';\n\nimport { AppCheckbox } from '/components';\nexport var AppFormCheckbox = function AppFormCheckbox(_ref) {\n  var input = _ref.input,\n      className = _ref.className,\n      type = _ref.type,\n      label = _ref.label,\n      required = _ref.required,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error;\n  return React.createElement(AppCheckbox, Object.assign({\n    value: Boolean(input.value),\n    className: \"app-form-control\"\n  }, {\n    label: label,\n    required: required\n  }, {\n    error: Boolean(touched && error)\n  }, input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })) // { Boolean(touched && error)\n  //     ? <FormHelperText className=\"app-form-control__error\">{ error }</FormHelperText>\n  //     : false\n  // }\n  ;\n};\nAppFormCheckbox.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.bool\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AppFormCheckbox, \"AppFormCheckbox\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppFormCheckbox/AppFormCheckbox.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppFormCheckbox/AppFormCheckbox.js"],"names":["React","PropTypes","AppCheckbox","AppFormCheckbox","input","className","type","label","required","meta","touched","error","Boolean","value","propTypes","string","isRequired","bool"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAUO;AAAA,MATFC,KASE,QATFA,KASE;AAAA,MARFC,SAQE,QARFA,SAQE;AAAA,MAPFC,IAOE,QAPFA,IAOE;AAAA,MANFC,KAME,QANFA,KAME;AAAA,MALFC,QAKE,QALFA,QAKE;AAAA,uBAJFC,IAIE;AAAA,MAHEC,OAGF,aAHEA,OAGF;AAAA,MAFEC,KAEF,aAFEA,KAEF;AAElC,SACQ,oBAAC,WAAD;AACI,IAAA,KAAK,EAAGC,OAAO,CAACR,KAAK,CAACS,KAAP,CADnB;AAEI,IAAA,SAAS;AAFb,KAGS;AACDN,IAAAA,KAAK,EAALA,KADC;AAEDC,IAAAA,QAAQ,EAARA;AAFC,GAHT;AAOI,IAAA,KAAK,EAAGI,OAAO,CAACF,OAAO,IAAIC,KAAZ;AAPnB,KAQSP,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADR,CAWQ;AACA;AACA;AACA;AAdR;AAgBH,CA5BM;AA8BPD,eAAe,CAACW,SAAhB,GAA4B;AACxBT,EAAAA,SAAS,EAAEJ,SAAS,CAACc,MADG;AAExBR,EAAAA,KAAK,EAAEN,SAAS,CAACc,MAAV,CAAiBC,UAFA;AAGxBH,EAAAA,KAAK,EAAEZ,SAAS,CAACgB;AAHO,CAA5B;;;;;;;;;;;;0BA9Bad,e","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import FormHelperText from '@material-ui/core/FormHelperText';\nimport { AppCheckbox } from '/components';\n\nexport const AppFormCheckbox = ({\n                                    input,\n                                    className,\n                                    type,\n                                    label,\n                                    required,\n                                    meta: {\n                                        touched,\n                                        error\n                                    }\n                                }) => {\n\n    return (\n            <AppCheckbox\n                value={ Boolean(input.value) }\n                className={ `app-form-control` }\n                { ...{\n                    label,\n                    required\n                } }\n                error={ Boolean(touched && error) }\n                { ...input }\n            />\n            // { Boolean(touched && error)\n            //     ? <FormHelperText className=\"app-form-control__error\">{ error }</FormHelperText>\n            //     : false\n            // }\n    );\n};\n\nAppFormCheckbox.propTypes = {\n    className: PropTypes.string,\n    label: PropTypes.string.isRequired,\n    value: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}