{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormMaskTextField/AppFormMaskTextField.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport MaskedInput from 'react-text-mask';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nvar TextMaskCustom = function TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, Object.assign({}, other, {\n    // keepCharPositions\n    // placeholderChar={'\\u2000'}\n    ref: inputRef // showMask\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n};\n\nexport var AppFormMaskTextField = function AppFormMaskTextField(_ref) {\n  var input = _ref.input,\n      onChangeInterseptor = _ref.onChangeInterseptor,\n      className = _ref.className,\n      label = _ref.label,\n      required = _ref.required,\n      mask = _ref.mask,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error;\n  return React.createElement(\"div\", {\n    className: \"\".concat(className, \" app-form-control__container\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: \"app-form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, label && React.createElement(InputLabel, {\n    htmlFor: \"formatted-text-mask-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, label + (required ? ' * ' : '')), React.createElement(Input, Object.assign({\n    type: \"text\",\n    required: required,\n    variant: \"outlined\",\n    id: \"formatted-text-mask-input\",\n    error: Boolean(touched && error),\n    inputComponent: TextMaskCustom,\n    inputProps: {\n      mask: mask\n    }\n  }, input, {\n    onChange: function onChange() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var value = args[0].target.value;\n      input.onChange.apply(input, args);\n      onChangeInterseptor && onChangeInterseptor(value);\n    },\n    value: input.value || ' ',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))), touched && error ? React.createElement(FormHelperText, {\n    className: \"app-form-control__error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, error) : false);\n};\nAppFormMaskTextField.propTypes = {\n  className: PropTypes.string\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TextMaskCustom, \"TextMaskCustom\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormMaskTextField/AppFormMaskTextField.js\");\n  reactHotLoader.register(AppFormMaskTextField, \"AppFormMaskTextField\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormMaskTextField/AppFormMaskTextField.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormMaskTextField/AppFormMaskTextField.js"],"names":["React","PropTypes","FormHelperText","MaskedInput","Input","InputLabel","FormControl","TextMaskCustom","props","inputRef","other","AppFormMaskTextField","input","onChangeInterseptor","className","label","required","mask","meta","touched","error","Boolean","args","value","target","onChange","propTypes","string"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAAA,MACtBC,QADsB,GACCD,KADD,CACtBC,QADsB;AAAA,MACTC,KADS,4BACCF,KADD;;AAG9B,SACE,oBAAC,WAAD,oBACME,KADN;AAEE;AACA;AACA,IAAA,GAAG,EAAED,QAJP,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AASD,CAZD;;AAcA,OAAO,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,OAQ9B;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJC,mBAMI,QANJA,mBAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,uBADJC,IACI;AAAA,MADIC,OACJ,aADIA,OACJ;AAAA,MADaC,KACb,aADaA,KACb;AACJ,SACE;AAAK,IAAA,SAAS,YAAKN,SAAL,iCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,IACJ,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,2BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,IAAIC,QAAQ,GAAG,KAAH,GAAW,EAAvB,CADR,CAFJ,EAME,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAEA,QAFZ;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,EAAE,EAAC,2BAJL;AAKE,IAAA,KAAK,EAAEK,OAAO,CAACF,OAAO,IAAIC,KAAZ,CALhB;AAME,IAAA,cAAc,EAAEb,cANlB;AAOE,IAAA,UAAU,EAAE;AACVU,MAAAA,IAAI,EAAJA;AADU;AAPd,KAUML,KAVN;AAWE,IAAA,QAAQ,EAAE,oBAAa;AAAA,wCAATU,IAAS;AAATA,QAAAA,IAAS;AAAA;;AAAA,UACbC,KADa,GACHD,IAAI,CAAC,CAAD,CAAJ,CAAQE,MADL,CACbD,KADa;AAErBX,MAAAA,KAAK,CAACa,QAAN,OAAAb,KAAK,EAAaU,IAAb,CAAL;AACAT,MAAAA,mBAAmB,IAAIA,mBAAmB,CAACU,KAAD,CAA1C;AACD,KAfH;AAgBE,IAAA,KAAK,EAAEX,KAAK,CAACW,KAAN,IAAe,GAhBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANF,CADF,EA0BGJ,OAAO,IAAIC,KAAX,GACC,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,yBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CADD,GAKC,KA/BJ,CADF;AAoCD,CA7CM;AA+CPT,oBAAoB,CAACe,SAArB,GAAiC;AAC/BZ,EAAAA,SAAS,EAAEb,SAAS,CAAC0B;AADU,CAAjC;;;;;;;;;;0BA7DMpB,c;0BAcOI,oB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport MaskedInput from 'react-text-mask';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst TextMaskCustom = props => {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      // keepCharPositions\n      // placeholderChar={'\\u2000'}\n      ref={inputRef}\n      // showMask\n    />\n  );\n};\n\nexport const AppFormMaskTextField = ({\n  input,\n  onChangeInterseptor,\n  className,\n  label,\n  required,\n  mask,\n  meta: { touched, error },\n}) => {\n  return (\n    <div className={`${className} app-form-control__container`}>\n      <FormControl className=\"app-form-control\">\n        {label && (\n          <InputLabel htmlFor=\"formatted-text-mask-input\">\n            {label + (required ? ' * ' : '')}\n          </InputLabel>\n        )}\n        <Input\n          type=\"text\"\n          required={required}\n          variant=\"outlined\"\n          id=\"formatted-text-mask-input\"\n          error={Boolean(touched && error)}\n          inputComponent={TextMaskCustom}\n          inputProps={{\n            mask,\n          }}\n          {...input}\n          onChange={(...args) => {\n            const { value } = args[0].target;\n            input.onChange(...args);\n            onChangeInterseptor && onChangeInterseptor(value);\n          }}\n          value={input.value || ' '}\n        />\n      </FormControl>\n      {touched && error ? (\n        <FormHelperText className=\"app-form-control__error\">\n          {error}\n        </FormHelperText>\n      ) : (\n        false\n      )}\n    </div>\n  );\n};\n\nAppFormMaskTextField.propTypes = {\n  className: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}