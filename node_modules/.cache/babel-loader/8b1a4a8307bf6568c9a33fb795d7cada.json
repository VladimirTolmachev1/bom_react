{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport jwt from 'jsonwebtoken';\nimport { HelperService } from '/services';\nvar secret = 'yKarytod17Gc3FsGPkiYUI77sqUqw5A8';\nexport var SIGN_IN_REQUEST = '/sign-in/request';\nexport var SIGN_IN_SUCCESS = '/sign-in/success';\nexport var SIGN_IN_ERROR = '/sign-in/error';\nexport var SIGN_OUT = '/sign-out';\nexport var FORGOT_PASSWORD_REQUEST = '/forgot-password/request';\nexport var FORGOT_PASSWORD_SUCCESS = '/forgot-password/success';\nexport var FORGOT_PASSWORD_ERROR = '/forgot-password/error';\nexport var RESET_PASSWORD_REQUEST = 'reset-password/request';\nexport var RESET_PASSWORD_SUCCESS = 'reset-password/success';\nexport var RESET_PASSWORD_ERROR = 'reset-password/error';\nexport var SET_THEME_COLOR = 'set-theme-color';\nexport var API_REQUESTS_ABORT = '/api/requests-abort';\nexport var dictionaryResource = '/dictionary';\nexport var DICTIONARY_GET_REQUEST = \"\".concat(dictionaryResource, \"/get/request\");\nexport var DICTIONARY_GET_SUCCESS = \"\".concat(dictionaryResource, \"/get/success\");\nexport var DICTIONARY_GET_ERROR = \"\".concat(dictionaryResource, \"/get/error\");\nexport var LOG_REQUEST = 'request/log';\n\nvar getInitialState = function getInitialState() {\n  var token = HelperService.getFromStorage(localStorage, 'token');\n  return {\n    user: null,\n    token: token,\n    isAuth: Boolean(parseToken(token)),\n    role: getRole(token),\n    userInfo: null,\n    dictionary: {\n      cuisine: [],\n      revenues: [],\n      subscriptions: [],\n      agent_names: [],\n      deliveryMethods: [],\n      statuses: [{\n        name: 'Blocked',\n        value: 'blocked'\n      }, {\n        name: 'Active',\n        value: 'active'\n      }]\n    },\n    bgColor: 'white',\n    theme: {\n      useNextVariants: true,\n      palette: {\n        primary: {\n          main: '#f06338'\n        },\n        secondary: {\n          main: '#5b9be4'\n        }\n      }\n    },\n    signInLoading: false,\n    forgotPasswordLoading: false,\n    resetPasswordLoading: false,\n    error: null\n  };\n};\n\nexport function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getInitialState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SIGN_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          signInLoading: true\n        });\n      }\n\n    case FORGOT_PASSWORD_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          forgotPasswordLoading: true\n        });\n      }\n\n    case FORGOT_PASSWORD_SUCCESS:\n    case FORGOT_PASSWORD_ERROR:\n      {\n        return _objectSpread({}, state, {\n          forgotPasswordLoading: false\n        });\n      }\n\n    case RESET_PASSWORD_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          resetPasswordLoading: true\n        });\n      }\n\n    case RESET_PASSWORD_SUCCESS:\n    case RESET_PASSWORD_ERROR:\n      {\n        return _objectSpread({}, state, {\n          resetPasswordLoading: false\n        });\n      }\n\n    case SET_THEME_COLOR:\n      {\n        return _objectSpread({}, state, {\n          bgColor: action.bgColor || state.bgColor,\n          theme: _objectSpread({}, state.theme, {\n            palette: _objectSpread({}, state.theme.palete, {\n              primary: {\n                main: action.color || state.theme.palette.primary.main\n              }\n            })\n          })\n        });\n      }\n\n    case SIGN_IN_SUCCESS:\n      {\n        var _action$response = action.response,\n            user = _action$response.user,\n            token = _action$response.token;\n        return _objectSpread({}, state, {\n          signInLoading: false,\n          token: token,\n          isAuth: Boolean(token),\n          role: getRole(token),\n          user: user\n        });\n      }\n\n    case DICTIONARY_GET_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          dictionary: _objectSpread({}, state.dictionary, action.response)\n        });\n      }\n\n    case SIGN_OUT:\n      {\n        return getInitialState();\n      }\n\n    case SIGN_IN_ERROR:\n      {\n        return _objectSpread({}, state, {\n          signInLoading: false,\n          error: action.error\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction parseToken(token) {\n  try {\n    var result = jwt.verify(token, secret);\n    return result;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction getRole(token) {\n  var parsedToken = parseToken(token) || {};\n  return {\n    name: parsedToken.role,\n    restaurant_id: parsedToken.id\n  };\n}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(secret, \"secret\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(SIGN_IN_REQUEST, \"SIGN_IN_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(SIGN_IN_SUCCESS, \"SIGN_IN_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(SIGN_IN_ERROR, \"SIGN_IN_ERROR\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(SIGN_OUT, \"SIGN_OUT\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(FORGOT_PASSWORD_REQUEST, \"FORGOT_PASSWORD_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(FORGOT_PASSWORD_SUCCESS, \"FORGOT_PASSWORD_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(FORGOT_PASSWORD_ERROR, \"FORGOT_PASSWORD_ERROR\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(RESET_PASSWORD_REQUEST, \"RESET_PASSWORD_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(RESET_PASSWORD_SUCCESS, \"RESET_PASSWORD_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(RESET_PASSWORD_ERROR, \"RESET_PASSWORD_ERROR\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(SET_THEME_COLOR, \"SET_THEME_COLOR\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(API_REQUESTS_ABORT, \"API_REQUESTS_ABORT\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(dictionaryResource, \"dictionaryResource\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(DICTIONARY_GET_REQUEST, \"DICTIONARY_GET_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(DICTIONARY_GET_SUCCESS, \"DICTIONARY_GET_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(DICTIONARY_GET_ERROR, \"DICTIONARY_GET_ERROR\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(LOG_REQUEST, \"LOG_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(getInitialState, \"getInitialState\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(reducer, \"reducer\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(parseToken, \"parseToken\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  reactHotLoader.register(getRole, \"getRole\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/modules/core.modules.js"],"names":["jwt","HelperService","secret","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_ERROR","SIGN_OUT","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_ERROR","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","SET_THEME_COLOR","API_REQUESTS_ABORT","dictionaryResource","DICTIONARY_GET_REQUEST","DICTIONARY_GET_SUCCESS","DICTIONARY_GET_ERROR","LOG_REQUEST","getInitialState","token","getFromStorage","localStorage","user","isAuth","Boolean","parseToken","role","getRole","userInfo","dictionary","cuisine","revenues","subscriptions","agent_names","deliveryMethods","statuses","name","value","bgColor","theme","useNextVariants","palette","primary","main","secondary","signInLoading","forgotPasswordLoading","resetPasswordLoading","error","reducer","state","action","type","palete","color","response","result","verify","err","parsedToken","restaurant_id","id"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken';\n\nimport { HelperService } from '/services';\n\nconst secret = 'yKarytod17Gc3FsGPkiYUI77sqUqw5A8';\n\nexport const SIGN_IN_REQUEST = '/sign-in/request';\nexport const SIGN_IN_SUCCESS = '/sign-in/success';\nexport const SIGN_IN_ERROR = '/sign-in/error';\nexport const SIGN_OUT = '/sign-out';\n\nexport const FORGOT_PASSWORD_REQUEST = '/forgot-password/request';\nexport const FORGOT_PASSWORD_SUCCESS = '/forgot-password/success';\nexport const FORGOT_PASSWORD_ERROR = '/forgot-password/error';\n\nexport const RESET_PASSWORD_REQUEST = 'reset-password/request';\nexport const RESET_PASSWORD_SUCCESS = 'reset-password/success';\nexport const RESET_PASSWORD_ERROR = 'reset-password/error';\n\nexport const SET_THEME_COLOR = 'set-theme-color';\n\nexport const API_REQUESTS_ABORT = '/api/requests-abort';\n\nexport const dictionaryResource = '/dictionary';\n\nexport const DICTIONARY_GET_REQUEST = `${dictionaryResource}/get/request`;\nexport const DICTIONARY_GET_SUCCESS = `${dictionaryResource}/get/success`;\nexport const DICTIONARY_GET_ERROR = `${dictionaryResource}/get/error`;\n\nexport const LOG_REQUEST = 'request/log';\n\nconst getInitialState = () => {\n    const token = HelperService.getFromStorage(localStorage, 'token');\n\n    return {\n        user: null,\n        token: token,\n        isAuth: Boolean(parseToken(token)),\n        role: getRole(token),\n        userInfo: null,\n        dictionary: {\n            cuisine: [],\n            revenues: [],\n            subscriptions: [],\n            agent_names: [],\n            deliveryMethods: [],\n            statuses: [\n                { name: 'Blocked', value: 'blocked' },\n                { name: 'Active', value: 'active' }\n            ]\n        },\n        bgColor: 'white',\n        theme: {\n            useNextVariants: true,\n            palette: {\n                primary: {\n                    main: '#f06338'\n                },\n                secondary: {\n                    main: '#5b9be4'\n                }\n            }\n        },\n        signInLoading: false,\n        forgotPasswordLoading: false,\n        resetPasswordLoading: false,\n        error: null\n    };\n};\n\nexport function reducer(state = getInitialState(), action) {\n    switch (action.type) {\n        case SIGN_IN_REQUEST: {\n            return {\n                ...state,\n                signInLoading: true\n            };\n        }\n\n        case FORGOT_PASSWORD_REQUEST: {\n            return {\n                ...state,\n                forgotPasswordLoading: true\n            };\n        }\n\n        case FORGOT_PASSWORD_SUCCESS:\n        case FORGOT_PASSWORD_ERROR: {\n            return {\n                ...state,\n                forgotPasswordLoading: false\n            };\n        }\n\n        case RESET_PASSWORD_REQUEST: {\n            return {\n                ...state,\n                resetPasswordLoading: true\n            };\n        }\n\n        case RESET_PASSWORD_SUCCESS:\n        case RESET_PASSWORD_ERROR: {\n            return {\n                ...state,\n                resetPasswordLoading: false\n            };\n        }\n\n        case SET_THEME_COLOR: {\n            return {\n                ...state,\n                bgColor: action.bgColor || state.bgColor,\n                theme: {\n                    ...state.theme,\n                    palette: {\n                        ...state.theme.palete,\n                        primary: {\n                            main:\n                                action.color || state.theme.palette.primary.main\n                        }\n                    }\n                }\n            };\n        }\n\n        case SIGN_IN_SUCCESS: {\n            const { user, token } = action.response;\n\n            return {\n                ...state,\n                signInLoading: false,\n                token,\n                isAuth: Boolean(token),\n                role: getRole(token),\n                user\n            };\n        }\n\n        case DICTIONARY_GET_SUCCESS: {\n            return {\n                ...state,\n                dictionary: {\n                    ...state.dictionary,\n                    ...action.response\n                }\n            };\n        }\n\n        case SIGN_OUT: {\n            return getInitialState();\n        }\n\n        case SIGN_IN_ERROR: {\n            return {\n                ...state,\n                signInLoading: false,\n                error: action.error\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n\nfunction parseToken(token) {\n    try {\n        const result = jwt.verify(token, secret);\n        return result;\n    } catch (err) {\n        return false;\n    }\n}\n\nfunction getRole(token) {\n    const parsedToken = parseToken(token) || {};\n\n    return {\n        name: parsedToken.role,\n        restaurant_id: parsedToken.id\n    };\n}\n"]},"metadata":{},"sourceType":"module"}