{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _defineProperty from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _DishModal$propTypes,\n    _dec,\n    _dec2,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishModal/DishModal.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { reduxForm, formValueSelector } from 'redux-form';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { AppPreloaderSmall } from '/components';\nimport { HelperService } from '/services';\nimport { DishModalInfo, DishModalExtra, DishModalSizes } from './components/';\nimport { autobind } from 'core-decorators';\nimport { connect } from 'react-redux';\nimport { abortPageRequests, updateDish, getDishById, createDish } from '/scenes/Menu/modules';\nimport { dishModalLoadingSelector, dishModalOpenSelector, dishModalIdSelector, dishModeSelector, initialValuesSelector, setMode, clearModalData, toggleDishModal, dishValidation, setSameExtra, setSameSize, validateForButtons, setAddState } from './modules';\nimport './DishModal.scss';\nvar formFieldsSelector = formValueSelector('Dish');\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: dishModalLoadingSelector(state),\n    open: dishModalOpenSelector(state),\n    id: dishModalIdSelector(state),\n    mode: dishModeSelector(state),\n    initialValues: initialValuesSelector(state),\n    name: formFieldsSelector(state, 'name'),\n    description: formFieldsSelector(state, 'description'),\n    price: formFieldsSelector(state, 'price'),\n    picture: formFieldsSelector(state, 'picture'),\n    extra: formFieldsSelector(state, 'extra'),\n    sizes: formFieldsSelector(state, 'sizes')\n  };\n};\n\nvar mapDispatchToProps = {\n  setMode: setMode,\n  clearModalData: clearModalData,\n  toggleDishModal: toggleDishModal,\n  abortPageRequests: abortPageRequests,\n  updateDish: updateDish,\n  getDishById: getDishById,\n  createDish: createDish,\n  setSameExtra: setSameExtra,\n  setSameSize: setSameSize,\n  setAddState: setAddState\n};\nvar DishModal = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec2 = reduxForm({\n  form: 'Dish',\n  validate: dishValidation,\n  enableReinitialize: true\n}), _dec(_class = _dec2(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(DishModal, _PureComponent);\n\n  function DishModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DishModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DishModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTab: 0\n    };\n    return _this;\n  }\n\n  _createClass(DishModal, [{\n    key: \"onCloseClick\",\n    value: function onCloseClick() {\n      var _this$props = this.props,\n          toggleDishModal = _this$props.toggleDishModal,\n          reset = _this$props.reset,\n          clearModalData = _this$props.clearModalData;\n      this.setState({\n        activeTab: 0\n      });\n      toggleDishModal({\n        open: false\n      });\n      clearModalData();\n      reset();\n    }\n  }, {\n    key: \"onEntered\",\n    value: function onEntered() {\n      var _this$props2 = this.props,\n          mode = _this$props2.mode,\n          id = _this$props2.id,\n          getDishById = _this$props2.getDishById;\n\n      if (mode === 'edit') {\n        getDishById({\n          id: id\n        });\n      }\n    }\n  }, {\n    key: \"onChangeTab\",\n    value: function onChangeTab(event, activeTab) {\n      this.setState({\n        activeTab: activeTab\n      });\n    }\n  }, {\n    key: \"requestAction\",\n    value: function requestAction() {\n      var createDish = this.props.createDish;\n      var body = HelperService.pick(this.props, ['description', 'name', 'id', 'price', 'picture', 'category_id']);\n      var _this$props3 = this.props,\n          sizes = _this$props3.sizes,\n          extra = _this$props3.extra;\n\n      if (sizes && sizes.length) {\n        body.sizes = JSON.stringify(sizes);\n        body.withSizes = true;\n      }\n\n      if (extra && extra.length) {\n        body.extra = JSON.stringify(extra);\n      } //TODO fix\n\n\n      return createDish({\n        body: body\n      });\n    }\n  }, {\n    key: \"onActionAndCLoseCLick\",\n    value: function onActionAndCLoseCLick(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.requestAction().promise.then(this.onCloseClick);\n    }\n  }, {\n    key: \"onActionAndAddClick\",\n    value: function onActionAndAddClick(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      var _this$props4 = this.props,\n          setMode = _this$props4.setMode,\n          reset = _this$props4.reset,\n          setAddState = _this$props4.setAddState;\n      this.requestAction().promise.then(function () {\n        setMode('add');\n        reset();\n        setAddState();\n      });\n    }\n  }, {\n    key: \"renderDialogActions\",\n    value: function renderDialogActions() {\n      var _this$props5 = this.props,\n          loading = _this$props5.loading,\n          mode = _this$props5.mode;\n      var values = HelperService.pick(this.props, ['name', 'description', 'price', 'extra', 'sizes']);\n      var invalid = !validateForButtons(values);\n      return React.createElement(\"div\", {\n        className: 'category-modal__actions',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onCloseClick,\n        variant: \"contained\",\n        disabled: loading,\n        className: 'category-modal__actions-cancel',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.onActionAndAddClick,\n        variant: \"contained\",\n        type: 'submit',\n        color: 'primary',\n        disabled: loading || invalid,\n        className: 'category-modal__actions-save',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, mode === 'add' ? 'Save' : 'Update', \" and add another\"), React.createElement(Button, {\n        onClick: this.onActionAndCLoseCLick,\n        variant: \"contained\",\n        color: 'primary',\n        type: 'submit',\n        disabled: loading || invalid,\n        className: 'category-modal__actions-save',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, mode === 'add' ? 'Save' : 'Update', \" and close\"));\n    }\n  }, {\n    key: \"renderDialogTitle\",\n    value: function renderDialogTitle() {\n      var mode = this.props.mode;\n      var word = mode === 'add' ? 'Add' : 'Edit';\n      return \"\".concat(word, \" Dish\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          loading = _this$props6.loading,\n          open = _this$props6.open,\n          change = _this$props6.change,\n          setSameExtra = _this$props6.setSameExtra,\n          setSameSize = _this$props6.setSameSize,\n          category_id = _this$props6.category_id,\n          sizes = _this$props6.sizes,\n          picture = _this$props6.picture;\n      var activeTab = this.state.activeTab;\n      return React.createElement(Dialog, {\n        open: open,\n        onEntered: this.onEntered,\n        fullWidth: true,\n        maxWidth: 'md',\n        className: 'dish-modal',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        name: 'category',\n        className: 'dish-modal-form',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, loading && React.createElement(AppPreloaderSmall, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, this.renderDialogTitle()), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        value: activeTab,\n        indicatorColor: 'primary',\n        className: 'set-restaurant-modal-hours__tabs',\n        onChange: this.onChangeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        label: \"Item info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), React.createElement(Tab, {\n        label: \"Item sizes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(Tab, {\n        label: \"Item extras\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: 'dish-modal__content',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, activeTab === 0 && React.createElement(DishModalInfo, Object.assign({\n        sizes: sizes,\n        change: change,\n        picture: picture\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      })), activeTab === 1 && React.createElement(DishModalSizes, Object.assign({\n        setSameSize: setSameSize,\n        category_id: category_id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      })), activeTab === 2 && React.createElement(DishModalExtra, Object.assign({\n        setSameSize: setSameSize,\n        setSameExtra: setSameExtra,\n        category_id: category_id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      })))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, this.renderDialogActions())));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return DishModal;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onCloseClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onCloseClick\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onEntered\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onEntered\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onChangeTab\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onChangeTab\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onActionAndCLoseCLick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onActionAndCLoseCLick\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onActionAndAddClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onActionAndAddClick\"), _class2.prototype)), _class2)) || _class) || _class);\nexport { DishModal as default };\nDishModal.propTypes = (_DishModal$propTypes = {\n  category_id: PropTypes.string,\n  loading: PropTypes.bool,\n  open: PropTypes.bool,\n  change: PropTypes.func,\n  setSameExtra: PropTypes.func,\n  setSameSize: PropTypes.func\n}, _defineProperty(_DishModal$propTypes, \"category_id\", PropTypes.string), _defineProperty(_DishModal$propTypes, \"picture\", PropTypes.any), _DishModal$propTypes);\nDishModal.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(formFieldsSelector, \"formFieldsSelector\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishModal/DishModal.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishModal/DishModal.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishModal/DishModal.js\");\n  reactHotLoader.register(DishModal, \"DishModal\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishModal/DishModal.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishModal/DishModal.js"],"names":["React","PureComponent","PropTypes","reduxForm","formValueSelector","Dialog","DialogActions","DialogContent","DialogTitle","Divider","Button","Tabs","Tab","AppPreloaderSmall","HelperService","DishModalInfo","DishModalExtra","DishModalSizes","autobind","connect","abortPageRequests","updateDish","getDishById","createDish","dishModalLoadingSelector","dishModalOpenSelector","dishModalIdSelector","dishModeSelector","initialValuesSelector","setMode","clearModalData","toggleDishModal","dishValidation","setSameExtra","setSameSize","validateForButtons","setAddState","formFieldsSelector","mapStateToProps","state","loading","open","id","mode","initialValues","name","description","price","picture","extra","sizes","mapDispatchToProps","DishModal","form","validate","enableReinitialize","activeTab","props","reset","setState","event","body","pick","length","JSON","stringify","withSizes","preventDefault","stopPropagation","requestAction","promise","then","onCloseClick","values","invalid","onActionAndAddClick","onActionAndCLoseCLick","word","change","category_id","onEntered","renderDialogTitle","onChangeTab","renderDialogActions","propTypes","string","bool","func","any","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { reduxForm, formValueSelector } from 'redux-form';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport { AppPreloaderSmall } from '/components';\n\nimport { HelperService } from '/services';\n\nimport { DishModalInfo, DishModalExtra, DishModalSizes } from './components/';\n\nimport { autobind } from 'core-decorators';\nimport { connect } from 'react-redux';\n\nimport {\n    abortPageRequests,\n    updateDish,\n    getDishById,\n    createDish\n} from '/scenes/Menu/modules';\n\nimport {\n    dishModalLoadingSelector,\n    dishModalOpenSelector,\n    dishModalIdSelector,\n    dishModeSelector,\n    initialValuesSelector,\n    setMode,\n    clearModalData,\n    toggleDishModal,\n    dishValidation,\n    setSameExtra,\n    setSameSize,\n    validateForButtons,\n    setAddState\n} from './modules';\n\nimport './DishModal.scss';\n\nconst formFieldsSelector = formValueSelector('Dish');\n\nconst mapStateToProps = state => ({\n    loading: dishModalLoadingSelector(state),\n    open: dishModalOpenSelector(state),\n    id: dishModalIdSelector(state),\n    mode: dishModeSelector(state),\n    initialValues: initialValuesSelector(state),\n    name: formFieldsSelector(state, 'name'),\n    description: formFieldsSelector(state, 'description'),\n    price: formFieldsSelector(state, 'price'),\n    picture: formFieldsSelector(state, 'picture'),\n    extra: formFieldsSelector(state, 'extra'),\n    sizes: formFieldsSelector(state, 'sizes')\n});\n\nconst mapDispatchToProps = {\n    setMode,\n    clearModalData,\n    toggleDishModal,\n    abortPageRequests,\n    updateDish,\n    getDishById,\n    createDish,\n    setSameExtra,\n    setSameSize,\n    setAddState\n};\n\nexport default\n@connect(\n    mapStateToProps,\n    mapDispatchToProps\n)\n@reduxForm({\n    form: 'Dish',\n    validate: dishValidation,\n    enableReinitialize: true\n})\nclass DishModal extends PureComponent {\n    state = {\n        activeTab: 0\n    };\n\n    @autobind\n    onCloseClick() {\n        const { toggleDishModal, reset, clearModalData } = this.props;\n\n        this.setState({\n            activeTab: 0\n        });\n\n        toggleDishModal({ open: false });\n        clearModalData();\n        reset();\n    }\n\n    @autobind\n    onEntered() {\n        const { mode, id, getDishById } = this.props;\n        if (mode === 'edit') {\n            getDishById({ id });\n        }\n    }\n\n    @autobind\n    onChangeTab(event, activeTab) {\n        this.setState({ activeTab });\n    }\n\n    requestAction() {\n        const {\n            createDish\n            // updateDish,\n            // mode\n        } = this.props;\n\n        const body = HelperService.pick(this.props, [\n            'description',\n            'name',\n            'id',\n            'price',\n            'picture',\n            'category_id'\n        ]);\n\n        const {sizes, extra} = this.props;\n\n        if (sizes && sizes.length) {\n            body.sizes = JSON.stringify(sizes);\n            body.withSizes = true;\n        }\n\n        if (extra && extra.length) {\n            body.extra = JSON.stringify(extra);\n        }\n\n        //TODO fix\n        return createDish({ body });\n    }\n\n    @autobind\n    onActionAndCLoseCLick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.requestAction().promise.then(this.onCloseClick);\n    }\n\n    @autobind\n    onActionAndAddClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { setMode, reset, setAddState } = this.props;\n        this.requestAction().promise.then(() => {\n            setMode('add');\n            reset();\n            setAddState();\n        });\n    }\n\n    renderDialogActions() {\n        const { loading, mode } = this.props;\n        const values = HelperService.pick(this.props, [\n            'name',\n            'description',\n            'price',\n            'extra',\n            'sizes'\n        ]);\n\n        const invalid = !validateForButtons(values);\n\n        return (\n            <div className={'category-modal__actions'}>\n                <Button\n                    onClick={this.onCloseClick}\n                    variant='contained'\n                    disabled={loading}\n                    className={'category-modal__actions-cancel'}\n                >\n                    Cancel\n                </Button>\n                <Button\n                    onClick={this.onActionAndAddClick}\n                    variant='contained'\n                    type={'submit'}\n                    color={'primary'}\n                    disabled={loading || invalid}\n                    className={'category-modal__actions-save'}\n                >\n                    {mode === 'add' ? 'Save' : 'Update'} and add another\n                </Button>\n                <Button\n                    onClick={this.onActionAndCLoseCLick}\n                    variant='contained'\n                    color={'primary'}\n                    type={'submit'}\n                    disabled={loading || invalid}\n                    className={'category-modal__actions-save'}\n                >\n                    {mode === 'add' ? 'Save' : 'Update'} and close\n                </Button>\n            </div>\n        );\n    }\n\n    renderDialogTitle() {\n        const { mode } = this.props;\n        const word = mode === 'add' ? 'Add' : 'Edit';\n\n        return `${word} Dish`;\n    }\n\n    render() {\n        const {\n            loading,\n            open,\n            change,\n            setSameExtra,\n            setSameSize,\n            category_id,\n            sizes,\n            picture\n        } = this.props;\n        const { activeTab } = this.state;\n\n        return (\n            <Dialog\n                open={open}\n                onEntered={this.onEntered}\n                fullWidth={true}\n                maxWidth={'md'}\n                className={'dish-modal'}\n            >\n                <form name={'category'} className={'dish-modal-form'}>\n                    {loading && <AppPreloaderSmall />}\n                    <DialogTitle>{this.renderDialogTitle()}</DialogTitle>\n                    <DialogContent>\n                        <Tabs\n                            value={activeTab}\n                            indicatorColor={'primary'}\n                            className={'set-restaurant-modal-hours__tabs'}\n                            onChange={this.onChangeTab}\n                        >\n                            <Tab label='Item info' />\n                            <Tab label='Item sizes' />\n                            <Tab label='Item extras' />\n                        </Tabs>\n\n                        <div className={'dish-modal__content'}>\n                            {activeTab === 0 && (\n                                <DishModalInfo\n                                    {...{\n                                        sizes,\n                                        change,\n                                        picture\n                                    }}\n                                />\n                            )}\n                            {activeTab === 1 && (\n                                <DishModalSizes\n                                    {...{\n                                        setSameSize,\n                                        category_id\n                                    }}\n                                />\n                            )}\n                            {activeTab === 2 && (\n                                <DishModalExtra\n                                    {...{\n                                        setSameSize,\n                                        setSameExtra,\n                                        category_id\n                                    }}\n                                />\n                            )}\n                        </div>\n                    </DialogContent>\n                    <Divider />\n                    <DialogActions>{this.renderDialogActions()}</DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nDishModal.propTypes = {\n    category_id: PropTypes.string,\n    loading: PropTypes.bool,\n    open: PropTypes.bool,\n    change: PropTypes.func,\n    setSameExtra: PropTypes.func,\n    setSameSize: PropTypes.func,\n    category_id: PropTypes.string,\n    picture: PropTypes.any\n};\nDishModal.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}