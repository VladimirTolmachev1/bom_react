{"ast":null,"code":"(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { resource } from './zip-code-autocomplete.modules';\nimport { createSelector } from 'reselect';\nexport var _zipcodeAutocompleteSliceSelector = function _zipcodeAutocompleteSliceSelector(state) {\n  return state[resource];\n};\nexport var zipcodesListSelector = createSelector([_zipcodeAutocompleteSliceSelector], function (slice) {\n  return slice.data.map(function (_ref) {\n    var zipcode = _ref.zipcode,\n        city = _ref.city,\n        state = _ref.state,\n        country = _ref.country,\n        id = _ref.id;\n    return {\n      label: \"\".concat(zipcode, \" \").concat(city, \" \").concat(state, \" \").concat(country),\n      value: id,\n      city: city,\n      state: state,\n      zipcode: zipcode\n    };\n  });\n});\nexport var zipcodesFiltersSelector = function zipcodesFiltersSelector(state) {\n  return _zipcodeAutocompleteSliceSelector(state).filters;\n};\nexport var zipcodesLoadingSelector = function zipcodesLoadingSelector(state) {\n  return _zipcodeAutocompleteSliceSelector(state).loading;\n};\nexport var zipcodesCountSelector = function zipcodesCountSelector(state) {\n  return _zipcodeAutocompleteSliceSelector(state).count;\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_zipcodeAutocompleteSliceSelector, \"_zipcodeAutocompleteSliceSelector\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.selectors.js\");\n  reactHotLoader.register(zipcodesListSelector, \"zipcodesListSelector\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.selectors.js\");\n  reactHotLoader.register(zipcodesFiltersSelector, \"zipcodesFiltersSelector\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.selectors.js\");\n  reactHotLoader.register(zipcodesLoadingSelector, \"zipcodesLoadingSelector\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.selectors.js\");\n  reactHotLoader.register(zipcodesCountSelector, \"zipcodesCountSelector\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.selectors.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.selectors.js"],"names":["resource","createSelector","_zipcodeAutocompleteSliceSelector","state","zipcodesListSelector","slice","data","map","zipcode","city","country","id","label","value","zipcodesFiltersSelector","filters","zipcodesLoadingSelector","loading","zipcodesCountSelector","count"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,iCAAzB;AACA,SAASC,cAAT,QAA+B,UAA/B;AAEA,OAAO,IAAMC,iCAAiC,GAAG,SAApCA,iCAAoC,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACH,QAAD,CAAT;AAAA,CAA/C;AACP,OAAO,IAAMI,oBAAoB,GAAGH,cAAc,CAAC,CAACC,iCAAD,CAAD,EAAsC,UAAAG,KAAK,EAAI;AAC7F,SAAOA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe;AAAA,QAAEC,OAAF,QAAEA,OAAF;AAAA,QAAWC,IAAX,QAAWA,IAAX;AAAA,QAAiBN,KAAjB,QAAiBA,KAAjB;AAAA,QAAwBO,OAAxB,QAAwBA,OAAxB;AAAA,QAAiCC,EAAjC,QAAiCA,EAAjC;AAAA,WAA0C;AAC9DC,MAAAA,KAAK,YAAKJ,OAAL,cAAgBC,IAAhB,cAAwBN,KAAxB,cAAiCO,OAAjC,CADyD;AAE9DG,MAAAA,KAAK,EAAEF,EAFuD;AAG9DF,MAAAA,IAAI,EAAJA,IAH8D;AAI9DN,MAAAA,KAAK,EAALA,KAJ8D;AAK9DK,MAAAA,OAAO,EAAPA;AAL8D,KAA1C;AAAA,GAAf,CAAP;AAOH,CARiD,CAA3C;AAUP,OAAO,IAAMM,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAX,KAAK;AAAA,SAAID,iCAAiC,CAACC,KAAD,CAAjC,CAAyCY,OAA7C;AAAA,CAArC;AACP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAb,KAAK;AAAA,SAAID,iCAAiC,CAACC,KAAD,CAAjC,CAAyCc,OAA7C;AAAA,CAArC;AACP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAf,KAAK;AAAA,SAAID,iCAAiC,CAACC,KAAD,CAAjC,CAAyCgB,KAA7C;AAAA,CAAnC;;;;;;;;;;;;0BAbMjB,iC;0BACAE,oB;0BAUAU,uB;0BACAE,uB;0BACAE,qB","sourcesContent":["import { resource } from './zip-code-autocomplete.modules';\nimport { createSelector } from 'reselect';\n\nexport const _zipcodeAutocompleteSliceSelector = state => state[resource];\nexport const zipcodesListSelector = createSelector([_zipcodeAutocompleteSliceSelector], slice => {\n    return slice.data.map(({zipcode, city, state, country, id}) => ({\n      label: `${zipcode} ${city} ${state} ${country}`, \n      value: id,\n      city,\n      state,\n      zipcode,\n    })); \n});\n\nexport const zipcodesFiltersSelector = state => _zipcodeAutocompleteSliceSelector(state).filters;\nexport const zipcodesLoadingSelector = state => _zipcodeAutocompleteSliceSelector(state).loading;\nexport const zipcodesCountSelector = state => _zipcodeAutocompleteSliceSelector(state).count;\n\n"]},"metadata":{},"sourceType":"module"}