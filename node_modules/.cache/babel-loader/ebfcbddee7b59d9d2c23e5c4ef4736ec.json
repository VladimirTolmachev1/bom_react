{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _dec2,\n    _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Header/components/ClientNav/ClientNav.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport PropTypes from 'prop-types';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport { connect } from 'react-redux';\nimport { IconButton, Badge, withStyles } from '@material-ui/core';\nimport Hidden from '@material-ui/core/Hidden';\nimport styles from './styles';\nimport { matchParamsSelector } from '../../../../selectors/common';\nimport { totalPriceSelector, checkoutItemsSelector, removeItemFromCheckout } from '../../../../modules/checkout';\nimport { DishOrder } from '../../../Menu/components';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    order: checkoutItemsSelector(state),\n    checkoutOrderTotal: totalPriceSelector(state),\n    // TODO: move all routes to constants form app\n    matchParams: matchParamsSelector(state, '/r/:restaurant_url/:category_name')\n  };\n};\n\nvar mapDispatchToProps = {\n  removeItemFromCheckout: removeItemFromCheckout\n};\nvar ClientNav = (_dec = withStyles(styles), _dec2 = connect(mapStateToProps, mapDispatchToProps), _dec(_class = _dec2(_class =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(ClientNav, _PureComponent);\n\n  function ClientNav() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ClientNav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ClientNav)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      openedDrawer: false\n    };\n\n    _this.toggleDrawer = function () {\n      _this.setState({\n        openedDrawer: !_this.state.openedDrawer\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ClientNav, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          checkoutOrderTotal = _this$props.checkoutOrderTotal,\n          removeItemFromCheckout = _this$props.removeItemFromCheckout,\n          order = _this$props.order,\n          matchParams = _this$props.matchParams,\n          isCheckoutPage = _this$props.isCheckoutPage,\n          classes = _this$props.classes;\n      return React.createElement(\"div\", {\n        className: \"header-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Hidden, {\n        mdUp: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"checkout\",\n        onClick: this.toggleDrawer,\n        disabled: isCheckoutPage,\n        className: classes.checkoutMenuTrigger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        badgeContent: checkoutOrderTotal.totalOrderItems,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(AddShoppingCartIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))), React.createElement(Drawer, {\n        anchor: \"right\",\n        onClose: this.toggleDrawer,\n        open: this.state.openedDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        tabIndex: 0,\n        role: \"button\",\n        className: classes.checkoutMenuDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(DishOrder, {\n        order: order,\n        totalPrice: checkoutOrderTotal,\n        removeDishFromOrder: removeItemFromCheckout,\n        restaurant_url: matchParams.restaurant_url,\n        onProcessToCheckoutClick: this.toggleDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return ClientNav;\n}(PureComponent)) || _class) || _class);\nexport { ClientNav as default };\nClientNav.propTypes = {\n  order: PropTypes.array\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Header/components/ClientNav/ClientNav.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Header/components/ClientNav/ClientNav.js\");\n  reactHotLoader.register(ClientNav, \"ClientNav\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Header/components/ClientNav/ClientNav.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Header/components/ClientNav/ClientNav.js"],"names":["React","PureComponent","Drawer","PropTypes","AddShoppingCartIcon","connect","IconButton","Badge","withStyles","Hidden","styles","matchParamsSelector","totalPriceSelector","checkoutItemsSelector","removeItemFromCheckout","DishOrder","mapStateToProps","state","order","checkoutOrderTotal","matchParams","mapDispatchToProps","ClientNav","openedDrawer","toggleDrawer","setState","props","isCheckoutPage","classes","checkoutMenuTrigger","totalOrderItems","checkoutMenuDrawer","restaurant_url","propTypes","array"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport PropTypes from 'prop-types';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport { connect } from 'react-redux';\nimport { IconButton, Badge, withStyles } from '@material-ui/core';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport styles from './styles';\nimport { matchParamsSelector } from '../../../../selectors/common';\nimport {\n  totalPriceSelector,\n  checkoutItemsSelector,\n  removeItemFromCheckout,\n} from '../../../../modules/checkout';\n\nimport { DishOrder } from '../../../Menu/components';\n\nconst mapStateToProps = state => ({\n  order: checkoutItemsSelector(state),\n  checkoutOrderTotal: totalPriceSelector(state),\n  // TODO: move all routes to constants form app\n  matchParams: matchParamsSelector(state, '/r/:restaurant_url/:category_name'),\n});\n\nconst mapDispatchToProps = {\n  removeItemFromCheckout,\n};\n\nexport default\n@withStyles(styles)\n@connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)\nclass ClientNav extends PureComponent {\n  state = {\n    openedDrawer: false,\n  };\n\n  toggleDrawer = () => {\n    this.setState({ openedDrawer: !this.state.openedDrawer });\n  };\n\n  render() {\n    const {\n      checkoutOrderTotal,\n      removeItemFromCheckout,\n      order,\n      matchParams,\n      isCheckoutPage,\n      classes,\n    } = this.props;\n\n    return (\n      <div className=\"header-nav\">\n        <Hidden mdUp>\n          <IconButton\n            aria-label=\"checkout\"\n            onClick={this.toggleDrawer}\n            disabled={isCheckoutPage}\n            className={classes.checkoutMenuTrigger}>\n            <Badge\n              badgeContent={checkoutOrderTotal.totalOrderItems}\n              color=\"secondary\">\n              <AddShoppingCartIcon />\n            </Badge>\n          </IconButton>\n          {/* <p\n                        \n                        \n                    </p> */}\n          <Drawer\n            anchor=\"right\"\n            onClose={this.toggleDrawer}\n            open={this.state.openedDrawer}>\n            <div\n              tabIndex={0}\n              role=\"button\"\n              className={classes.checkoutMenuDrawer}>\n              <div>\n                <DishOrder\n                  order={order}\n                  totalPrice={checkoutOrderTotal}\n                  removeDishFromOrder={removeItemFromCheckout}\n                  restaurant_url={matchParams.restaurant_url}\n                  onProcessToCheckoutClick={this.toggleDrawer}\n                />\n              </div>\n            </div>\n          </Drawer>\n        </Hidden>\n      </div>\n    );\n  }\n}\n\nClientNav.propTypes = {\n  order: PropTypes.array,\n};\n"]},"metadata":{},"sourceType":"module"}