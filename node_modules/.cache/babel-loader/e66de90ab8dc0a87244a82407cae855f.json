{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/OrderItemForm/components/ExtrasFormTableRow/ExtrasFormTableRow.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport { Field } from 'redux-form';\nimport { TableRow, Typography, withStyles } from '@material-ui/core';\nimport styles from './styles';\nimport { EditActions, FormCheckbox } from '../../../..';\nimport { SmallCell } from '../../../../tables';\nimport { CurrencyService } from '../../../../../services';\n\nvar ExtrasFormTableRow = function ExtrasFormTableRow(_ref) {\n  var field = _ref.field,\n      extra = _ref.extra,\n      change = _ref.change,\n      classes = _ref.classes;\n  return React.createElement(TableRow, {\n    key: field,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(SmallCell, {\n    className: classes.controlCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"\".concat(field, \".selected\"),\n    component: FormCheckbox,\n    onChange: function onChange(e, value, _, name) {\n      change(name, value);\n      change(\"\".concat(field, \".amount\"), value ? 1 : 0);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), React.createElement(SmallCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, extra.name, \" \", extra.selected && \"(\".concat(extra.amount, \")\"))), React.createElement(SmallCell, {\n    className: classes.priceCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"$ \", CurrencyService.show(+extra.price * (extra.amount || 1)))), React.createElement(SmallCell, {\n    align: \"right\",\n    className: classes.controlCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(EditActions, {\n    withoutDelete: true,\n    disabled: !extra.selected,\n    onAddClick: function onAddClick() {\n      return change(\"\".concat(field, \".amount\"), extra.amount + 1);\n    },\n    onSubstructClick: function onSubstructClick() {\n      return change(\"\".concat(field, \".amount\"), extra.amount - 1);\n    },\n    substractBtnProps: {\n      disabled: !extra.selected || !extra.amount || extra.amount <= 1\n    },\n    gridProps: {\n      justify: 'flex-end'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n};\n\nvar _default = withStyles(styles)(ExtrasFormTableRow);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ExtrasFormTableRow, \"ExtrasFormTableRow\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/OrderItemForm/components/ExtrasFormTableRow/ExtrasFormTableRow.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/OrderItemForm/components/ExtrasFormTableRow/ExtrasFormTableRow.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/OrderItemForm/components/ExtrasFormTableRow/ExtrasFormTableRow.js"],"names":["React","Field","TableRow","Typography","withStyles","styles","EditActions","FormCheckbox","SmallCell","CurrencyService","ExtrasFormTableRow","field","extra","change","classes","controlCell","e","value","_","name","selected","amount","priceCell","show","price","disabled","justify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field } from 'redux-form';\nimport { TableRow, Typography, withStyles } from '@material-ui/core';\n\nimport styles from './styles';\nimport { EditActions, FormCheckbox } from '../../../..';\nimport { SmallCell } from '../../../../tables';\nimport { CurrencyService } from '../../../../../services';\n\nconst ExtrasFormTableRow = ({ field, extra, change, classes }) => (\n  <TableRow key={field}>\n    <SmallCell className={classes.controlCell}>\n      <Field\n        name={`${field}.selected`}\n        component={FormCheckbox}\n        onChange={(e, value, _, name) => {\n          change(name, value);\n          change(`${field}.amount`, value ? 1 : 0);\n        }}\n      />\n    </SmallCell>\n\n    <SmallCell>\n      <Typography>\n        {extra.name} {extra.selected && `(${extra.amount})`}\n      </Typography>\n    </SmallCell>\n\n    <SmallCell className={classes.priceCell}>\n      <Typography align=\"right\">\n        $ {CurrencyService.show(+extra.price * (extra.amount || 1))}\n      </Typography>\n    </SmallCell>\n\n    <SmallCell align=\"right\" className={classes.controlCell}>\n      <EditActions\n        withoutDelete\n        disabled={!extra.selected}\n        onAddClick={() => change(`${field}.amount`, extra.amount + 1)}\n        onSubstructClick={() => change(`${field}.amount`, extra.amount - 1)}\n        substractBtnProps={{\n          disabled: !extra.selected || !extra.amount || extra.amount <= 1,\n        }}\n        gridProps={{\n          justify: 'flex-end',\n        }}\n      />\n    </SmallCell>\n  </TableRow>\n);\n\nexport default withStyles(styles)(ExtrasFormTableRow);\n"]},"metadata":{},"sourceType":"module"}