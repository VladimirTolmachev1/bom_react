{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { ValidationService } from '../../../services/ValidationService/ValidationService';\nimport { DELIVERY_METHOD } from '../../../constants';\nexport var requiredFields = ['name', 'phone', 'payment_method', 'email'];\nexport var additionalRequiredFields = ['city', 'street_address', 'building', 'appartment'];\nexport var checkoutValidations = function checkoutValidations(values) {\n  var errors = {};\n  requiredFields.forEach(function (key) {\n    if (!values[key]) {\n      errors[key] = 'Required';\n    }\n  });\n\n  if (ValidationService.exist(values.phone) && !ValidationService.validatePhone(values.phone)) {\n    errors.phone = 'Invalid phone';\n  }\n\n  if (ValidationService.exist(values.email) && !ValidationService.email(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (values.delivery_method && values.delivery_method === DELIVERY_METHOD) {\n    additionalRequiredFields.forEach(function (field) {\n      if (!values[field]) {\n        errors[field] = 'Required';\n      }\n    });\n  }\n\n  return errors;\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(requiredFields, \"requiredFields\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Checkout/modules/checkout.validations.js\");\n  reactHotLoader.register(additionalRequiredFields, \"additionalRequiredFields\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Checkout/modules/checkout.validations.js\");\n  reactHotLoader.register(checkoutValidations, \"checkoutValidations\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Checkout/modules/checkout.validations.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Checkout/modules/checkout.validations.js"],"names":["ValidationService","DELIVERY_METHOD","requiredFields","additionalRequiredFields","checkoutValidations","values","errors","forEach","key","exist","phone","validatePhone","email","delivery_method","field"],"mappings":";;;;;AAAA,SAASA,iBAAT,QAAkC,uDAAlC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AAEA,OAAO,IAAMC,cAAc,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,gBAAlB,EAAoC,OAApC,CAAvB;AACP,OAAO,IAAMC,wBAAwB,GAAG,CACtC,MADsC,EAEtC,gBAFsC,EAGtC,UAHsC,EAItC,YAJsC,CAAjC;AAOP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,MAAM,EAAI;AAC3C,MAAMC,MAAM,GAAG,EAAf;AAEAJ,EAAAA,cAAc,CAACK,OAAf,CAAuB,UAAAC,GAAG,EAAI;AAC5B,QAAI,CAACH,MAAM,CAACG,GAAD,CAAX,EAAkB;AAChBF,MAAAA,MAAM,CAACE,GAAD,CAAN,GAAc,UAAd;AACD;AACF,GAJD;;AAMA,MACER,iBAAiB,CAACS,KAAlB,CAAwBJ,MAAM,CAACK,KAA/B,KACA,CAACV,iBAAiB,CAACW,aAAlB,CAAgCN,MAAM,CAACK,KAAvC,CAFH,EAGE;AACAJ,IAAAA,MAAM,CAACI,KAAP,GAAe,eAAf;AACD;;AAED,MACEV,iBAAiB,CAACS,KAAlB,CAAwBJ,MAAM,CAACO,KAA/B,KACA,CAACZ,iBAAiB,CAACY,KAAlB,CAAwBP,MAAM,CAACO,KAA/B,CAFH,EAGE;AACAN,IAAAA,MAAM,CAACM,KAAP,GAAe,uBAAf;AACD;;AAED,MAAIP,MAAM,CAACQ,eAAP,IAA0BR,MAAM,CAACQ,eAAP,KAA2BZ,eAAzD,EAA0E;AACxEE,IAAAA,wBAAwB,CAACI,OAAzB,CAAiC,UAAAO,KAAK,EAAI;AACxC,UAAI,CAACT,MAAM,CAACS,KAAD,CAAX,EAAoB;AAClBR,QAAAA,MAAM,CAACQ,KAAD,CAAN,GAAgB,UAAhB;AACD;AACF,KAJD;AAKD;;AAED,SAAOR,MAAP;AACD,CAhCM;;;;;;;;;;0BARMJ,c;0BACAC,wB;0BAOAC,mB","sourcesContent":["import { ValidationService } from '../../../services/ValidationService/ValidationService';\nimport { DELIVERY_METHOD } from '../../../constants';\n\nexport const requiredFields = ['name', 'phone', 'payment_method', 'email'];\nexport const additionalRequiredFields = [\n  'city',\n  'street_address',\n  'building',\n  'appartment',\n];\n\nexport const checkoutValidations = values => {\n  const errors = {};\n\n  requiredFields.forEach(key => {\n    if (!values[key]) {\n      errors[key] = 'Required';\n    }\n  });\n\n  if (\n    ValidationService.exist(values.phone) &&\n    !ValidationService.validatePhone(values.phone)\n  ) {\n    errors.phone = 'Invalid phone';\n  }\n\n  if (\n    ValidationService.exist(values.email) &&\n    !ValidationService.email(values.email)\n  ) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (values.delivery_method && values.delivery_method === DELIVERY_METHOD) {\n    additionalRequiredFields.forEach(field => {\n      if (!values[field]) {\n        errors[field] = 'Required';\n      }\n    });\n  }\n\n  return errors;\n};\n"]},"metadata":{},"sourceType":"module"}