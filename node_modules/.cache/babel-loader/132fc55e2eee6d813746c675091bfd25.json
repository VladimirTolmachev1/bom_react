{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/components/SizesSelect/SizesSelect.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AppSelect } from '/components';\nimport './SizesSelect.scss';\nexport var SizesSelect =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SizesSelect, _Component);\n\n  function SizesSelect() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SizesSelect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SizesSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChangeSizesSelect = function (_ref) {\n      var sizeId = _ref.sizes;\n      var _this$props = _this.props,\n          setDishSize = _this$props.setDishSize,\n          dishUUID = _this$props.dishUUID;\n      setDishSize({\n        sizeId: sizeId,\n        dishUUID: dishUUID\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SizesSelect, [{\n    key: \"mapOptions\",\n    value: function mapOptions() {\n      var options = this.props.options;\n      return options.map(function (_ref2) {\n        var id = _ref2.id,\n            name = _ref2.name;\n        return {\n          value: id,\n          name: name\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = this.props.value;\n      return React.createElement(AppSelect, {\n        className: 'sizes-select',\n        name: \"sizes\",\n        withoutNone: true,\n        value: value || '',\n        label: 'Select size',\n        options: this.mapOptions(),\n        onChange: this.onChangeSizesSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return SizesSelect;\n}(Component);\nSizesSelect.propTypes = {\n  dishUUID: PropTypes.string,\n  setDishSize: PropTypes.func,\n  value: PropTypes.any,\n  options: PropTypes.array\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(SizesSelect, \"SizesSelect\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/components/SizesSelect/SizesSelect.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/components/SizesSelect/SizesSelect.js"],"names":["React","Component","PropTypes","AppSelect","SizesSelect","onChangeSizesSelect","sizeId","sizes","props","setDishSize","dishUUID","options","map","id","name","value","mapOptions","propTypes","string","func","any","array"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,oBAAP;AAEA,WAAaC,WAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UACIC,mBADJ,GAC0B,gBAAqB;AAAA,UAAZC,MAAY,QAAnBC,KAAmB;AAAA,wBACP,MAAKC,KADE;AAAA,UAChCC,WADgC,eAChCA,WADgC;AAAA,UACnBC,QADmB,eACnBA,QADmB;AAEvCD,MAAAA,WAAW,CAAC;AAACH,QAAAA,MAAM,EAANA,MAAD;AAASI,QAAAA,QAAQ,EAARA;AAAT,OAAD,CAAX;AACH,KAJL;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAMiB;AAAA,UACDC,OADC,GACW,KAAKH,KADhB,CACDG,OADC;AAGT,aAAOA,OAAO,CACTC,GADE,CACE;AAAA,YAAGC,EAAH,SAAGA,EAAH;AAAA,YAAOC,IAAP,SAAOA,IAAP;AAAA,eAAmB;AACpBC,UAAAA,KAAK,EAAEF,EADa;AAEpBC,UAAAA,IAAI,EAAJA;AAFoB,SAAnB;AAAA,OADF,CAAP;AAKH;AAdL;AAAA;AAAA,6BAgBa;AAAA,UACEC,KADF,GACW,KAAKP,KADhB,CACEO,KADF;AAGL,aACI,oBAAC,SAAD;AACI,QAAA,SAAS,EAAE,cADf;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,WAAW,MAHf;AAII,QAAA,KAAK,EAAEA,KAAK,IAAI,EAJpB;AAKI,QAAA,KAAK,EAAE,aALX;AAMI,QAAA,OAAO,EAAE,KAAKC,UAAL,EANb;AAOI,QAAA,QAAQ,EAAE,KAAKX,mBAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAWH;AA9BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAiCJ,SAAjC;AAiCAG,WAAW,CAACa,SAAZ,GAAwB;AACpBP,EAAAA,QAAQ,EAAER,SAAS,CAACgB,MADA;AAEpBT,EAAAA,WAAW,EAAEP,SAAS,CAACiB,IAFH;AAGpBJ,EAAAA,KAAK,EAAEb,SAAS,CAACkB,GAHG;AAIpBT,EAAAA,OAAO,EAAET,SAAS,CAACmB;AAJC,CAAxB;;;;;;;;;;;;0BAjCajB,W","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AppSelect } from '/components';\n\nimport './SizesSelect.scss';\n\nexport class SizesSelect extends Component {\n    onChangeSizesSelect = ({sizes: sizeId}) => {\n        const {setDishSize, dishUUID} = this.props;\n        setDishSize({sizeId, dishUUID});\n    };\n\n    mapOptions() {\n        const { options } = this.props;\n\n        return options\n            .map(({ id, name }) => ({\n                value: id,\n                name\n            }));\n    }\n\n    render() {\n        const {value} = this.props;\n\n        return (\n            <AppSelect\n                className={'sizes-select'}\n                name='sizes'\n                withoutNone\n                value={value || ''}\n                label={'Select size'}\n                options={this.mapOptions()}\n                onChange={this.onChangeSizesSelect}\n            />\n        );\n    }\n}\n\nSizesSelect.propTypes = {\n    dishUUID: PropTypes.string,\n    setDishSize: PropTypes.func,\n    value: PropTypes.any,\n    options: PropTypes.array\n};\n"]},"metadata":{},"sourceType":"module"}