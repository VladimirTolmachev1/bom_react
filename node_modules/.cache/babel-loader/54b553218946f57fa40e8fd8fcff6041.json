{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/components/CategoryListItem/CategoryListItem.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Edit from '@material-ui/icons/Edit';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { autobind } from 'core-decorators';\nimport { NavLink } from 'react-router-dom';\nexport var CategoryListItem = (_class =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CategoryListItem, _PureComponent);\n\n  function CategoryListItem() {\n    _classCallCheck(this, CategoryListItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CategoryListItem).apply(this, arguments));\n  }\n\n  _createClass(CategoryListItem, [{\n    key: \"onDeleteClick\",\n    value: function onDeleteClick(target) {\n      var id = target.dataset.id;\n      var _this$props = this.props,\n          showConfirm = _this$props.showConfirm,\n          handleDeleteCategory = _this$props.handleDeleteCategory;\n      showConfirm({\n        data: {\n          body: {\n            id: id\n          }\n        },\n        onSuccess: handleDeleteCategory,\n        content: 'Are you sure you want to delete category? Note, that all dishes within this category will be also deleted.'\n      });\n    }\n  }, {\n    key: \"onEditCLick\",\n    value: function onEditCLick(target) {\n      var id = target.dataset.id;\n      var _this$props2 = this.props,\n          toggleCategoryModal = _this$props2.toggleCategoryModal,\n          setCategoryModalMode = _this$props2.setCategoryModalMode;\n      toggleCategoryModal({\n        id: id,\n        open: true\n      });\n      setCategoryModalMode('edit');\n    }\n  }, {\n    key: \"getButttonTarget\",\n    value: function getButttonTarget(target) {\n      if (!target) {\n        return {\n          dataset: {}\n        };\n      }\n\n      return target.type === 'button' ? target : this.getButttonTarget(target.parentElement);\n    }\n  }, {\n    key: \"onClickListItem\",\n    value: function onClickListItem(event) {\n      var target = this.getButttonTarget(event.target);\n      var name = target.dataset.name;\n      var _this$props3 = this.props,\n          getDishes = _this$props3.getDishes,\n          id = _this$props3.id,\n          dishFilters = _this$props3.dishFilters,\n          updateDishFilters = _this$props3.updateDishFilters,\n          category_id = _this$props3.category_id;\n\n      if (typeof name === 'string') {\n        return name === 'edit' ? this.onEditCLick(target) : this.onDeleteClick(target);\n      }\n\n      if (category_id !== id) {\n        var dishBody = {\n          category_id: id,\n          page: 1\n        };\n        updateDishFilters(dishBody);\n        getDishes({\n          body: _objectSpread({}, dishFilters, dishBody)\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          restaurant_id = _this$props4.restaurant_id,\n          category_id = _this$props4.category_id,\n          name = _this$props4.name,\n          id = _this$props4.id,\n          mode = _this$props4.mode,\n          restaurant_name = _this$props4.restaurant_name,\n          category_name = _this$props4.category_name,\n          themeColor = _this$props4.themeColor;\n      var link = mode === 'client' ? \"/r/\".concat(restaurant_name, \"/\").concat(name) : \"/menu/?restaurant_id=\".concat(restaurant_id, \"&category_id=\").concat(id);\n      var isActive = mode === 'client' ? category_name === name ? 'active' : '' : category_id === id ? 'active' : '';\n      var navLinkStyle = {\n        backgroundColor: isActive ? themeColor : 'white'\n      };\n      return React.createElement(NavLink, {\n        className: \"categories-list__item \".concat(isActive),\n        style: navLinkStyle,\n        to: link,\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        key: id,\n        onClick: this.onClickListItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        className: 'categories-list__item-label',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, name), mode !== 'client' && React.createElement(React.Fragment, null, React.createElement(Tooltip, {\n        title: 'Edit',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"data-id\": id,\n        \"data-name\": 'edit',\n        className: 'categories-list__item-control',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Edit, {\n        \"data-name\": 'edit',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }))), React.createElement(Tooltip, {\n        title: 'Delete',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"data-id\": id,\n        \"data-name\": 'delete',\n        className: 'categories-list__item-control',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Delete, {\n        \"data-name\": 'delete',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return CategoryListItem;\n}(PureComponent), (_applyDecoratedDescriptor(_class.prototype, \"onDeleteClick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onDeleteClick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onEditCLick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onEditCLick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onClickListItem\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onClickListItem\"), _class.prototype)), _class);\nCategoryListItem.propTypes = {\n  updateDishFilters: PropTypes.func,\n  showConfirm: PropTypes.func,\n  handleDeleteCategory: PropTypes.func,\n  toggleCategoryModal: PropTypes.func,\n  restaurant_id: PropTypes.any,\n  category_id: PropTypes.string,\n  name: PropTypes.string,\n  id: PropTypes.any,\n  dishFilters: PropTypes.any,\n  mode: PropTypes.string\n};\nCategoryListItem.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CategoryListItem, \"CategoryListItem\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/components/CategoryListItem/CategoryListItem.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/components/CategoryListItem/CategoryListItem.js"],"names":["React","PureComponent","PropTypes","ListItem","Edit","Delete","IconButton","Tooltip","ListItemText","autobind","NavLink","CategoryListItem","target","id","dataset","props","showConfirm","handleDeleteCategory","data","body","onSuccess","content","toggleCategoryModal","setCategoryModalMode","open","type","getButttonTarget","parentElement","event","name","getDishes","dishFilters","updateDishFilters","category_id","onEditCLick","onDeleteClick","dishBody","page","restaurant_id","mode","restaurant_name","category_name","themeColor","link","isActive","navLinkStyle","backgroundColor","onClickListItem","propTypes","func","any","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport Edit from '@material-ui/icons/Edit';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { autobind } from 'core-decorators';\n\nimport { NavLink } from 'react-router-dom';\n\nexport class CategoryListItem extends PureComponent {\n    @autobind\n    onDeleteClick(target) {\n        const {\n            dataset: { id }\n        } = target;\n        const { showConfirm, handleDeleteCategory } = this.props;\n\n        showConfirm({\n            data: { body: { id } },\n            onSuccess: handleDeleteCategory,\n            content:\n                'Are you sure you want to delete category? Note, that all dishes within this category will be also deleted.'\n        });\n    }\n\n    @autobind\n    onEditCLick(target) {\n        const {\n            dataset: { id }\n        } = target;\n        const { toggleCategoryModal, setCategoryModalMode } = this.props;\n\n        toggleCategoryModal({ id, open: true });\n        setCategoryModalMode('edit');\n    }\n\n    getButttonTarget(target) {\n        if (!target) {\n            return {\n                dataset: {}\n            };\n        }\n\n        return target.type === 'button'\n            ? target\n            : this.getButttonTarget(target.parentElement);\n    }\n\n    @autobind\n    onClickListItem(event) {\n        const target = this.getButttonTarget(event.target);\n        const {\n            dataset: { name }\n        } = target;\n\n        const {\n            getDishes,\n            id,\n            dishFilters,\n            updateDishFilters,\n            category_id\n        } = this.props;\n\n        if (typeof name === 'string') {\n            return name === 'edit'\n                ? this.onEditCLick(target)\n                : this.onDeleteClick(target);\n        }\n\n        if (category_id !== id) {\n            const dishBody = { category_id: id, page: 1 };\n            updateDishFilters(dishBody);\n\n            getDishes({\n                body: {\n                    ...dishFilters,\n                    ...dishBody\n                }\n            });\n        }\n    }\n\n    render() {\n        const {\n            restaurant_id,\n            category_id,\n            name,\n            id,\n            mode,\n            restaurant_name,\n            category_name,\n            themeColor\n        } = this.props;\n        const link =\n            mode === 'client'\n                ? `/r/${restaurant_name}/${name}`\n                : `/menu/?restaurant_id=${restaurant_id}&category_id=${id}`;\n\n        const isActive =\n            mode === 'client'\n                ? category_name === name\n                    ? 'active'\n                    : ''\n                : category_id === id\n                ? 'active'\n                : '';\n\n        const navLinkStyle = {\n            backgroundColor: isActive ? themeColor : 'white'\n        };\n\n        return (\n            <NavLink\n                className={`categories-list__item ${isActive}`}\n                style={navLinkStyle}\n                to={link}\n                key={id}\n            >\n                <ListItem key={id} onClick={this.onClickListItem}>\n                    <ListItemText className={'categories-list__item-label'}>\n                        {name}\n                    </ListItemText>\n\n                    {mode !== 'client' && (\n                        <>\n                            <Tooltip title={'Edit'}>\n                                <IconButton\n                                    data-id={id}\n                                    data-name={'edit'}\n                                    className={'categories-list__item-control'}\n                                >\n                                    <Edit data-name={'edit'} />\n                                </IconButton>\n                            </Tooltip>\n\n                            <Tooltip title={'Delete'}>\n                                <IconButton\n                                    data-id={id}\n                                    data-name={'delete'}\n                                    className={'categories-list__item-control'}\n                                >\n                                    <Delete data-name={'delete'} />\n                                </IconButton>\n                            </Tooltip>\n                        </>\n                    )}\n                </ListItem>\n            </NavLink>\n        );\n    }\n}\n\nCategoryListItem.propTypes = {\n    updateDishFilters: PropTypes.func,\n    showConfirm: PropTypes.func,\n    handleDeleteCategory: PropTypes.func,\n    toggleCategoryModal: PropTypes.func,\n    restaurant_id: PropTypes.any,\n    category_id: PropTypes.string,\n    name: PropTypes.string,\n    id: PropTypes.any,\n    dishFilters: PropTypes.any,\n    mode: PropTypes.string\n};\nCategoryListItem.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}