{"ast":null,"code":"import _defineProperty from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppDropzone/AppDropzone.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { autobind } from 'core-decorators';\nimport Dropzone from 'react-dropzone';\nimport ReactCrop from 'react-image-crop';\nimport classNames from 'classnames';\nimport { Grid, withStyles, Typography } from '@material-ui/core';\nimport styles from './styles';\nimport 'react-image-crop/lib/ReactCrop.scss';\nvar AppDropzone = (_dec = withStyles(styles), _dec(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AppDropzone, _PureComponent);\n\n  function AppDropzone() {\n    _classCallCheck(this, AppDropzone);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppDropzone).apply(this, arguments));\n  }\n\n  _createClass(AppDropzone, [{\n    key: \"onDrop\",\n    value: function onDrop(accepted) {\n      var onDrop = this.props.onDrop;\n      onDrop(accepted && accepted[0]);\n    }\n  }, {\n    key: \"renderPreview\",\n    value: function renderPreview(src) {\n      var _this$props = this.props,\n          crop = _this$props.crop,\n          onChange = _this$props.onChange,\n          useCrop = _this$props.useCrop,\n          file = _this$props.file,\n          classes = _this$props.classes,\n          previewClass = _this$props.previewClass;\n\n      if (!useCrop || !(file instanceof File)) {\n        return React.createElement(\"img\", {\n          src: src,\n          alt: \"\",\n          className: classNames(classes.imgagePreview, previewClass),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(ReactCrop, Object.assign({\n        src: src,\n        crop: crop,\n        onChange: onChange\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          file = _this$props2.file,\n          accept = _this$props2.accept,\n          label = _this$props2.label,\n          wrapperClassName = _this$props2.wrapperClassName,\n          className = _this$props2.className,\n          classes = _this$props2.classes;\n      var src = file instanceof File ? URL.createObjectURL(file) : file;\n      return React.createElement(\"div\", {\n        className: classNames(classes.dropzoneWrapper, wrapperClassName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, src && this.renderPreview(src), React.createElement(Dropzone, Object.assign({\n        id: id,\n        accept: accept\n      }, {\n        className: classNames(classes.dropzoneArea, className),\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: classNames(classes.dropzoneContent, _defineProperty({}, classes.showOnlyOnHower, !!src)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"subtitle1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, label, \" \"), React.createElement(Typography, {\n        variant: \"subtitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Drag and drop picture to add it\"), React.createElement(\"div\", {\n        id: \"chosen-files\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, file && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, file.name)))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return AppDropzone;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onDrop\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onDrop\"), _class2.prototype)), _class2)) || _class);\nexport { AppDropzone as default };\nAppDropzone.propTypes = {\n  id: PropTypes.string,\n  wrapperClassName: PropTypes.string,\n  className: PropTypes.string,\n  accept: PropTypes.array.isRequired,\n  onDrop: PropTypes.func.isRequired,\n  useCrop: PropTypes.bool,\n  onChange: PropTypes.func,\n  crop: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number\n  })\n};\nAppDropzone.defaultProps = {\n  wrapperClassName: '',\n  className: ''\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AppDropzone, \"AppDropzone\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppDropzone/AppDropzone.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppDropzone/AppDropzone.js"],"names":["React","PureComponent","PropTypes","autobind","Dropzone","ReactCrop","classNames","Grid","withStyles","Typography","styles","AppDropzone","accepted","onDrop","props","src","crop","onChange","useCrop","file","classes","previewClass","File","imgagePreview","id","accept","label","wrapperClassName","className","URL","createObjectURL","dropzoneWrapper","renderPreview","dropzoneArea","dropzoneContent","showOnlyOnHower","name","propTypes","string","array","isRequired","func","bool","shape","x","number","y","width","height","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { autobind } from 'core-decorators';\nimport Dropzone from 'react-dropzone';\nimport ReactCrop from 'react-image-crop';\nimport classNames from 'classnames';\n\nimport { Grid, withStyles, Typography } from '@material-ui/core';\n\nimport styles from './styles';\n\nimport 'react-image-crop/lib/ReactCrop.scss';\n\nexport default\n@withStyles(styles)\nclass AppDropzone extends PureComponent {\n  @autobind\n  onDrop(accepted) {\n    const { onDrop } = this.props;\n    onDrop(accepted && accepted[0]);\n  }\n\n  renderPreview(src) {\n    const { crop, onChange, useCrop, file, classes, previewClass } = this.props;\n\n    if (!useCrop || !(file instanceof File)) {\n      return (\n        <img\n          src={src}\n          alt=\"\"\n          className={classNames(classes.imgagePreview, previewClass)}\n        />\n      );\n    }\n\n    return (\n      <ReactCrop\n        {...{\n          src,\n          crop,\n          onChange,\n        }}\n      />\n    );\n  }\n\n  render() {\n    const {\n      id,\n      file,\n      accept,\n      label,\n      wrapperClassName,\n      className,\n      classes,\n    } = this.props;\n    const src = file instanceof File ? URL.createObjectURL(file) : file;\n\n    return (\n      <div className={classNames(classes.dropzoneWrapper, wrapperClassName)}>\n        {src && this.renderPreview(src)}\n        <Dropzone\n          {...{\n            id,\n            accept,\n          }}\n          className={classNames(classes.dropzoneArea, className)}\n          onDrop={this.onDrop}>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classNames(classes.dropzoneContent, {\n              [classes.showOnlyOnHower]: !!src,\n            })}>\n            <Typography variant=\"subtitle1\">{label} </Typography>\n            <Typography variant=\"subtitle2\">\n              Drag and drop picture to add it\n            </Typography>\n            <div id=\"chosen-files\">{file && <div>{file.name}</div>}</div>\n          </Grid>\n        </Dropzone>\n      </div>\n    );\n  }\n}\n\nAppDropzone.propTypes = {\n  id: PropTypes.string,\n  wrapperClassName: PropTypes.string,\n  className: PropTypes.string,\n  accept: PropTypes.array.isRequired,\n  onDrop: PropTypes.func.isRequired,\n  useCrop: PropTypes.bool,\n  onChange: PropTypes.func,\n  crop: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  }),\n};\n\nAppDropzone.defaultProps = {\n  wrapperClassName: '',\n  className: '',\n};\n"]},"metadata":{},"sourceType":"module"}