{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Router.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport './Router.scss';\nimport { isAuthSelector, signOut, getDictionaries, roleSelector, themeSelector, themeColorSelector, bgColorSelector } from '../modules/core';\nimport { PrivateRoute } from '../components';\nimport { SignIn } from './SignIn';\nimport { ForgotPassword } from './ForgotPassword';\nimport { ResetPassword } from './ResetPassword';\nimport { Header } from './Header';\nimport { Restaurants } from './Restaurants';\nimport { MenuRestorator, MenuClient } from './Menu';\nimport { Designer } from './Designer';\nimport { Checkout } from './Checkout';\nimport { Footer } from './Footer';\nimport { Toasts } from './Toasts';\nimport { AppConfirm } from './AppConfirm';\nimport { RestaurantInfo } from './RestaurantInfo';\nimport { ConnectStripeToRestaurant } from './ConnectStripeToRestaurant';\nimport { RestaurantOrders } from './RestaurantOrders';\nimport { CustomDragLayer } from './RestaurantOrders/components';\nvar mapDispatchToProps = {\n  signOut: signOut,\n  getDictionaries: getDictionaries\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuth: isAuthSelector(state),\n    role: roleSelector(state),\n    theme: themeSelector(state),\n    themeColor: themeColorSelector(state),\n    bgColor: bgColorSelector(state)\n  };\n};\n\nvar Router = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Router, _PureComponent);\n\n  function Router() {\n    _classCallCheck(this, Router);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Router).apply(this, arguments));\n  }\n\n  _createClass(Router, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          isAuth = _this$props.isAuth,\n          getDictionaries = _this$props.getDictionaries;\n      isAuth && getDictionaries();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          isAuth = _this$props2.isAuth,\n          signOut = _this$props2.signOut,\n          role = _this$props2.role,\n          theme = _this$props2.theme,\n          themeColor = _this$props2.themeColor,\n          bgColor = _this$props2.bgColor;\n      var mainStyle = {\n        backgroundColor: bgColor\n      };\n      return React.createElement(MuiThemeProvider, {\n        theme: createMuiTheme(theme),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(React.Fragment, null, React.createElement(CustomDragLayer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Header, {\n        isAuth: isAuth,\n        signOut: signOut,\n        role: role,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Toasts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(AppConfirm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"main\", {\n        className: \"app-container__main\",\n        style: mainStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(PrivateRoute, {\n        path: \"/sign-in\",\n        hasAccess: !isAuth,\n        role: role,\n        component: SignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/forgot-password\",\n        role: role,\n        hasAccess: !isAuth,\n        component: ForgotPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/password/reset/:token\",\n        role: role,\n        hasAccess: !isAuth,\n        component: ResetPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/restaurants\",\n        role: role,\n        hasAccess: isAuth && role.name === 'admin',\n        component: Restaurants,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/menu\",\n        role: role,\n        hasAccess: isAuth,\n        component: MenuRestorator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/r/:restaurant_url\",\n        role: role,\n        hasAccess: true,\n        component: MenuClient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/r/:restaurant_url/:category_name\",\n        role: role,\n        hasAccess: true,\n        component: MenuClient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/designer\",\n        role: role,\n        hasAccess: isAuth,\n        component: Designer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/checkout/:restaurant_url\",\n        role: role,\n        hasAccess: true,\n        component: Checkout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/restaurant_info\",\n        role: role,\n        hasAccess: isAuth && role.name === 'restaurant',\n        component: RestaurantInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/restaurant/connect_to_stripe\",\n        role: role,\n        hasAccess: isAuth && role.name === 'restaurant',\n        component: ConnectStripeToRestaurant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/restaurant_orders\",\n        role: role,\n        hasAccess: isAuth && role.name === 'restaurant',\n        component: RestaurantOrders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        to: \"/restaurants\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }))), React.createElement(Footer, {\n        color: themeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Router;\n}(PureComponent)) || _class);\n\nvar _default = withRouter(Router);\n\nexport default _default;\nRouter.propTypes = {\n  signOut: PropTypes.func\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Router.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Router.js\");\n  reactHotLoader.register(Router, \"Router\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Router.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Router.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Router.js"],"names":["React","PureComponent","PropTypes","Switch","Redirect","withRouter","connect","createMuiTheme","MuiThemeProvider","isAuthSelector","signOut","getDictionaries","roleSelector","themeSelector","themeColorSelector","bgColorSelector","PrivateRoute","SignIn","ForgotPassword","ResetPassword","Header","Restaurants","MenuRestorator","MenuClient","Designer","Checkout","Footer","Toasts","AppConfirm","RestaurantInfo","ConnectStripeToRestaurant","RestaurantOrders","CustomDragLayer","mapDispatchToProps","mapStateToProps","state","isAuth","role","theme","themeColor","bgColor","Router","props","mainStyle","backgroundColor","name","propTypes","func"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport './Router.scss';\n\nimport {\n  isAuthSelector,\n  signOut,\n  getDictionaries,\n  roleSelector,\n  themeSelector,\n  themeColorSelector,\n  bgColorSelector,\n} from '../modules/core';\nimport { PrivateRoute } from '../components';\n\nimport { SignIn } from './SignIn';\nimport { ForgotPassword } from './ForgotPassword';\nimport { ResetPassword } from './ResetPassword';\nimport { Header } from './Header';\n\nimport { Restaurants } from './Restaurants';\nimport { MenuRestorator, MenuClient } from './Menu';\n\nimport { Designer } from './Designer';\nimport { Checkout } from './Checkout';\n\nimport { Footer } from './Footer';\nimport { Toasts } from './Toasts';\nimport { AppConfirm } from './AppConfirm';\nimport { RestaurantInfo } from './RestaurantInfo';\nimport { ConnectStripeToRestaurant } from './ConnectStripeToRestaurant';\nimport { RestaurantOrders } from './RestaurantOrders';\n\nimport { CustomDragLayer } from './RestaurantOrders/components';\n\nconst mapDispatchToProps = {\n  signOut,\n  getDictionaries,\n};\n\nconst mapStateToProps = state => ({\n  isAuth: isAuthSelector(state),\n  role: roleSelector(state),\n  theme: themeSelector(state),\n  themeColor: themeColorSelector(state),\n  bgColor: bgColorSelector(state),\n});\n\n@connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)\nclass Router extends PureComponent {\n  componentDidMount() {\n    const { isAuth, getDictionaries } = this.props;\n    isAuth && getDictionaries();\n  }\n\n  render() {\n    const { isAuth, signOut, role, theme, themeColor, bgColor } = this.props;\n\n    const mainStyle = {\n      backgroundColor: bgColor,\n    };\n\n    return (\n      <MuiThemeProvider theme={createMuiTheme(theme)}>\n        <>\n          <CustomDragLayer />\n\n          <Header isAuth={isAuth} signOut={signOut} role={role} />\n          <Toasts />\n          <AppConfirm />\n          <main className=\"app-container__main\" style={mainStyle}>\n            <Switch>\n              <PrivateRoute\n                path=\"/sign-in\"\n                hasAccess={!isAuth}\n                role={role}\n                component={SignIn}\n              />\n              <PrivateRoute\n                path=\"/forgot-password\"\n                role={role}\n                hasAccess={!isAuth}\n                component={ForgotPassword}\n              />\n              <PrivateRoute\n                path=\"/password/reset/:token\"\n                role={role}\n                hasAccess={!isAuth}\n                component={ResetPassword}\n              />\n              <PrivateRoute\n                path=\"/restaurants\"\n                role={role}\n                hasAccess={isAuth && role.name === 'admin'}\n                component={Restaurants}\n              />\n              <PrivateRoute\n                path=\"/menu\"\n                role={role}\n                hasAccess={isAuth}\n                component={MenuRestorator}\n              />\n              <PrivateRoute\n                path=\"/r/:restaurant_url\"\n                role={role}\n                hasAccess\n                component={MenuClient}\n              />\n              <PrivateRoute\n                path=\"/r/:restaurant_url/:category_name\"\n                role={role}\n                hasAccess\n                component={MenuClient}\n              />\n              <PrivateRoute\n                path=\"/designer\"\n                role={role}\n                hasAccess={isAuth}\n                component={Designer}\n              />\n\n              <PrivateRoute\n                path=\"/checkout/:restaurant_url\"\n                role={role}\n                hasAccess\n                component={Checkout}\n              />\n\n              <PrivateRoute\n                path=\"/restaurant_info\"\n                role={role}\n                hasAccess={isAuth && role.name === 'restaurant'}\n                component={RestaurantInfo}\n              />\n\n              <PrivateRoute\n                path=\"/restaurant/connect_to_stripe\"\n                role={role}\n                hasAccess={isAuth && role.name === 'restaurant'}\n                component={ConnectStripeToRestaurant}\n              />\n\n              <PrivateRoute\n                path=\"/restaurant_orders\"\n                role={role}\n                hasAccess={isAuth && role.name === 'restaurant'}\n                component={RestaurantOrders}\n              />\n\n              {/* todo fix this bug */}\n              <Redirect to=\"/restaurants\" />\n            </Switch>\n          </main>\n          <Footer color={themeColor} />\n        </>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withRouter(Router);\n\nRouter.propTypes = {\n  signOut: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}