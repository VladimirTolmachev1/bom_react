{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _dec2,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ZipCodeAutoComplete/ZipCodeAutoComplete.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { withStyles } from '@material-ui/core';\nimport { AppCleanHOC, AppAutoComplete } from '/components';\nimport { HelperService } from '/services';\nimport styles from './styles';\nimport { zipcodesFiltersSelector, zipcodesListSelector, zipcodesLoadingSelector, updateFilters, abortPageRequests, getZipcodesForAutocomplete, zipcodesCountSelector, setPage, clearAutocomplete } from './modules';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    zipcodes: zipcodesListSelector(state),\n    filters: zipcodesFiltersSelector(state),\n    loading: zipcodesLoadingSelector(state),\n    count: zipcodesCountSelector(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  getZipcodesForAutocomplete: getZipcodesForAutocomplete,\n  updateFilters: updateFilters,\n  abortPageRequests: abortPageRequests,\n  setPage: setPage,\n  clearAutocomplete: clearAutocomplete\n};\nvar ZipCodeAutocomplete = (_dec = withStyles(styles), _dec2 = connect(mapStateToProps, mapDispatchToProps), _dec(_class = _dec2(_class = AppCleanHOC(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(ZipCodeAutocomplete, _PureComponent);\n\n  function ZipCodeAutocomplete() {\n    _classCallCheck(this, ZipCodeAutocomplete);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ZipCodeAutocomplete).apply(this, arguments));\n  }\n\n  _createClass(ZipCodeAutocomplete, [{\n    key: \"makeRequest\",\n    value: function makeRequest(rest) {\n      var _this$props = this.props,\n          getZipcodesForAutocomplete = _this$props.getZipcodesForAutocomplete,\n          updateFilters = _this$props.updateFilters,\n          filters = _this$props.filters;\n\n      var body = _objectSpread({}, filters, rest);\n\n      updateFilters(body);\n      getZipcodesForAutocomplete({\n        body: body\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var clearAutocomplete = this.props.clearAutocomplete;\n      clearAutocomplete();\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange(search) {\n      if (search.length <= 5) {\n        this.makeRequest({\n          search: search\n        });\n      }\n    }\n  }, {\n    key: \"onMenuScrollToBottom\",\n    value: function onMenuScrollToBottom(event) {\n      var _this$props2 = this.props,\n          setPage = _this$props2.setPage,\n          page = _this$props2.filters.page,\n          getZipcodesForAutocomplete = _this$props2.getZipcodesForAutocomplete;\n      var body = {\n        page: page + 1\n      };\n      setPage(page + 1);\n      getZipcodesForAutocomplete({\n        body: body\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(option) {\n      var _this$props3 = this.props,\n          onChange = _this$props3.onChange,\n          zipcodes = _this$props3.zipcodes;\n      var value = option ? option.value : '';\n      var zipcode = zipcodes.find(function (zipcode) {\n        return zipcode.value === value;\n      }) || {\n        label: '',\n        value: ''\n      };\n      onChange(zipcode);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      ;\n      this.makeRequest();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          zipcodes = _this$props4.zipcodes,\n          classes = _this$props4.classes,\n          wrapperClassName = _this$props4.wrapperClassName,\n          rest = _objectWithoutProperties(_this$props4, [\"zipcodes\", \"classes\", \"wrapperClassName\"]);\n\n      return React.createElement(\"div\", {\n        className: \"\".concat(classes.zipcodeAutocompleteWrapper, \" \").concat(wrapperClassName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(AppAutoComplete, Object.assign({}, HelperService.pick(this.props, ['loading', 'compareKey', 'placeholder', 'selectedOption', 'withPagination', 'value', 'count']), {\n        isSearchable: true,\n        isCreatable: false,\n        onMenuScrollToBottom: this.onMenuScrollToBottom,\n        onInputChange: this.onInputChange,\n        options: zipcodes,\n        className: 'zipcode-autocomplete',\n        onChange: this.onChange\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return ZipCodeAutocomplete;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onInputChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onInputChange\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onMenuScrollToBottom\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onMenuScrollToBottom\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onChange\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"componentDidMount\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"componentDidMount\"), _class2.prototype)), _class2)) || _class) || _class) || _class);\nexport { ZipCodeAutocomplete as default };\nZipCodeAutocomplete.propTypes = {\n  zipcodes: PropTypes.array,\n  loading: PropTypes.bool,\n  compareKey: PropTypes.string,\n  onChange: PropTypes.func,\n  theme: PropTypes.object,\n  wrapperClasses: PropTypes.string,\n  placeholder: PropTypes.string\n};\nZipCodeAutocomplete.defaultProps = {\n  placeholder: 'Select zip code',\n  compareKey: 'label',\n  wrapperClassName: ''\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ZipCodeAutoComplete/ZipCodeAutoComplete.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ZipCodeAutoComplete/ZipCodeAutoComplete.js\");\n  reactHotLoader.register(ZipCodeAutocomplete, \"ZipCodeAutocomplete\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ZipCodeAutoComplete/ZipCodeAutoComplete.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ZipCodeAutoComplete/ZipCodeAutoComplete.js"],"names":["React","PureComponent","PropTypes","connect","autobind","withStyles","AppCleanHOC","AppAutoComplete","HelperService","styles","zipcodesFiltersSelector","zipcodesListSelector","zipcodesLoadingSelector","updateFilters","abortPageRequests","getZipcodesForAutocomplete","zipcodesCountSelector","setPage","clearAutocomplete","mapStateToProps","state","zipcodes","filters","loading","count","mapDispatchToProps","ZipCodeAutocomplete","rest","props","body","search","length","makeRequest","event","page","option","onChange","value","zipcode","find","label","classes","wrapperClassName","zipcodeAutocompleteWrapper","pick","onMenuScrollToBottom","onInputChange","propTypes","array","bool","compareKey","string","func","theme","object","wrapperClasses","placeholder","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { withStyles } from '@material-ui/core';\nimport { AppCleanHOC, AppAutoComplete } from '/components';\nimport { HelperService } from '/services';\n\nimport styles from './styles';\n\nimport {\n    zipcodesFiltersSelector,\n    zipcodesListSelector,\n    zipcodesLoadingSelector,\n    updateFilters,\n    abortPageRequests,\n    getZipcodesForAutocomplete,\n    zipcodesCountSelector,\n    setPage,\n    clearAutocomplete\n} from './modules';\n\nconst mapStateToProps = state => ({\n    zipcodes: zipcodesListSelector(state),\n    filters: zipcodesFiltersSelector(state),\n    loading: zipcodesLoadingSelector(state),\n    count: zipcodesCountSelector(state)\n});\n\nconst mapDispatchToProps = {\n    getZipcodesForAutocomplete,\n    updateFilters,\n    abortPageRequests,\n    setPage,\n    clearAutocomplete\n};\n\nexport default\n@withStyles(styles)\n@connect(\n    mapStateToProps,\n    mapDispatchToProps\n)\n@AppCleanHOC\nclass ZipCodeAutocomplete extends PureComponent {\n    makeRequest(rest) {\n        const {\n            getZipcodesForAutocomplete,\n            updateFilters,\n            filters\n        } = this.props;\n\n        const body = { ...filters, ...rest };\n        updateFilters(body);\n        getZipcodesForAutocomplete({ body });\n    }\n\n    componentWillUnmount() {\n        const { clearAutocomplete } = this.props;\n        clearAutocomplete();\n    }\n\n    @autobind\n    onInputChange(search) {\n        if ( search.length <= 5) {\n            this.makeRequest({ search });\n        }\n    }\n\n    @autobind\n    onMenuScrollToBottom(event) {\n        const {\n            setPage,\n            filters: { page },\n            getZipcodesForAutocomplete\n        } = this.props;\n        const body = { page: page + 1 };\n\n        setPage(page + 1);\n        getZipcodesForAutocomplete({ body });\n    }\n\n    @autobind\n    onChange(option) {\n        const { onChange, zipcodes } = this.props;\n        const value = option ? option.value : '';\n        const zipcode = zipcodes.find(zipcode => zipcode.value === value) || {\n            label: '',\n            value: ''\n        };\n        onChange(zipcode);\n    }\n\n    @autobind\n    componentDidMount() {;\n        this.makeRequest();\n    }\n\n    render() {\n        const {\n          zipcodes,\n          classes,\n          wrapperClassName,\n          ...rest\n        } = this.props;\n\n        return (\n            <div className={`${classes.zipcodeAutocompleteWrapper} ${ wrapperClassName }`}>\n                <AppAutoComplete\n                    {...HelperService.pick(this.props, [\n                        'loading',\n                        'compareKey',\n                        'placeholder',\n                        'selectedOption',\n                        'withPagination',\n                        'value',\n                        'count'\n                    ])}\n                    isSearchable\n                    isCreatable={false}\n                    onMenuScrollToBottom={this.onMenuScrollToBottom}\n                    onInputChange={this.onInputChange}\n                    options={zipcodes}\n                    className={'zipcode-autocomplete'}\n                    onChange={this.onChange}\n                    { ...rest }\n                />\n            </div>\n        );\n    }\n}\n\nZipCodeAutocomplete.propTypes = {\n    zipcodes: PropTypes.array,\n    loading: PropTypes.bool,\n    compareKey: PropTypes.string,\n    onChange: PropTypes.func,\n    theme: PropTypes.object,\n    wrapperClasses: PropTypes.string,\n    placeholder: PropTypes.string,\n    \n};\n\nZipCodeAutocomplete.defaultProps = {\n    placeholder: 'Select zip code',\n    compareKey: 'label',\n    wrapperClassName: '',\n};\n"]},"metadata":{},"sourceType":"module"}