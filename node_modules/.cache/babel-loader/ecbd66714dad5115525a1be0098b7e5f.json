{"ast":null,"code":"import _defineProperty from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { ReduxCrudService } from '/services';\nimport { API_REQUESTS_ABORT } from '/modules/core.modules';\nexport var resource = '/designer';\n\nvar _ReduxCrudService$get = ReduxCrudService.getActionCrudTypes(resource),\n    _ReduxCrudService$get2 = _slicedToArray(_ReduxCrudService$get.GET, 3),\n    GET_DESIGNER_BY_ID_REQUEST = _ReduxCrudService$get2[0],\n    GET_DESIGNER_BY_ID_SUCCESS = _ReduxCrudService$get2[1],\n    GET_DESIGNER_BY_ID_ERROR = _ReduxCrudService$get2[2],\n    _ReduxCrudService$get3 = _slicedToArray(_ReduxCrudService$get.POST, 3),\n    UPDATE_DESIGNER_REQUEST = _ReduxCrudService$get3[0],\n    UPDATE_DESIGNER_SUCCESS = _ReduxCrudService$get3[1],\n    UPDATE_DESIGNER_ERROR = _ReduxCrudService$get3[2];\n\nexport { GET_DESIGNER_BY_ID_REQUEST, GET_DESIGNER_BY_ID_SUCCESS, GET_DESIGNER_BY_ID_ERROR, UPDATE_DESIGNER_REQUEST, UPDATE_DESIGNER_SUCCESS, UPDATE_DESIGNER_ERROR };\nexport var CLEAR_PAGE_DESIGNER_PAGE = 'designer/clear-page';\nexport var getInitialState = function getInitialState() {\n  return {\n    loading: false,\n    initialValues: {},\n    error: null,\n    id: null\n  };\n};\nexport var reducer = _defineProperty({\n  name: resource\n}, resource, function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getInitialState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_DESIGNER_REQUEST:\n    case GET_DESIGNER_BY_ID_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          loading: true\n        });\n      }\n\n    case CLEAR_PAGE_DESIGNER_PAGE:\n      {\n        return getInitialState();\n      }\n\n    case GET_DESIGNER_BY_ID_SUCCESS:\n    case UPDATE_DESIGNER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          initialValues: action.response,\n          loading: false\n        });\n      }\n\n    case GET_DESIGNER_BY_ID_ERROR:\n    case UPDATE_DESIGNER_ERROR:\n      {\n        return _objectSpread({}, state, {\n          loading: false,\n          error: action.error\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n});\nexport var updateDesigner = ReduxCrudService.resourceAction({\n  resource: resource,\n  method: 'POST',\n  contentType: 'multipart/form-data',\n  logger: {\n    success: 'Page designer was successful updated',\n    error: 'Error during Page designer update'\n  }\n});\nexport var getDesignerById = ReduxCrudService.resourceAction({\n  resource: resource,\n  method: 'GET'\n});\nexport function clearModalData() {\n  return {\n    type: CLEAR_PAGE_DESIGNER_PAGE\n  };\n}\nexport function abortPageRequests() {\n  return {\n    type: API_REQUESTS_ABORT,\n    requestTypes: [GET_DESIGNER_BY_ID_REQUEST, UPDATE_DESIGNER_REQUEST]\n  };\n}\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(resource, \"resource\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  reactHotLoader.register(GET_DESIGNER_BY_ID_REQUEST, \"GET_DESIGNER_BY_ID_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  reactHotLoader.register(GET_DESIGNER_BY_ID_SUCCESS, \"GET_DESIGNER_BY_ID_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  reactHotLoader.register(GET_DESIGNER_BY_ID_ERROR, \"GET_DESIGNER_BY_ID_ERROR\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  reactHotLoader.register(UPDATE_DESIGNER_REQUEST, \"UPDATE_DESIGNER_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  reactHotLoader.register(UPDATE_DESIGNER_SUCCESS, \"UPDATE_DESIGNER_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  reactHotLoader.register(UPDATE_DESIGNER_ERROR, \"UPDATE_DESIGNER_ERROR\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  reactHotLoader.register(CLEAR_PAGE_DESIGNER_PAGE, \"CLEAR_PAGE_DESIGNER_PAGE\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  reactHotLoader.register(getInitialState, \"getInitialState\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  reactHotLoader.register(reducer, \"reducer\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  reactHotLoader.register(updateDesigner, \"updateDesigner\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  reactHotLoader.register(getDesignerById, \"getDesignerById\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  reactHotLoader.register(clearModalData, \"clearModalData\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  reactHotLoader.register(abortPageRequests, \"abortPageRequests\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Designer/modules/designer.modules.js"],"names":["ReduxCrudService","API_REQUESTS_ABORT","resource","getActionCrudTypes","GET","GET_DESIGNER_BY_ID_REQUEST","GET_DESIGNER_BY_ID_SUCCESS","GET_DESIGNER_BY_ID_ERROR","POST","UPDATE_DESIGNER_REQUEST","UPDATE_DESIGNER_SUCCESS","UPDATE_DESIGNER_ERROR","CLEAR_PAGE_DESIGNER_PAGE","getInitialState","loading","initialValues","error","id","reducer","name","state","action","type","response","updateDesigner","resourceAction","method","contentType","logger","success","getDesignerById","clearModalData","abortPageRequests","requestTypes"],"mappings":";;;;;;;;;;AAAA,SAASA,gBAAT,QAAiC,WAAjC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AAEA,OAAO,IAAMC,QAAQ,GAAG,WAAjB;;4BAcHF,gBAAgB,CAACG,kBAAjB,CAAoCD,QAApC,C;kEAXAE,G;IACIC,0B;IACAC,0B;IACAC,wB;kEAEJC,I;IACIC,uB;IACAC,uB;IACAC,qB;;;AAKR,OAAO,IAAMC,wBAAwB,GAAG,qBAAjC;AAEP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAClCC,IAAAA,OAAO,EAAE,KADyB;AAElCC,IAAAA,aAAa,EAAE,EAFmB;AAGlCC,IAAAA,KAAK,EAAE,IAH2B;AAIlCC,IAAAA,EAAE,EAAE;AAJ8B,GAAP;AAAA,CAAxB;AAOP,OAAO,IAAMC,OAAO;AAChBC,EAAAA,IAAI,EAAEjB;AADU,GAEfA,QAFe,EAEJ,SAASgB,OAAT,GAAoD;AAAA,MAAnCE,KAAmC,uEAA3BP,eAAe,EAAY;AAAA,MAARQ,MAAQ;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,uBAAL;AACA,SAAKJ,0BAAL;AAAiC;AAC7B,iCACOe,KADP;AAEIN,UAAAA,OAAO,EAAE;AAFb;AAIH;;AACD,SAAKF,wBAAL;AAA+B;AAC3B,eAAOC,eAAe,EAAtB;AACH;;AAED,SAAKP,0BAAL;AACA,SAAKI,uBAAL;AAA8B;AAC1B,iCACOU,KADP;AAEIL,UAAAA,aAAa,EAAEM,MAAM,CAACE,QAF1B;AAGIT,UAAAA,OAAO,EAAE;AAHb;AAKH;;AAED,SAAKP,wBAAL;AACA,SAAKI,qBAAL;AAA4B;AACxB,iCACOS,KADP;AAEIN,UAAAA,OAAO,EAAE,KAFb;AAGIE,UAAAA,KAAK,EAAEK,MAAM,CAACL;AAHlB;AAKH;;AAED;AAAS;AACL,eAAOI,KAAP;AACH;AAhCL;AAkCH,CArCe,CAAb;AAwCP,OAAO,IAAMI,cAAc,GAAGxB,gBAAgB,CAACyB,cAAjB,CAAgC;AAC1DvB,EAAAA,QAAQ,EAARA,QAD0D;AAE1DwB,EAAAA,MAAM,EAAE,MAFkD;AAG1DC,EAAAA,WAAW,EAAE,qBAH6C;AAI1DC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE,sCADL;AAEJb,IAAAA,KAAK,EAAE;AAFH;AAJkD,CAAhC,CAAvB;AAUP,OAAO,IAAMc,eAAe,GAAG9B,gBAAgB,CAACyB,cAAjB,CAAgC;AAC3DvB,EAAAA,QAAQ,EAARA,QAD2D;AAE3DwB,EAAAA,MAAM,EAAE;AAFmD,CAAhC,CAAxB;AAKP,OAAO,SAASK,cAAT,GAA0B;AAC7B,SAAO;AACHT,IAAAA,IAAI,EAAEV;AADH,GAAP;AAGH;AAED,OAAO,SAASoB,iBAAT,GAA6B;AAChC,SAAO;AACHV,IAAAA,IAAI,EAAErB,kBADH;AAEHgC,IAAAA,YAAY,EAAE,CACV5B,0BADU,EAEVI,uBAFU;AAFX,GAAP;AAOH;;;;;;;;;;;;0BA9FYP,Q;0BAILG,0B;0BACAC,0B;0BACAC,wB;0BAGAE,uB;0BACAC,uB;0BACAC,qB;0BAKKC,wB;0BAEAC,e;0BAOAK,O;0BAwCAM,c;0BAUAM,e;0BAKGC,c;0BAMAC,iB","sourcesContent":["import { ReduxCrudService } from '/services';\nimport { API_REQUESTS_ABORT } from '/modules/core.modules';\n\nexport const resource = '/designer';\n\nexport const {\n    GET: [\n        GET_DESIGNER_BY_ID_REQUEST,\n        GET_DESIGNER_BY_ID_SUCCESS,\n        GET_DESIGNER_BY_ID_ERROR\n    ],\n    POST: [\n        UPDATE_DESIGNER_REQUEST,\n        UPDATE_DESIGNER_SUCCESS,\n        UPDATE_DESIGNER_ERROR\n    ]\n\n} = ReduxCrudService.getActionCrudTypes(resource);\n\nexport const CLEAR_PAGE_DESIGNER_PAGE = 'designer/clear-page';\n\nexport const getInitialState = () => ({\n    loading: false,\n    initialValues: {},\n    error: null,\n    id: null\n});\n\nexport const reducer = {\n    name: resource,\n    [resource]: function reducer(state = getInitialState(), action) {\n        switch (action.type) {\n            case UPDATE_DESIGNER_REQUEST:\n            case GET_DESIGNER_BY_ID_REQUEST: {\n                return {\n                    ...state,\n                    loading: true\n                };\n            }\n            case CLEAR_PAGE_DESIGNER_PAGE: {\n                return getInitialState();\n            }\n\n            case GET_DESIGNER_BY_ID_SUCCESS:\n            case UPDATE_DESIGNER_SUCCESS: {\n                return {\n                    ...state,\n                    initialValues: action.response,\n                    loading: false\n                }\n            }\n\n            case GET_DESIGNER_BY_ID_ERROR:\n            case UPDATE_DESIGNER_ERROR: {\n                return {\n                    ...state,\n                    loading: false,\n                    error: action.error\n                }\n            }\n\n            default: {\n                return state\n            }\n        }\n    }\n};\n\nexport const updateDesigner = ReduxCrudService.resourceAction({\n    resource,\n    method: 'POST',\n    contentType: 'multipart/form-data',\n    logger: {\n        success: 'Page designer was successful updated',\n        error: 'Error during Page designer update'\n    }\n});\n\nexport const getDesignerById = ReduxCrudService.resourceAction({\n    resource,\n    method: 'GET',\n});\n\nexport function clearModalData() {\n    return {\n        type: CLEAR_PAGE_DESIGNER_PAGE\n    };\n}\n\nexport function abortPageRequests() {\n    return {\n        type: API_REQUESTS_ABORT,\n        requestTypes: [\n            GET_DESIGNER_BY_ID_REQUEST,\n            UPDATE_DESIGNER_REQUEST\n        ]\n    };\n}\n\n\n"]},"metadata":{},"sourceType":"module"}