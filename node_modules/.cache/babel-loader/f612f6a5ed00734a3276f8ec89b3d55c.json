{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Header/components/AdminNav/AdminNav.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { autobind } from 'core-decorators';\nexport var AdminNav = (_class =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AdminNav, _PureComponent);\n\n  function AdminNav() {\n    _classCallCheck(this, AdminNav);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AdminNav).apply(this, arguments));\n  }\n\n  _createClass(AdminNav, [{\n    key: \"onSignOutClick\",\n    value: function onSignOutClick() {\n      var signOut = this.props.signOut;\n      signOut();\n    }\n  }, {\n    key: \"getMarkupByRole\",\n    value: function getMarkupByRole() {\n      var role = this.props.role;\n\n      switch (role.name) {\n        case 'restaurant':\n          {\n            return React.createElement(Fragment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20\n              },\n              __self: this\n            }, React.createElement(NavLink, {\n              to: '/restaurant_info',\n              activeClassName: \"active\",\n              className: 'header-nav__list-item',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, \"Restaurant info\"), React.createElement(NavLink, {\n              to: \"/menu?restaurant_id=\".concat(role.restaurant_id),\n              activeClassName: \"active\",\n              className: 'header-nav__list-item',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28\n              },\n              __self: this\n            }, \"Menu\"), React.createElement(NavLink, {\n              to: \"/designer?restaurant_id=\".concat(role.restaurant_id),\n              activeClassName: \"active\",\n              className: 'header-nav__list-item',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            }, \"Page Designer\"));\n          }\n\n        case 'admin':\n          {\n            return React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50\n              },\n              __self: this\n            }, React.createElement(NavLink, {\n              to: '/restaurants',\n              activeClassName: \"active\",\n              className: 'header-nav__list-item',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51\n              },\n              __self: this\n            }, \"Restaurants\"));\n          }\n\n        default:\n          {\n            return false;\n          }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"nav\", {\n        className: 'header-nav',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: 'header-nav__list',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.getMarkupByRole(), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: '#',\n        className: 'header-nav__list-item',\n        onClick: this.onSignOutClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Sign Out\"))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return AdminNav;\n}(PureComponent), (_applyDecoratedDescriptor(_class.prototype, \"onSignOutClick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onSignOutClick\"), _class.prototype)), _class);\nAdminNav.propTypes = {\n  signOut: PropTypes.func.isRequired\n};\nAdminNav.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AdminNav, \"AdminNav\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Header/components/AdminNav/AdminNav.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Header/components/AdminNav/AdminNav.js"],"names":["React","PureComponent","Fragment","PropTypes","NavLink","autobind","AdminNav","signOut","props","role","name","restaurant_id","getMarkupByRole","onSignOutClick","propTypes","func","isRequired","defaultProps"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,WAAaC,QAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,qCAEqB;AAAA,UACLC,OADK,GACO,KAAKC,KADZ,CACLD,OADK;AAEbA,MAAAA,OAAO;AACV;AALL;AAAA;AAAA,sCAOsB;AAAA,UACNE,IADM,GACG,KAAKD,KADR,CACNC,IADM;;AAGd,cAAQA,IAAI,CAACC,IAAb;AACI,aAAK,YAAL;AAAmB;AACf,mBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,OAAD;AACM,cAAA,EAAE,EAAE,kBADV;AAEM,cAAA,eAAe,EAAC,QAFtB;AAGM,cAAA,SAAS,EAAE,uBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAQI,oBAAC,OAAD;AACI,cAAA,EAAE,gCAAyBD,IAAI,CAACE,aAA9B,CADN;AAEI,cAAA,eAAe,EAAC,QAFpB;AAGI,cAAA,SAAS,EAAE,uBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,EAeI,oBAAC,OAAD;AACI,cAAA,EAAE,oCACEF,IAAI,CAACE,aADP,CADN;AAII,cAAA,eAAe,EAAC,QAJpB;AAKI,cAAA,SAAS,EAAE,uBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAfJ,CADJ;AA4BH;;AACD,aAAK,OAAL;AAAc;AACV,mBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,OAAD;AACI,cAAA,EAAE,EAAE,cADR;AAEI,cAAA,eAAe,EAAC,QAFpB;AAGI,cAAA,SAAS,EAAE,uBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ;AAWH;;AACD;AAAS;AACL,mBAAO,KAAP;AACH;AA9CL;AAgDH;AA1DL;AAAA;AAAA,6BA4Da;AACL,aACI;AAAK,QAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAE,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,eAAL,EADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAE,GADV;AAEI,QAAA,SAAS,EAAE,uBAFf;AAGI,QAAA,OAAO,EAAE,KAAKC,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAFJ,CADJ,CADJ;AAgBH;AA7EL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAA8BZ,aAA9B,mEACKI,QADL;AAgFAC,QAAQ,CAACQ,SAAT,GAAqB;AACjBP,EAAAA,OAAO,EAAEJ,SAAS,CAACY,IAAV,CAAeC;AADP,CAArB;AAGAV,QAAQ,CAACW,YAAT,GAAwB,EAAxB;;;;;;;;;;;;0BAnFaX,Q","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport { autobind } from 'core-decorators';\n\nexport class AdminNav extends PureComponent {\n    @autobind\n    onSignOutClick() {\n        const { signOut } = this.props;\n        signOut();\n    }\n\n    getMarkupByRole() {\n        const { role } = this.props;\n\n        switch (role.name) {\n            case 'restaurant': {\n                return (\n                    <Fragment>\n                        <NavLink\n                              to={'/restaurant_info'}\n                              activeClassName='active'\n                              className={'header-nav__list-item'}\n                          >\n                            Restaurant info\n                        </NavLink>\n                        <NavLink\n                            to={`/menu?restaurant_id=${role.restaurant_id}`}\n                            activeClassName='active'\n                            className={'header-nav__list-item'}\n                        >\n                            Menu\n                        </NavLink>\n                        <NavLink\n                            to={`/designer?restaurant_id=${\n                                role.restaurant_id\n                            }`}\n                            activeClassName='active'\n                            className={'header-nav__list-item'}\n                        >\n                            Page Designer\n                        </NavLink>\n                   \n                    </Fragment>\n                );\n            }\n            case 'admin': {\n                return (\n                    <li>\n                        <NavLink\n                            to={'/restaurants'}\n                            activeClassName='active'\n                            className={'header-nav__list-item'}\n                        >\n                            Restaurants\n                        </NavLink>\n                    </li>\n                );\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n\n    render() {\n        return (\n            <nav className={'header-nav'}>\n                <ul className={'header-nav__list'}>\n                    {this.getMarkupByRole()}\n                    <li>\n                        <a\n                            href={'#'}\n                            className={'header-nav__list-item'}\n                            onClick={this.onSignOutClick}\n                        >\n                            Sign Out\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        );\n    }\n}\n\nAdminNav.propTypes = {\n    signOut: PropTypes.func.isRequired\n};\nAdminNav.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}