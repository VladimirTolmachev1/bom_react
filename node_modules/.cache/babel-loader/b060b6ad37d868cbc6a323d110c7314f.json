{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/DishSizesSelect/DishSizesSelect.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography } from '@material-ui/core';\nimport { AppFormSelect } from '../AppFormSelect';\nimport { CurrencyService } from '../../services';\nexport var DishSizesSelect =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DishSizesSelect, _Component);\n\n  function DishSizesSelect() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DishSizesSelect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DishSizesSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChange = function (option) {\n      var onChange = _this.props.onChange;\n      onChange && onChange(option);\n    };\n\n    return _this;\n  }\n\n  _createClass(DishSizesSelect, [{\n    key: \"mapOptions\",\n    value: function mapOptions() {\n      var options = this.props.options;\n      return options.map(function (_ref) {\n        var id = _ref.id,\n            name = _ref.name,\n            price = _ref.price;\n        return {\n          value: id,\n          renderName: function renderName() {\n            return React.createElement(Grid, {\n              container: true,\n              justify: \"space-between\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 19\n              },\n              __self: this\n            }, React.createElement(Typography, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20\n              },\n              __self: this\n            }, \" \", name, \" \"), React.createElement(Typography, {\n              color: \"textSecondary\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, \"$ \", CurrencyService.show(price)));\n          }\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          name = _this$props.name,\n          options = _this$props.options,\n          SelectComponent = _this$props.SelectComponent,\n          rest = _objectWithoutProperties(_this$props, [\"value\", \"name\", \"options\", \"SelectComponent\"]);\n\n      if (!options.length) {\n        return null;\n      }\n\n      return React.createElement(SelectComponent, Object.assign({\n        name: name,\n        withoutNone: true,\n        value: value,\n        label: \"Select size\"\n      }, rest, {\n        options: this.mapOptions(),\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return DishSizesSelect;\n}(Component);\nDishSizesSelect.propTypes = {\n  value: PropTypes.any,\n  options: PropTypes.array\n};\nDishSizesSelect.defaultProps = {\n  options: [],\n  name: 'selectedSize',\n  SelectComponent: AppFormSelect\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DishSizesSelect, \"DishSizesSelect\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/DishSizesSelect/DishSizesSelect.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/DishSizesSelect/DishSizesSelect.js"],"names":["React","Component","PropTypes","Grid","Typography","AppFormSelect","CurrencyService","DishSizesSelect","onChange","option","props","options","map","id","name","price","value","renderName","show","SelectComponent","rest","length","mapOptions","propTypes","any","array","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AAEA,WAAaC,eAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UACEC,QADF,GACa,UAAAC,MAAM,EAAI;AAAA,UACXD,QADW,GACE,MAAKE,KADP,CACXF,QADW;AAEnBA,MAAAA,QAAQ,IAAIA,QAAQ,CAACC,MAAD,CAApB;AACD,KAJH;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAMe;AAAA,UACHE,OADG,GACS,KAAKD,KADd,CACHC,OADG;AAGX,aAAOA,OAAO,CAACC,GAAR,CAAY;AAAA,YAAGC,EAAH,QAAGA,EAAH;AAAA,YAAOC,IAAP,QAAOA,IAAP;AAAA,YAAaC,KAAb,QAAaA,KAAb;AAAA,eAA0B;AAC3CC,UAAAA,KAAK,EAAEH,EADoC;AAE3CI,UAAAA,UAAU,EAAE;AAAA,mBACV,oBAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcH,IAAd,MADF,EAEE,oBAAC,UAAD;AAAY,cAAA,KAAK,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKR,eAAe,CAACY,IAAhB,CAAqBH,KAArB,CADL,CAFF,CADU;AAAA;AAF+B,SAA1B;AAAA,OAAZ,CAAP;AAWD;AApBH;AAAA;AAAA,6BAsBW;AAAA,wBACoD,KAAKL,KADzD;AAAA,UACCM,KADD,eACCA,KADD;AAAA,UACQF,IADR,eACQA,IADR;AAAA,UACcH,OADd,eACcA,OADd;AAAA,UACuBQ,eADvB,eACuBA,eADvB;AAAA,UAC2CC,IAD3C;;AAGP,UAAI,CAACT,OAAO,CAACU,MAAb,EAAqB;AACnB,eAAO,IAAP;AACD;;AAED,aACE,oBAAC,eAAD;AACE,QAAA,IAAI,EAAEP,IADR;AAEE,QAAA,WAAW,MAFb;AAGE,QAAA,KAAK,EAAEE,KAHT;AAIE,QAAA,KAAK,EAAC;AAJR,SAKMI,IALN;AAME,QAAA,OAAO,EAAE,KAAKE,UAAL,EANX;AAOE,QAAA,QAAQ,EAAE,KAAKd,QAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAWD;AAxCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAqCP,SAArC;AA2CAM,eAAe,CAACgB,SAAhB,GAA4B;AAC1BP,EAAAA,KAAK,EAAEd,SAAS,CAACsB,GADS;AAE1Bb,EAAAA,OAAO,EAAET,SAAS,CAACuB;AAFO,CAA5B;AAKAlB,eAAe,CAACmB,YAAhB,GAA+B;AAC7Bf,EAAAA,OAAO,EAAE,EADoB;AAE7BG,EAAAA,IAAI,EAAE,cAFuB;AAG7BK,EAAAA,eAAe,EAAEd;AAHY,CAA/B;;;;;;;;;;0BAhDaE,e","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography } from '@material-ui/core';\nimport { AppFormSelect } from '../AppFormSelect';\nimport { CurrencyService } from '../../services';\n\nexport class DishSizesSelect extends Component {\n  onChange = option => {\n    const { onChange } = this.props;\n    onChange && onChange(option);\n  };\n\n  mapOptions() {\n    const { options } = this.props;\n\n    return options.map(({ id, name, price }) => ({\n      value: id,\n      renderName: () => (\n        <Grid container justify=\"space-between\">\n          <Typography> {name} </Typography>\n          <Typography color=\"textSecondary\">\n            $ {CurrencyService.show(price)}\n          </Typography>\n        </Grid>\n      ),\n    }));\n  }\n\n  render() {\n    const { value, name, options, SelectComponent, ...rest } = this.props;\n\n    if (!options.length) {\n      return null;\n    }\n\n    return (\n      <SelectComponent\n        name={name}\n        withoutNone\n        value={value}\n        label=\"Select size\"\n        {...rest}\n        options={this.mapOptions()}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nDishSizesSelect.propTypes = {\n  value: PropTypes.any,\n  options: PropTypes.array,\n};\n\nDishSizesSelect.defaultProps = {\n  options: [],\n  name: 'selectedSize',\n  SelectComponent: AppFormSelect,\n};\n"]},"metadata":{},"sourceType":"module"}