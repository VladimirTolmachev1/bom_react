{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Designer/components/DesignerForm/DesignerForm.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport { Field } from 'redux-form';\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport { AppFormTextField, AppFormColorPicker, AppPreloaderSmall, AppDropzone } from '../../../../components';\nexport var DesignerForm =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(DesignerForm, _PureComponent);\n\n  function DesignerForm() {\n    _classCallCheck(this, DesignerForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DesignerForm).apply(this, arguments));\n  }\n\n  _createClass(DesignerForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSaveRestaurantLink = _this$props.handleSaveRestaurantLink,\n          loading = _this$props.loading,\n          background_pictureCrop = _this$props.background_pictureCrop,\n          logoCrop = _this$props.logoCrop,\n          onDropBackgroundImage = _this$props.onDropBackgroundImage,\n          onDropLogo = _this$props.onDropLogo,\n          onBackgroundCrop = _this$props.onBackgroundCrop,\n          onLogoCrop = _this$props.onLogoCrop,\n          onUpdateCLick = _this$props.onUpdateCLick,\n          invalid = _this$props.invalid,\n          logo = _this$props.logo,\n          background_picture = _this$props.background_picture,\n          url = _this$props.url;\n      return React.createElement(Grid, {\n        className: \"designer__form\",\n        container: true,\n        direction: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, loading && React.createElement(AppPreloaderSmall, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"title\",\n        paragraph: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Main Settings\"), React.createElement(Field, {\n        name: \"url\",\n        required: true,\n        type: \"text\",\n        className: \"designer__control\",\n        label: \"Page url address\",\n        component: AppFormTextField,\n        onBlur: handleSaveRestaurantLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Your restaurant link is\"), React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: \"\".concat(process.env.REACT_APP_HOSTNAME, \"/r/\").concat(url),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"\".concat(process.env.REACT_APP_HOSTNAME, \"/r/\").concat(url)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"menu_page_name\",\n        className: \"designer__control\",\n        required: true,\n        type: \"text\",\n        label: \"Menu page name\",\n        component: AppFormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"title\",\n        paragraph: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Theming\"), React.createElement(Field, {\n        name: \"menu_navigation_color\",\n        className: \"designer__control\",\n        label: \"Menu theme color\",\n        component: AppFormColorPicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"menu_background_color\",\n        className: \"designer__control\",\n        label: \"Menu background color\",\n        component: AppFormColorPicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(AppDropzone, {\n        file: logo,\n        useCrop: true,\n        label: \"Menu restaurant logo\",\n        accept: ['image/*'],\n        crop: logoCrop,\n        onDrop: onDropLogo,\n        onChange: onLogoCrop,\n        previewClass: \"logo-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(AppDropzone, {\n        file: background_picture,\n        useCrop: true,\n        label: \"Menu restaurant background\",\n        accept: ['image/*'],\n        crop: background_pictureCrop,\n        onDrop: onDropBackgroundImage,\n        onChange: onBackgroundCrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: onUpdateCLick,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        disabled: loading || invalid,\n        className: \"designer__update-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Update page designer\"));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return DesignerForm;\n}(PureComponent);\nDesignerForm.propTypes = {};\nDesignerForm.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DesignerForm, \"DesignerForm\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Designer/components/DesignerForm/DesignerForm.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Designer/components/DesignerForm/DesignerForm.js"],"names":["React","PureComponent","Field","Grid","Typography","Button","AppFormTextField","AppFormColorPicker","AppPreloaderSmall","AppDropzone","DesignerForm","props","handleSaveRestaurantLink","loading","background_pictureCrop","logoCrop","onDropBackgroundImage","onDropLogo","onBackgroundCrop","onLogoCrop","onUpdateCLick","invalid","logo","background_picture","url","process","env","REACT_APP_HOSTNAME","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Field } from 'redux-form';\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport {\n  AppFormTextField,\n  AppFormColorPicker,\n  AppPreloaderSmall,\n  AppDropzone,\n} from '../../../../components';\n\nexport class DesignerForm extends PureComponent {\n  render() {\n    const {\n      handleSaveRestaurantLink,\n      loading,\n      background_pictureCrop,\n      logoCrop,\n      onDropBackgroundImage,\n      onDropLogo,\n      onBackgroundCrop,\n      onLogoCrop,\n      onUpdateCLick,\n      invalid,\n      logo,\n      background_picture,\n      url,\n    } = this.props;\n\n    return (\n      <Grid className=\"designer__form\" container direction=\"column\">\n        {loading && <AppPreloaderSmall />}\n        <Typography variant=\"title\" paragraph>\n          Main Settings\n        </Typography>\n        <Field\n          name=\"url\"\n          required\n          type=\"text\"\n          className=\"designer__control\"\n          label=\"Page url address\"\n          component={AppFormTextField}\n          onBlur={handleSaveRestaurantLink}\n        />\n\n        <Typography>Your restaurant link is</Typography>\n        {/* <h4>Your restaurant link is: </h4> */}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={`${process.env.REACT_APP_HOSTNAME}/r/${url}`}>\n          {`${process.env.REACT_APP_HOSTNAME}/r/${url}`}\n        </a>\n        <br />\n        <br />\n        <Field\n          name=\"menu_page_name\"\n          className=\"designer__control\"\n          required\n          type=\"text\"\n          label=\"Menu page name\"\n          component={AppFormTextField}\n        />\n\n        <Typography variant=\"title\" paragraph>\n          Theming\n        </Typography>\n\n        <Field\n          name=\"menu_navigation_color\"\n          className=\"designer__control\"\n          label=\"Menu theme color\"\n          component={AppFormColorPicker}\n        />\n\n        <Field\n          name=\"menu_background_color\"\n          className=\"designer__control\"\n          label=\"Menu background color\"\n          component={AppFormColorPicker}\n        />\n\n        <AppDropzone\n          file={logo}\n          useCrop\n          label=\"Menu restaurant logo\"\n          accept={['image/*']}\n          crop={logoCrop}\n          onDrop={onDropLogo}\n          onChange={onLogoCrop}\n          previewClass=\"logo-preview\"\n        />\n\n        <AppDropzone\n          file={background_picture}\n          useCrop\n          label=\"Menu restaurant background\"\n          accept={['image/*']}\n          crop={background_pictureCrop}\n          onDrop={onDropBackgroundImage}\n          onChange={onBackgroundCrop}\n        />\n\n        <Button\n          onClick={onUpdateCLick}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={loading || invalid}\n          className=\"designer__update-btn\">\n          Update page designer\n        </Button>\n      </Grid>\n    );\n  }\n}\n\nDesignerForm.propTypes = {};\nDesignerForm.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}