{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar coreSliceSelector = function coreSliceSelector(state) {\n  return state.Core;\n};\n\nexport var singInLoadingSelector = function singInLoadingSelector(state) {\n  return coreSliceSelector(state).signInLoading;\n};\nexport var themeSelector = function themeSelector(state) {\n  return coreSliceSelector(state).theme;\n};\nexport var themeColorSelector = function themeColorSelector(state) {\n  return themeSelector(state).palette.primary.main;\n};\nexport var bgColorSelector = function bgColorSelector(state) {\n  return coreSliceSelector(state).bgColor;\n};\nexport var forgotPasswordLoadingSelector = function forgotPasswordLoadingSelector(state) {\n  return coreSliceSelector(state).forgotPasswordLoading;\n};\nexport var resetPasswordLoadingSelector = function resetPasswordLoadingSelector(state) {\n  return coreSliceSelector(state).resetPasswordLoading;\n};\nexport var dictionarySelector = function dictionarySelector(state) {\n  return coreSliceSelector(state).dictionary;\n};\nexport var isAuthSelector = function isAuthSelector(state) {\n  return coreSliceSelector(state).isAuth;\n};\nexport var roleSelector = function roleSelector(state) {\n  return coreSliceSelector(state).role;\n};\nexport var authRestaurantIdSelector = function authRestaurantIdSelector(_ref) {\n  var Core = _ref.Core;\n  return Core.role.restaurant_id;\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(coreSliceSelector, \"coreSliceSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.selectors.js\");\n  reactHotLoader.register(singInLoadingSelector, \"singInLoadingSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.selectors.js\");\n  reactHotLoader.register(themeSelector, \"themeSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.selectors.js\");\n  reactHotLoader.register(themeColorSelector, \"themeColorSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.selectors.js\");\n  reactHotLoader.register(bgColorSelector, \"bgColorSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.selectors.js\");\n  reactHotLoader.register(forgotPasswordLoadingSelector, \"forgotPasswordLoadingSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.selectors.js\");\n  reactHotLoader.register(resetPasswordLoadingSelector, \"resetPasswordLoadingSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.selectors.js\");\n  reactHotLoader.register(dictionarySelector, \"dictionarySelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.selectors.js\");\n  reactHotLoader.register(isAuthSelector, \"isAuthSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.selectors.js\");\n  reactHotLoader.register(roleSelector, \"roleSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.selectors.js\");\n  reactHotLoader.register(authRestaurantIdSelector, \"authRestaurantIdSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.selectors.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.selectors.js"],"names":["coreSliceSelector","state","Core","singInLoadingSelector","signInLoading","themeSelector","theme","themeColorSelector","palette","primary","main","bgColorSelector","bgColor","forgotPasswordLoadingSelector","forgotPasswordLoading","resetPasswordLoadingSelector","resetPasswordLoading","dictionarySelector","dictionary","isAuthSelector","isAuth","roleSelector","role","authRestaurantIdSelector","restaurant_id"],"mappings":";;;;;AAAA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAV;AAAA,CAA/B;;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAF,KAAK;AAAA,SACxCD,iBAAiB,CAACC,KAAD,CAAjB,CAAyBG,aADe;AAAA,CAAnC;AAGP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAJ,KAAK;AAAA,SAAID,iBAAiB,CAACC,KAAD,CAAjB,CAAyBK,KAA7B;AAAA,CAA3B;AAEP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAN,KAAK;AAAA,SACrCI,aAAa,CAACJ,KAAD,CAAb,CAAqBO,OAArB,CAA6BC,OAA7B,CAAqCC,IADA;AAAA,CAAhC;AAEP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAV,KAAK;AAAA,SAAID,iBAAiB,CAACC,KAAD,CAAjB,CAAyBW,OAA7B;AAAA,CAA7B;AAEP,OAAO,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAAZ,KAAK;AAAA,SAChDD,iBAAiB,CAACC,KAAD,CAAjB,CAAyBa,qBADuB;AAAA,CAA3C;AAEP,OAAO,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAAd,KAAK;AAAA,SAC/CD,iBAAiB,CAACC,KAAD,CAAjB,CAAyBe,oBADsB;AAAA,CAA1C;AAEP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAhB,KAAK;AAAA,SAAID,iBAAiB,CAACC,KAAD,CAAjB,CAAyBiB,UAA7B;AAAA,CAAhC;AACP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAlB,KAAK;AAAA,SAAID,iBAAiB,CAACC,KAAD,CAAjB,CAAyBmB,MAA7B;AAAA,CAA5B;AAEP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAApB,KAAK,EAAI;AACnC,SAAOD,iBAAiB,CAACC,KAAD,CAAjB,CAAyBqB,IAAhC;AACD,CAFM;AAIP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B;AAAA,MAAGrB,IAAH,QAAGA,IAAH;AAAA,SAAcA,IAAI,CAACoB,IAAL,CAAUE,aAAxB;AAAA,CAAjC;;;;;;;;;;0BAtBDxB,iB;0BAEOG,qB;0BAGAE,a;0BAEAE,kB;0BAEAI,e;0BAEAE,6B;0BAEAE,4B;0BAEAE,kB;0BACAE,c;0BAEAE,Y;0BAIAE,wB","sourcesContent":["const coreSliceSelector = state => state.Core;\n\nexport const singInLoadingSelector = state =>\n  coreSliceSelector(state).signInLoading;\n\nexport const themeSelector = state => coreSliceSelector(state).theme;\n\nexport const themeColorSelector = state =>\n  themeSelector(state).palette.primary.main;\nexport const bgColorSelector = state => coreSliceSelector(state).bgColor;\n\nexport const forgotPasswordLoadingSelector = state =>\n  coreSliceSelector(state).forgotPasswordLoading;\nexport const resetPasswordLoadingSelector = state =>\n  coreSliceSelector(state).resetPasswordLoading;\nexport const dictionarySelector = state => coreSliceSelector(state).dictionary;\nexport const isAuthSelector = state => coreSliceSelector(state).isAuth;\n\nexport const roleSelector = state => {\n  return coreSliceSelector(state).role;\n};\n\nexport const authRestaurantIdSelector = ({ Core }) => Core.role.restaurant_id;\n"]},"metadata":{},"sourceType":"module"}