{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _dec2,\n    _dec3,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantInfo/components/RestaurantInfoForm/index.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { reduxForm, formValueSelector, isPristine, isInvalid, submit } from 'redux-form';\nimport { Button, withStyles, Grid } from '@material-ui/core';\nimport styles from './styles';\nimport EstimatedTimeField from '../EstimatedTimeField';\nimport { CuisineAutoComplete } from '../../../CuisineAutoComplete';\nimport { ZipCodeAutoComplete } from '../../../ZipCodeAutoComplete';\nimport { restaurantModalValidation } from '../../../RestaurantModal/modules';\nimport { managedRestaurantSelector } from '../../../../modules/restaurants';\nimport { deliveryMethodsOptionsArr, PHONE_MASK, METHODS_WITH_DELIVERY_ARR } from '../../../../constants';\nimport { FormSelect, GridReduxFormField, FullScreenPreloader, FormMaskTextField, FormTextField } from '../../../../components';\nvar RESTAURANTS_SETTINGS_FORM = 'Restaurant settings';\nvar formFieldsSelector = formValueSelector(RESTAURANTS_SETTINGS_FORM);\nvar isInvalidSelector = isInvalid(RESTAURANTS_SETTINGS_FORM);\nvar isPristineSelector = isPristine(RESTAURANTS_SETTINGS_FORM);\nvar VALUES_TO_SUBMIT = ['city', 'state', 'zipcode', 'sales_tax', 'delivery_fee', 'phone_number', 'phone_number2', 'subscription', 'cuisine_type', 'manager_name', 'manager_email', 'delivery_email', 'street_address', 'delivery_method', 'restaurant_name'];\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    valuesToSubmit: formFieldsSelector.apply(void 0, [state].concat(VALUES_TO_SUBMIT)),\n    cuisineName: formFieldsSelector(state, 'cuisine_name'),\n    zipcodeNumbers: formFieldsSelector(state, 'zip_code'),\n    initialValues: managedRestaurantSelector(state),\n    isPristine: isPristineSelector(state),\n    isInvalid: isInvalidSelector(state)\n  };\n};\n\nvar RestaurantInfoForm = (_dec = connect(mapStateToProps, {\n  submit: submit\n}), _dec2 = withStyles(styles), _dec3 = reduxForm({\n  form: RESTAURANTS_SETTINGS_FORM,\n  validate: restaurantModalValidation,\n  // same validation rules\n  enableReinitialize: true\n}), _dec(_class = _dec2(_class = _dec3(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(RestaurantInfoForm, _PureComponent);\n\n  function RestaurantInfoForm() {\n    _classCallCheck(this, RestaurantInfoForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RestaurantInfoForm).apply(this, arguments));\n  }\n\n  _createClass(RestaurantInfoForm, [{\n    key: \"onChangeCuisine\",\n    value: function onChangeCuisine(_ref) {\n      var value = _ref.value,\n          label = _ref.label;\n      var change = this.props.change;\n      change('cuisine_type', value);\n      change('cuisine_name', label);\n    }\n  }, {\n    key: \"onChangeZipCode\",\n    value: function onChangeZipCode(_ref2) {\n      var value = _ref2.value,\n          city = _ref2.city,\n          state = _ref2.state,\n          zipcode = _ref2.zipcode;\n      var change = this.props.change;\n      change('city', city);\n      change('state', state);\n      change('zipcode', value); // zipcode id\n\n      change('zip_code', zipcode); // zipcode numbers\n    }\n  }, {\n    key: \"onSave\",\n    value: function onSave() {\n      var _this$props = this.props,\n          valuesToSubmit = _this$props.valuesToSubmit,\n          onSubmit = _this$props.onSubmit;\n      onSubmit(valuesToSubmit);\n    }\n  }, {\n    key: \"getCommonPropsForAutocompleteField\",\n    value: function getCommonPropsForAutocompleteField() {\n      var classes = this.props.classes;\n      return {\n        autoCompleteWrpClasses: classes.autoCompleteWrpClasses,\n        wrapperClassName: classes.autoselectWrapper,\n        compareKey: 'value',\n        textFieldProps: {\n          className: classes.selectTextField,\n          margin: 'dense',\n          variant: 'outlined',\n          inputProps: {\n            className: classes.selectTextFieldInput\n          }\n        }\n      };\n    }\n  }, {\n    key: \"getCuisineSelectedOption\",\n    value: function getCuisineSelectedOption() {\n      var _this$props2 = this.props,\n          cuisineName = _this$props2.cuisineName,\n          cuisine_type = _this$props2.valuesToSubmit.cuisine_type;\n\n      if (cuisineName && cuisine_type) {\n        return {\n          label: cuisineName,\n          value: cuisine_type\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getZipcodeSelectedOption\",\n    value: function getZipcodeSelectedOption() {\n      var _this$props3 = this.props,\n          zipcodeNumbers = _this$props3.zipcodeNumbers,\n          _this$props3$valuesTo = _this$props3.valuesToSubmit,\n          zipcode = _this$props3$valuesTo.zipcode,\n          city = _this$props3$valuesTo.city,\n          state = _this$props3$valuesTo.state;\n\n      if (zipcodeNumbers && city && state && zipcode) {\n        return {\n          label: \"\".concat(zipcodeNumbers, \" \").concat(city, \" \").concat(state),\n          value: zipcode\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: \"hasDelivery\",\n    value: function hasDelivery() {\n      var _this = this;\n\n      return METHODS_WITH_DELIVERY_ARR.some(function (method) {\n        return method === _this.props.valuesToSubmit.delivery_method;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          _this$props4$valuesTo = _this$props4.valuesToSubmit,\n          cuisine_type = _this$props4$valuesTo.cuisine_type,\n          zipcode = _this$props4$valuesTo.zipcode,\n          openRestaurantsHorsModal = _this$props4.openRestaurantsHorsModal,\n          initialValues = _this$props4.initialValues,\n          isPristine = _this$props4.isPristine,\n          isInvalid = _this$props4.isInvalid,\n          isLoading = _this$props4.isLoading,\n          classes = _this$props4.classes;\n      var restaurant_name = initialValues.restaurant_name,\n          phone_number = initialValues.phone_number,\n          phone_number2 = initialValues.phone_number2,\n          manager_name = initialValues.manager_name,\n          manager_email = initialValues.manager_email,\n          street_address = initialValues.street_address,\n          delivery_email = initialValues.delivery_email,\n          cuisine_name = initialValues.cuisine_name,\n          sales_tax = initialValues.sales_tax,\n          zip_code = initialValues.zip_code,\n          state = initialValues.state,\n          city = initialValues.city;\n      var autocompleteFieldCommonProps = this.getCommonPropsForAutocompleteField();\n      return React.createElement(React.Fragment, null, React.createElement(Grid, {\n        container: true,\n        spacing: 32,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: classes.contactsSectionWrapper,\n        direction: \"column\",\n        spacing: 32,\n        container: true,\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(GridReduxFormField, {\n        caption: restaurant_name,\n        label: \"Restaurant name\",\n        name: \"restaurant_name\",\n        component: FormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(GridReduxFormField, {\n        caption: phone_number,\n        label: \"Phone number\",\n        name: \"phone_number\",\n        mask: PHONE_MASK,\n        component: FormMaskTextField,\n        margin: \"dense\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(GridReduxFormField, {\n        caption: phone_number2,\n        label: \"Additional phone number\",\n        name: \"phone_number2\",\n        mask: PHONE_MASK,\n        component: FormMaskTextField,\n        margin: \"dense\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(GridReduxFormField, {\n        caption: manager_name,\n        label: \"Manager's name\",\n        name: \"manager_name\",\n        component: FormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(GridReduxFormField, {\n        caption: manager_email,\n        label: \"Manager's email\",\n        name: \"manager_email\",\n        component: FormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(GridReduxFormField, {\n        caption: delivery_email,\n        label: \"Delivery email\",\n        name: \"delivery_email\",\n        component: FormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(GridReduxFormField, {\n        caption: cuisine_name,\n        name: \"cuisine\",\n        component: function component() {\n          return React.createElement(CuisineAutoComplete, Object.assign({\n            isClearable: false,\n            value: cuisine_type,\n            selectedOption: _this2.getCuisineSelectedOption(),\n            onChange: _this2.onChangeCuisine\n          }, autocompleteFieldCommonProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(GridReduxFormField, {\n        caption: zip_code,\n        name: \"zipcode\",\n        component: function component() {\n          return React.createElement(ZipCodeAutoComplete, Object.assign({\n            value: zipcode,\n            withPagination: true,\n            selectedOption: _this2.getZipcodeSelectedOption(),\n            onChange: _this2.onChangeZipCode\n          }, autocompleteFieldCommonProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(GridReduxFormField, {\n        caption: state,\n        label: \"State\",\n        name: \"state\",\n        component: FormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(GridReduxFormField, {\n        caption: city,\n        label: \"City\",\n        name: \"city\",\n        component: FormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), React.createElement(GridReduxFormField, {\n        caption: street_address,\n        label: \"Street\",\n        name: \"street_address\",\n        component: FormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(GridReduxFormField, {\n        caption: sales_tax,\n        label: \"Sales tax\",\n        name: \"sales_tax\",\n        component: FormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        className: classes.settingsSectionWrapper,\n        direction: \"column\",\n        spacing: 32,\n        container: true,\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(GridReduxFormField, {\n        caption: \"Delivery service\",\n        name: \"delivery_method\",\n        gridProps: {\n          justify: 'flex-start'\n        },\n        captionClassName: classes.smallCaption,\n        component: FormSelect,\n        options: deliveryMethodsOptionsArr,\n        withoutNone: true,\n        outlined: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), this.hasDelivery() && React.createElement(GridReduxFormField, {\n        caption: \"Delivery fee\",\n        name: \"delivery_fee\",\n        type: \"number\",\n        gridProps: {\n          justify: 'flex-start'\n        },\n        inputProps: {\n          step: 0.01\n        },\n        captionClassName: classes.smallCaption,\n        component: FormTextField,\n        className: classes.deliveryFeeTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(EstimatedTimeField, {\n        label: \"Estimated pickup time\",\n        name: \"estimated_pickup_time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }), React.createElement(EstimatedTimeField, {\n        label: \"Estimated delivery time\",\n        name: \"estimated_delivery_time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.button,\n        onClick: openRestaurantsHorsModal,\n        variant: \"outlined\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Set working hours\")))), React.createElement(Button, {\n        onClick: this.onSave,\n        variant: \"contained\",\n        type: \"sumbit\",\n        color: \"primary\",\n        className: classes.button,\n        disabled: isLoading || isInvalid || isPristine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"Save\"), isLoading && React.createElement(FullScreenPreloader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return RestaurantInfoForm;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onChangeCuisine\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onChangeCuisine\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onChangeZipCode\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onChangeZipCode\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onSave\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onSave\"), _class2.prototype)), _class2)) || _class) || _class) || _class);\nRestaurantInfoForm.propTypes = {\n  openRestaurantsHorsModal: PropTypes.func.isRequired,\n  zipcodeNumbers: PropTypes.string,\n  valuesToSubmit: PropTypes.object,\n  initialValues: PropTypes.object,\n  cuisineName: PropTypes.string,\n  isPristine: PropTypes.bool,\n  isInvalid: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  classes: PropTypes.object\n};\nvar _default = RestaurantInfoForm;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(RESTAURANTS_SETTINGS_FORM, \"RESTAURANTS_SETTINGS_FORM\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantInfo/components/RestaurantInfoForm/index.js\");\n  reactHotLoader.register(formFieldsSelector, \"formFieldsSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantInfo/components/RestaurantInfoForm/index.js\");\n  reactHotLoader.register(isInvalidSelector, \"isInvalidSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantInfo/components/RestaurantInfoForm/index.js\");\n  reactHotLoader.register(isPristineSelector, \"isPristineSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantInfo/components/RestaurantInfoForm/index.js\");\n  reactHotLoader.register(VALUES_TO_SUBMIT, \"VALUES_TO_SUBMIT\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantInfo/components/RestaurantInfoForm/index.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantInfo/components/RestaurantInfoForm/index.js\");\n  reactHotLoader.register(RestaurantInfoForm, \"RestaurantInfoForm\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantInfo/components/RestaurantInfoForm/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantInfo/components/RestaurantInfoForm/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantInfo/components/RestaurantInfoForm/index.js"],"names":["React","PureComponent","PropTypes","connect","autobind","reduxForm","formValueSelector","isPristine","isInvalid","submit","Button","withStyles","Grid","styles","EstimatedTimeField","CuisineAutoComplete","ZipCodeAutoComplete","restaurantModalValidation","managedRestaurantSelector","deliveryMethodsOptionsArr","PHONE_MASK","METHODS_WITH_DELIVERY_ARR","FormSelect","GridReduxFormField","FullScreenPreloader","FormMaskTextField","FormTextField","RESTAURANTS_SETTINGS_FORM","formFieldsSelector","isInvalidSelector","isPristineSelector","VALUES_TO_SUBMIT","mapStateToProps","state","valuesToSubmit","cuisineName","zipcodeNumbers","initialValues","RestaurantInfoForm","form","validate","enableReinitialize","value","label","change","props","city","zipcode","onSubmit","classes","autoCompleteWrpClasses","wrapperClassName","autoselectWrapper","compareKey","textFieldProps","className","selectTextField","margin","variant","inputProps","selectTextFieldInput","cuisine_type","some","method","delivery_method","openRestaurantsHorsModal","isLoading","restaurant_name","phone_number","phone_number2","manager_name","manager_email","street_address","delivery_email","cuisine_name","sales_tax","zip_code","autocompleteFieldCommonProps","getCommonPropsForAutocompleteField","contactsSectionWrapper","getCuisineSelectedOption","onChangeCuisine","getZipcodeSelectedOption","onChangeZipCode","settingsSectionWrapper","justify","smallCaption","hasDelivery","step","deliveryFeeTextField","button","onSave","propTypes","func","isRequired","string","object","bool"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport {\n  reduxForm,\n  formValueSelector,\n  isPristine,\n  isInvalid,\n  submit,\n} from 'redux-form';\n\nimport { Button, withStyles, Grid } from '@material-ui/core';\n\nimport styles from './styles';\nimport EstimatedTimeField from '../EstimatedTimeField';\nimport { CuisineAutoComplete } from '../../../CuisineAutoComplete';\nimport { ZipCodeAutoComplete } from '../../../ZipCodeAutoComplete';\nimport { restaurantModalValidation } from '../../../RestaurantModal/modules';\nimport { managedRestaurantSelector } from '../../../../modules/restaurants';\nimport {\n  deliveryMethodsOptionsArr,\n  PHONE_MASK,\n  METHODS_WITH_DELIVERY_ARR,\n} from '../../../../constants';\n\nimport {\n  FormSelect,\n  GridReduxFormField,\n  FullScreenPreloader,\n  FormMaskTextField,\n  FormTextField,\n} from '../../../../components';\n\nconst RESTAURANTS_SETTINGS_FORM = 'Restaurant settings';\n\nconst formFieldsSelector = formValueSelector(RESTAURANTS_SETTINGS_FORM);\nconst isInvalidSelector = isInvalid(RESTAURANTS_SETTINGS_FORM);\nconst isPristineSelector = isPristine(RESTAURANTS_SETTINGS_FORM);\n\nconst VALUES_TO_SUBMIT = [\n  'city',\n  'state',\n  'zipcode',\n  'sales_tax',\n  'delivery_fee',\n  'phone_number',\n  'phone_number2',\n  'subscription',\n  'cuisine_type',\n  'manager_name',\n  'manager_email',\n  'delivery_email',\n  'street_address',\n  'delivery_method',\n  'restaurant_name',\n];\n\nconst mapStateToProps = state => ({\n  valuesToSubmit: formFieldsSelector(state, ...VALUES_TO_SUBMIT),\n  cuisineName: formFieldsSelector(state, 'cuisine_name'),\n  zipcodeNumbers: formFieldsSelector(state, 'zip_code'),\n  initialValues: managedRestaurantSelector(state),\n  isPristine: isPristineSelector(state),\n  isInvalid: isInvalidSelector(state),\n});\n\n@connect(\n  mapStateToProps,\n  { submit },\n)\n@withStyles(styles)\n@reduxForm({\n  form: RESTAURANTS_SETTINGS_FORM,\n  validate: restaurantModalValidation, // same validation rules\n  enableReinitialize: true,\n})\nclass RestaurantInfoForm extends PureComponent {\n  @autobind\n  onChangeCuisine({ value, label }) {\n    const { change } = this.props;\n    change('cuisine_type', value);\n    change('cuisine_name', label);\n  }\n\n  @autobind\n  onChangeZipCode({ value, city, state, zipcode }) {\n    const { change } = this.props;\n    change('city', city);\n    change('state', state);\n    change('zipcode', value); // zipcode id\n    change('zip_code', zipcode); // zipcode numbers\n  }\n\n  @autobind\n  onSave() {\n    const { valuesToSubmit, onSubmit } = this.props;\n    onSubmit(valuesToSubmit);\n  }\n\n  getCommonPropsForAutocompleteField() {\n    const { classes } = this.props;\n\n    return {\n      autoCompleteWrpClasses: classes.autoCompleteWrpClasses,\n      wrapperClassName: classes.autoselectWrapper,\n      compareKey: 'value',\n      textFieldProps: {\n        className: classes.selectTextField,\n        margin: 'dense',\n        variant: 'outlined',\n        inputProps: {\n          className: classes.selectTextFieldInput,\n        },\n      },\n    };\n  }\n\n  getCuisineSelectedOption() {\n    const {\n      cuisineName,\n      valuesToSubmit: { cuisine_type },\n    } = this.props;\n    if (cuisineName && cuisine_type) {\n      return {\n        label: cuisineName,\n        value: cuisine_type,\n      };\n    }\n\n    return null;\n  }\n\n  getZipcodeSelectedOption() {\n    const {\n      zipcodeNumbers,\n      valuesToSubmit: { zipcode, city, state },\n    } = this.props;\n\n    if (zipcodeNumbers && city && state && zipcode) {\n      return {\n        label: `${zipcodeNumbers} ${city} ${state}`,\n        value: zipcode,\n      };\n    }\n\n    return null;\n  }\n\n  hasDelivery() {\n    return METHODS_WITH_DELIVERY_ARR.some(\n      method => method === this.props.valuesToSubmit.delivery_method,\n    );\n  }\n\n  render() {\n    const {\n      valuesToSubmit: { cuisine_type, zipcode },\n      openRestaurantsHorsModal,\n      initialValues,\n      isPristine,\n      isInvalid,\n      isLoading,\n      classes,\n    } = this.props;\n\n    const {\n      restaurant_name,\n      phone_number,\n      phone_number2,\n      manager_name,\n      manager_email,\n      street_address,\n      delivery_email,\n      cuisine_name,\n      sales_tax,\n      zip_code,\n      state,\n      city,\n    } = initialValues;\n\n    const autocompleteFieldCommonProps = this.getCommonPropsForAutocompleteField();\n\n    return (\n      <>\n        <Grid container spacing={32}>\n          <Grid\n            className={classes.contactsSectionWrapper}\n            direction=\"column\"\n            spacing={32}\n            container\n            item>\n            <GridReduxFormField\n              caption={restaurant_name}\n              label=\"Restaurant name\"\n              name=\"restaurant_name\"\n              component={FormTextField}\n            />\n\n            <GridReduxFormField\n              caption={phone_number}\n              label=\"Phone number\"\n              name=\"phone_number\"\n              mask={PHONE_MASK}\n              component={FormMaskTextField}\n              margin=\"dense\"\n              variant=\"outlined\"\n            />\n\n            <GridReduxFormField\n              caption={phone_number2}\n              label=\"Additional phone number\"\n              name=\"phone_number2\"\n              mask={PHONE_MASK}\n              component={FormMaskTextField}\n              margin=\"dense\"\n              variant=\"outlined\"\n            />\n\n            <GridReduxFormField\n              caption={manager_name}\n              label=\"Manager's name\"\n              name=\"manager_name\"\n              component={FormTextField}\n            />\n\n            <GridReduxFormField\n              caption={manager_email}\n              label=\"Manager's email\"\n              name=\"manager_email\"\n              component={FormTextField}\n            />\n\n            <GridReduxFormField\n              caption={delivery_email}\n              label=\"Delivery email\"\n              name=\"delivery_email\"\n              component={FormTextField}\n            />\n\n            <GridReduxFormField\n              caption={cuisine_name}\n              name=\"cuisine\"\n              component={() => (\n                <CuisineAutoComplete\n                  isClearable={false}\n                  value={cuisine_type}\n                  selectedOption={this.getCuisineSelectedOption()}\n                  onChange={this.onChangeCuisine}\n                  {...autocompleteFieldCommonProps}\n                />\n              )}\n            />\n\n            <GridReduxFormField\n              caption={zip_code}\n              name=\"zipcode\"\n              component={() => (\n                <ZipCodeAutoComplete\n                  value={zipcode}\n                  withPagination\n                  selectedOption={this.getZipcodeSelectedOption()}\n                  onChange={this.onChangeZipCode}\n                  {...autocompleteFieldCommonProps}\n                />\n              )}\n            />\n\n            <GridReduxFormField\n              caption={state}\n              label=\"State\"\n              name=\"state\"\n              component={FormTextField}\n            />\n\n            <GridReduxFormField\n              caption={city}\n              label=\"City\"\n              name=\"city\"\n              component={FormTextField}\n            />\n\n            <GridReduxFormField\n              caption={street_address}\n              label=\"Street\"\n              name=\"street_address\"\n              component={FormTextField}\n            />\n\n            <GridReduxFormField\n              caption={sales_tax}\n              label=\"Sales tax\"\n              name=\"sales_tax\"\n              component={FormTextField}\n            />\n          </Grid>\n\n          <Grid\n            className={classes.settingsSectionWrapper}\n            direction=\"column\"\n            spacing={32}\n            container\n            item>\n            <GridReduxFormField\n              caption=\"Delivery service\"\n              name=\"delivery_method\"\n              gridProps={{\n                justify: 'flex-start',\n              }}\n              captionClassName={classes.smallCaption}\n              component={FormSelect}\n              options={deliveryMethodsOptionsArr}\n              withoutNone\n              outlined\n            />\n\n            {this.hasDelivery() && (\n              <GridReduxFormField\n                caption=\"Delivery fee\"\n                name=\"delivery_fee\"\n                type=\"number\"\n                gridProps={{\n                  justify: 'flex-start',\n                }}\n                inputProps={{\n                  step: 0.01,\n                }}\n                captionClassName={classes.smallCaption}\n                component={FormTextField}\n                className={classes.deliveryFeeTextField}\n              />\n            )}\n\n            <EstimatedTimeField\n              label=\"Estimated pickup time\"\n              name=\"estimated_pickup_time\"\n            />\n\n            <EstimatedTimeField\n              label=\"Estimated delivery time\"\n              name=\"estimated_delivery_time\"\n            />\n\n            <Grid item>\n              <Button\n                className={classes.button}\n                onClick={openRestaurantsHorsModal}\n                variant=\"outlined\"\n                color=\"primary\">\n                Set working hours\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Button\n          onClick={this.onSave}\n          variant=\"contained\"\n          type=\"sumbit\"\n          color=\"primary\"\n          className={classes.button}\n          disabled={isLoading || isInvalid || isPristine}>\n          Save\n        </Button>\n\n        {isLoading && <FullScreenPreloader />}\n      </>\n    );\n  }\n}\n\nRestaurantInfoForm.propTypes = {\n  openRestaurantsHorsModal: PropTypes.func.isRequired,\n  zipcodeNumbers: PropTypes.string,\n  valuesToSubmit: PropTypes.object,\n  initialValues: PropTypes.object,\n  cuisineName: PropTypes.string,\n  isPristine: PropTypes.bool,\n  isInvalid: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  classes: PropTypes.object,\n};\n\nexport default RestaurantInfoForm;\n"]},"metadata":{},"sourceType":"module"}