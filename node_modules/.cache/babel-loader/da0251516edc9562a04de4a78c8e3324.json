{"ast":null,"code":"import _toConsumableArray from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { GET_RESTAURANTS_LIST_REQUEST, GET_RESTAURANTS_LIST_SUCCESS, GET_RESTAURANTS_LIST_ERROR, CREATE_RESTAURANT_SUCCESS, GET_RESTAURANT_BY_ID_REQUEST, GET_RESTAURANT_BY_ID_SUCCESS, GET_RESTAURANT_BY_ID_ERROR, UPDATE_RESTAURANT_REQUEST, UPDATE_RESTAURANT_SUCCESS, UPDATE_RESTAURANT_ERROR, DELETE_RESTAURANT_REQUEST, DELETE_RESTAURANT_SUCCESS, DELETE_RESTAURANT_ERROR, BLOCK_RESTAURANT_REQUEST, BLOCK_RESTAURANT_SUCCESS, BLOCK_RESTAURANT_ERROR, CLEANUP_RESTAURANTS_PAGE, RESTAURANTS_LIST_FILTERS_CHANGED, RESTAURANTS_LIST_FILTERS_CLEAR, RESTAURANTS__CLEAR_MANAGED_RESTAURANT, RESTAURANTS__SET_MANAGED_RESTAURANT, GET_RESTAURANT_FOR_CLIENT_REQUEST, GET_RESTAURANT_FOR_CLIENT_SUCCESS, GET_RESTAURANT_FOR_CLIENT_ERROR } from './restaurants.types';\nexport var getInitialFilters = function getInitialFilters() {\n  return {\n    search: '',\n    limit: 10,\n    sort_field: 'name',\n    sort_order: 'desc',\n    cuisine: '',\n    revenue: '',\n    subscription: '',\n    deliveryMethod: '',\n    status: '',\n    agent_name: '',\n    onboardingPeriodStart: null,\n    onboardingPeriodEnd: null,\n    page: 1\n  };\n};\n\nvar getInitialState = function getInitialState() {\n  return {\n    loading: false,\n    error: null,\n    filters: getInitialFilters(),\n    data: [],\n    count: 0,\n    managedRestaurant: {}\n  };\n};\n\nexport function restaurantsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getInitialState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RESTAURANTS__SET_MANAGED_RESTAURANT:\n      {\n        return _objectSpread({}, state, {\n          managedRestaurant: action.payload\n        });\n      }\n\n    case RESTAURANTS__CLEAR_MANAGED_RESTAURANT:\n      {\n        return _objectSpread({}, state, {\n          managedRestaurant: {}\n        });\n      }\n\n    case GET_RESTAURANT_FOR_CLIENT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loading: false,\n          managedRestaurant: action.payload\n        });\n      }\n\n    case GET_RESTAURANT_BY_ID_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loading: false,\n          managedRestaurant: action.response\n        });\n      }\n\n    case GET_RESTAURANT_FOR_CLIENT_REQUEST:\n    case GET_RESTAURANTS_LIST_REQUEST:\n    case DELETE_RESTAURANT_REQUEST:\n    case BLOCK_RESTAURANT_REQUEST:\n    case UPDATE_RESTAURANT_REQUEST:\n    case GET_RESTAURANT_BY_ID_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_RESTAURANTS_LIST_SUCCESS:\n    case BLOCK_RESTAURANT_SUCCESS:\n    case UPDATE_RESTAURANT_SUCCESS:\n      return _objectSpread({}, state, {\n        count: Number(action.response.count) || 0,\n        data: action.response.data || [],\n        managedRestaurant: action.response,\n        loading: false\n      });\n\n    case GET_RESTAURANTS_LIST_ERROR:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.error\n      });\n\n    case CREATE_RESTAURANT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          count: state.count + 1,\n          loading: false,\n          data: _toConsumableArray(state.data).concat([action.response])\n        });\n      }\n\n    case DELETE_RESTAURANT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          count: state.count - 1,\n          loading: false,\n          data: state.data.filter(function (_ref) {\n            var id = _ref.id;\n            return id !== action.body.id;\n          })\n        });\n      }\n\n    case RESTAURANTS_LIST_FILTERS_CLEAR:\n      {\n        return _objectSpread({}, state, {\n          filters: getInitialFilters()\n        });\n      }\n\n    case GET_RESTAURANT_FOR_CLIENT_ERROR:\n    case DELETE_RESTAURANT_ERROR:\n    case UPDATE_RESTAURANT_ERROR:\n    case BLOCK_RESTAURANT_ERROR:\n      {\n        return _objectSpread({}, state, {\n          loading: false\n        });\n      }\n\n    case RESTAURANTS_LIST_FILTERS_CHANGED:\n      return _objectSpread({}, state, {\n        filters: _objectSpread({}, state.filters, action.filters)\n      });\n\n    case GET_RESTAURANT_BY_ID_ERROR:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.error.status\n      });\n\n    case CLEANUP_RESTAURANTS_PAGE:\n      return getInitialState();\n\n    default:\n      return state;\n  }\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(getInitialFilters, \"getInitialFilters\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/restaurants/restaurants.reducer.js\");\n  reactHotLoader.register(getInitialState, \"getInitialState\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/restaurants/restaurants.reducer.js\");\n  reactHotLoader.register(restaurantsReducer, \"restaurantsReducer\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/restaurants/restaurants.reducer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/restaurants/restaurants.reducer.js"],"names":["GET_RESTAURANTS_LIST_REQUEST","GET_RESTAURANTS_LIST_SUCCESS","GET_RESTAURANTS_LIST_ERROR","CREATE_RESTAURANT_SUCCESS","GET_RESTAURANT_BY_ID_REQUEST","GET_RESTAURANT_BY_ID_SUCCESS","GET_RESTAURANT_BY_ID_ERROR","UPDATE_RESTAURANT_REQUEST","UPDATE_RESTAURANT_SUCCESS","UPDATE_RESTAURANT_ERROR","DELETE_RESTAURANT_REQUEST","DELETE_RESTAURANT_SUCCESS","DELETE_RESTAURANT_ERROR","BLOCK_RESTAURANT_REQUEST","BLOCK_RESTAURANT_SUCCESS","BLOCK_RESTAURANT_ERROR","CLEANUP_RESTAURANTS_PAGE","RESTAURANTS_LIST_FILTERS_CHANGED","RESTAURANTS_LIST_FILTERS_CLEAR","RESTAURANTS__CLEAR_MANAGED_RESTAURANT","RESTAURANTS__SET_MANAGED_RESTAURANT","GET_RESTAURANT_FOR_CLIENT_REQUEST","GET_RESTAURANT_FOR_CLIENT_SUCCESS","GET_RESTAURANT_FOR_CLIENT_ERROR","getInitialFilters","search","limit","sort_field","sort_order","cuisine","revenue","subscription","deliveryMethod","status","agent_name","onboardingPeriodStart","onboardingPeriodEnd","page","getInitialState","loading","error","filters","data","count","managedRestaurant","restaurantsReducer","state","action","type","payload","response","Number","filter","id","body"],"mappings":"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","sourcesContent":["import {\n  GET_RESTAURANTS_LIST_REQUEST,\n  GET_RESTAURANTS_LIST_SUCCESS,\n  GET_RESTAURANTS_LIST_ERROR,\n  CREATE_RESTAURANT_SUCCESS,\n  GET_RESTAURANT_BY_ID_REQUEST,\n  GET_RESTAURANT_BY_ID_SUCCESS,\n  GET_RESTAURANT_BY_ID_ERROR,\n  UPDATE_RESTAURANT_REQUEST,\n  UPDATE_RESTAURANT_SUCCESS,\n  UPDATE_RESTAURANT_ERROR,\n  DELETE_RESTAURANT_REQUEST,\n  DELETE_RESTAURANT_SUCCESS,\n  DELETE_RESTAURANT_ERROR,\n  BLOCK_RESTAURANT_REQUEST,\n  BLOCK_RESTAURANT_SUCCESS,\n  BLOCK_RESTAURANT_ERROR,\n  CLEANUP_RESTAURANTS_PAGE,\n  RESTAURANTS_LIST_FILTERS_CHANGED,\n  RESTAURANTS_LIST_FILTERS_CLEAR,\n  RESTAURANTS__CLEAR_MANAGED_RESTAURANT,\n  RESTAURANTS__SET_MANAGED_RESTAURANT,\n  GET_RESTAURANT_FOR_CLIENT_REQUEST,\n  GET_RESTAURANT_FOR_CLIENT_SUCCESS,\n  GET_RESTAURANT_FOR_CLIENT_ERROR,\n} from './restaurants.types';\n\nexport const getInitialFilters = () => ({\n  search: '',\n  limit: 10,\n  sort_field: 'name',\n  sort_order: 'desc',\n  cuisine: '',\n  revenue: '',\n  subscription: '',\n  deliveryMethod: '',\n  status: '',\n  agent_name: '',\n  onboardingPeriodStart: null,\n  onboardingPeriodEnd: null,\n  page: 1,\n});\n\nconst getInitialState = () => ({\n  loading: false,\n  error: null,\n  filters: getInitialFilters(),\n  data: [],\n  count: 0,\n  managedRestaurant: {},\n});\n\nexport function restaurantsReducer(state = getInitialState(), action) {\n  switch (action.type) {\n    case RESTAURANTS__SET_MANAGED_RESTAURANT: {\n      return {\n        ...state,\n        managedRestaurant: action.payload,\n      };\n    }\n\n    case RESTAURANTS__CLEAR_MANAGED_RESTAURANT: {\n      return {\n        ...state,\n        managedRestaurant: {},\n      };\n    }\n\n    case GET_RESTAURANT_FOR_CLIENT_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        managedRestaurant: action.payload,\n      };\n    }\n\n    case GET_RESTAURANT_BY_ID_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        managedRestaurant: action.response,\n      };\n    }\n\n    case GET_RESTAURANT_FOR_CLIENT_REQUEST:\n    case GET_RESTAURANTS_LIST_REQUEST:\n    case DELETE_RESTAURANT_REQUEST:\n    case BLOCK_RESTAURANT_REQUEST:\n    case UPDATE_RESTAURANT_REQUEST:\n    case GET_RESTAURANT_BY_ID_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case GET_RESTAURANTS_LIST_SUCCESS:\n    case BLOCK_RESTAURANT_SUCCESS:\n    case UPDATE_RESTAURANT_SUCCESS:\n      return {\n        ...state,\n        count: Number(action.response.count) || 0,\n        data: action.response.data || [],\n        managedRestaurant: action.response,\n        loading: false,\n      };\n\n    case GET_RESTAURANTS_LIST_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n\n    case CREATE_RESTAURANT_SUCCESS: {\n      return {\n        ...state,\n        count: state.count + 1,\n        loading: false,\n        data: [...state.data, action.response],\n      };\n    }\n\n    case DELETE_RESTAURANT_SUCCESS: {\n      return {\n        ...state,\n        count: state.count - 1,\n        loading: false,\n        data: state.data.filter(({ id }) => id !== action.body.id),\n      };\n    }\n\n    case RESTAURANTS_LIST_FILTERS_CLEAR: {\n      return {\n        ...state,\n        filters: getInitialFilters(),\n      };\n    }\n\n    case GET_RESTAURANT_FOR_CLIENT_ERROR:\n    case DELETE_RESTAURANT_ERROR:\n    case UPDATE_RESTAURANT_ERROR:\n    case BLOCK_RESTAURANT_ERROR: {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    case RESTAURANTS_LIST_FILTERS_CHANGED:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          ...action.filters,\n        },\n      };\n    case GET_RESTAURANT_BY_ID_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error.status,\n      };\n    case CLEANUP_RESTAURANTS_PAGE:\n      return getInitialState();\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}