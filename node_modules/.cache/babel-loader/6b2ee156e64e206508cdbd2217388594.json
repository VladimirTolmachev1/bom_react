{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/FormMaskTextField/index.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { TextField } from '@material-ui/core';\n\nvar TextMaskCustom = function TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, Object.assign({}, other, {\n    ref: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nexport var FormMaskTextField = function FormMaskTextField(_ref) {\n  var input = _ref.input,\n      onChangeInterseptor = _ref.onChangeInterseptor,\n      mask = _ref.mask,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      rest = _objectWithoutProperties(_ref, [\"input\", \"onChangeInterseptor\", \"mask\", \"meta\"]);\n\n  var hasError = Boolean(touched && error);\n  return React.createElement(TextField, Object.assign({\n    type: 'text',\n    variant: 'outlined',\n    InputProps: {\n      inputComponent: TextMaskCustom,\n      inputProps: {\n        mask: mask\n      }\n    }\n  }, input, {\n    onChange: function onChange() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var value = args[0].target.value;\n      input.onChange.apply(input, args);\n      onChangeInterseptor && onChangeInterseptor(value);\n    },\n    value: input.value || ' '\n  }, rest, {\n    error: hasError,\n    helperText: hasError && error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\nFormMaskTextField.propTypes = {\n  mask: PropTypes.array.isRequired,\n  onChangeInterseptor: PropTypes.func,\n  input: PropTypes.object.isRequired\n};\nvar _default = FormMaskTextField;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TextMaskCustom, \"TextMaskCustom\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/FormMaskTextField/index.js\");\n  reactHotLoader.register(FormMaskTextField, \"FormMaskTextField\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/FormMaskTextField/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/FormMaskTextField/index.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/FormMaskTextField/index.js"],"names":["React","PropTypes","MaskedInput","TextField","TextMaskCustom","props","inputRef","other","FormMaskTextField","input","onChangeInterseptor","mask","meta","touched","error","rest","hasError","Boolean","inputComponent","inputProps","args","value","target","onChange","propTypes","array","isRequired","func","object"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAAA,MACrBC,QADqB,GACCD,KADD,CACrBC,QADqB;AAAA,MACRC,KADQ,4BACCF,KADD;;AAG5B,SACI,oBAAC,WAAD,oBACSE,KADT;AAEI,IAAA,GAAG,EAAGD,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH,CATD;;AAWA,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,OAS3B;AAAA,MARFC,KAQE,QARFA,KAQE;AAAA,MAPFC,mBAOE,QAPFA,mBAOE;AAAA,MANFC,IAME,QANFA,IAME;AAAA,uBALFC,IAKE;AAAA,MAJEC,OAIF,aAJEA,OAIF;AAAA,MAHEC,KAGF,aAHEA,KAGF;AAAA,MADCC,IACD;;AACF,MAAMC,QAAQ,GAAIC,OAAO,CAACJ,OAAO,IAAIC,KAAZ,CAAzB;AAEA,SACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAG,MADX;AAEI,IAAA,OAAO,EAAG,UAFd;AAII,IAAA,UAAU,EAAE;AACVI,MAAAA,cAAc,EAAEd,cADN;AAEVe,MAAAA,UAAU,EAAE;AACRR,QAAAA,IAAI,EAAJA;AADQ;AAFF;AAJhB,KAWSF,KAXT;AAYI,IAAA,QAAQ,EAAE,oBAAa;AAAA,wCAATW,IAAS;AAATA,QAAAA,IAAS;AAAA;;AACnB,UAAMC,KAAK,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,MAAR,CAAeD,KAA7B;AACAZ,MAAAA,KAAK,CAACc,QAAN,OAAAd,KAAK,EAAaW,IAAb,CAAL;AACAV,MAAAA,mBAAmB,IAAIA,mBAAmB,CAACW,KAAD,CAA1C;AACH,KAhBL;AAiBI,IAAA,KAAK,EAAGZ,KAAK,CAACY,KAAN,IAAe;AAjB3B,KAkBQN,IAlBR;AAoBI,IAAA,KAAK,EAAGC,QApBZ;AAqBI,IAAA,UAAU,EAAGA,QAAQ,IAAIF,KArB7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAyBH,CArCM;AAuCPN,iBAAiB,CAACgB,SAAlB,GAA8B;AAC1Bb,EAAAA,IAAI,EAAEV,SAAS,CAACwB,KAAV,CAAgBC,UADI;AAE1BhB,EAAAA,mBAAmB,EAAET,SAAS,CAAC0B,IAFL;AAG1BlB,EAAAA,KAAK,EAAER,SAAS,CAAC2B,MAAV,CAAiBF;AAHE,CAA9B;eAMelB,iB;AAAf;;;;;;;;;;;;0BAxDMJ,c;0BAWOI,iB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\n\nimport { TextField } from '@material-ui/core';\n\nconst TextMaskCustom = props => {\n    const {inputRef, ...other} = props;\n\n    return (\n        <MaskedInput\n            { ...other }\n            ref={ inputRef }\n        />\n    );\n};\n\nexport const FormMaskTextField = ({\n    input,\n    onChangeInterseptor,\n    mask,\n    meta: {\n        touched,\n        error\n    },\n    ...rest \n}) => {\n    const hasError =  Boolean(touched && error);\n    \n    return (\n        <TextField\n            type={ 'text' }\n            variant={ 'outlined' }\n\n            InputProps={{\n              inputComponent: TextMaskCustom ,\n              inputProps: {\n                  mask\n              }\n            }}\n            \n            { ...input }\n            onChange={(...args) => {\n                const value = args[0].target.value;\n                input.onChange(...args);\n                onChangeInterseptor && onChangeInterseptor(value);\n            }}\n            value={ input.value || ' ' }\n            {...rest}\n\n            error={ hasError }\n            helperText={ hasError && error }\n        />\n    );\n};\n\nFormMaskTextField.propTypes = {\n    mask: PropTypes.array.isRequired,\n    onChangeInterseptor: PropTypes.func,\n    input: PropTypes.object.isRequired,\n};\n\nexport default FormMaskTextField;\n"]},"metadata":{},"sourceType":"module"}