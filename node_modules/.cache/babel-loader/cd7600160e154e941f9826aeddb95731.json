{"ast":null,"code":"import _defineProperty from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { API_REQUESTS_ABORT } from '../../../modules/core';\nimport { CALL_API } from '../../../store/middleware/api';\nexport var resource = '/dish/zipcode';\nexport var ZIPCODE_LIST_AUTOCOMPLETE_REQUEST = \"\".concat(resource, \"/request\");\nexport var ZIPCODE_LIST_AUTOCOMPLETE_SUCCESS = \"\".concat(resource, \"/success\");\nexport var ZIPCODE_LIST_AUTOCOMPLETE_ERROR = \"\".concat(resource, \"/error\");\nexport var ZIPCODE_LIST_AUTOCOMPLETE_FILTERS_CHANGED = \"\".concat(resource, \"/filters/changed\");\nexport var ZIPCODE_LIST_AUTOCOMPLETE_SET_PAGE = \"\".concat(resource, \"/filters/set-page\");\nexport var ZIPCODE_LIST_AUTOCOMPLETE_CLEAR = \"\".concat(resource, \"/clear\");\n\nvar getInitialState = function getInitialState() {\n  return {\n    loading: false,\n    error: null,\n    filters: {\n      search: '',\n      page: 1,\n      limit: 10\n    },\n    data: [],\n    count: 0\n  };\n};\n\nexport var reducer = _defineProperty({\n  name: resource\n}, resource, function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getInitialState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ZIPCODE_LIST_AUTOCOMPLETE_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case ZIPCODE_LIST_AUTOCOMPLETE_SUCCESS:\n      return _objectSpread({}, state, {\n        count: Number(action.response.count),\n        data: state.data.concat(action.response.data),\n        loading: false\n      });\n\n    case ZIPCODE_LIST_AUTOCOMPLETE_ERROR:\n      return _objectSpread({}, state, {\n        error: action.error,\n        loading: false\n      });\n\n    case ZIPCODE_LIST_AUTOCOMPLETE_CLEAR:\n      {\n        return getInitialState();\n      }\n\n    case ZIPCODE_LIST_AUTOCOMPLETE_SET_PAGE:\n      return _objectSpread({}, state, {\n        page: action.page\n      });\n\n    case ZIPCODE_LIST_AUTOCOMPLETE_FILTERS_CHANGED:\n      return _objectSpread({}, state, {\n        data: [],\n        filters: _objectSpread({}, state.filters, action.filters)\n      });\n\n    default:\n      return state;\n  }\n});\nexport function getZipcodesForAutocomplete(body) {\n  return {\n    type: CALL_API,\n    request: _objectSpread({\n      method: 'GET',\n      endpoint: '/zipcode',\n      types: [ZIPCODE_LIST_AUTOCOMPLETE_REQUEST, ZIPCODE_LIST_AUTOCOMPLETE_SUCCESS, ZIPCODE_LIST_AUTOCOMPLETE_ERROR]\n    }, body)\n  };\n}\nexport function updateFilters(filters) {\n  return {\n    type: ZIPCODE_LIST_AUTOCOMPLETE_FILTERS_CHANGED,\n    filters: filters\n  };\n}\nexport function abortPageRequests() {\n  return {\n    type: API_REQUESTS_ABORT,\n    requestTypes: [ZIPCODE_LIST_AUTOCOMPLETE_REQUEST]\n  };\n}\nexport function setPage(page) {\n  return {\n    type: ZIPCODE_LIST_AUTOCOMPLETE_SET_PAGE,\n    page: page\n  };\n}\nexport function clearAutocomplete() {\n  return {\n    type: ZIPCODE_LIST_AUTOCOMPLETE_CLEAR\n  };\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(resource, \"resource\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n  reactHotLoader.register(ZIPCODE_LIST_AUTOCOMPLETE_REQUEST, \"ZIPCODE_LIST_AUTOCOMPLETE_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n  reactHotLoader.register(ZIPCODE_LIST_AUTOCOMPLETE_SUCCESS, \"ZIPCODE_LIST_AUTOCOMPLETE_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n  reactHotLoader.register(ZIPCODE_LIST_AUTOCOMPLETE_ERROR, \"ZIPCODE_LIST_AUTOCOMPLETE_ERROR\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n  reactHotLoader.register(ZIPCODE_LIST_AUTOCOMPLETE_FILTERS_CHANGED, \"ZIPCODE_LIST_AUTOCOMPLETE_FILTERS_CHANGED\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n  reactHotLoader.register(ZIPCODE_LIST_AUTOCOMPLETE_SET_PAGE, \"ZIPCODE_LIST_AUTOCOMPLETE_SET_PAGE\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n  reactHotLoader.register(ZIPCODE_LIST_AUTOCOMPLETE_CLEAR, \"ZIPCODE_LIST_AUTOCOMPLETE_CLEAR\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n  reactHotLoader.register(getInitialState, \"getInitialState\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n  reactHotLoader.register(reducer, \"reducer\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n  reactHotLoader.register(getZipcodesForAutocomplete, \"getZipcodesForAutocomplete\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n  reactHotLoader.register(updateFilters, \"updateFilters\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n  reactHotLoader.register(abortPageRequests, \"abortPageRequests\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n  reactHotLoader.register(setPage, \"setPage\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n  reactHotLoader.register(clearAutocomplete, \"clearAutocomplete\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ZipCodeAutoComplete/modules/zip-code-autocomplete.modules.js"],"names":["API_REQUESTS_ABORT","CALL_API","resource","ZIPCODE_LIST_AUTOCOMPLETE_REQUEST","ZIPCODE_LIST_AUTOCOMPLETE_SUCCESS","ZIPCODE_LIST_AUTOCOMPLETE_ERROR","ZIPCODE_LIST_AUTOCOMPLETE_FILTERS_CHANGED","ZIPCODE_LIST_AUTOCOMPLETE_SET_PAGE","ZIPCODE_LIST_AUTOCOMPLETE_CLEAR","getInitialState","loading","error","filters","search","page","limit","data","count","reducer","name","state","action","type","Number","response","concat","getZipcodesForAutocomplete","body","request","method","endpoint","types","updateFilters","abortPageRequests","requestTypes","setPage","clearAutocomplete"],"mappings":"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","sourcesContent":["import { API_REQUESTS_ABORT } from '../../../modules/core';\nimport { CALL_API } from '../../../store/middleware/api';\n\nexport const resource = '/dish/zipcode';\n\nexport const ZIPCODE_LIST_AUTOCOMPLETE_REQUEST = `${resource}/request`;\nexport const ZIPCODE_LIST_AUTOCOMPLETE_SUCCESS = `${resource}/success`;\nexport const ZIPCODE_LIST_AUTOCOMPLETE_ERROR = `${resource}/error`;\nexport const ZIPCODE_LIST_AUTOCOMPLETE_FILTERS_CHANGED = `${resource}/filters/changed`;\nexport const ZIPCODE_LIST_AUTOCOMPLETE_SET_PAGE = `${resource}/filters/set-page`;\nexport const ZIPCODE_LIST_AUTOCOMPLETE_CLEAR = `${resource}/clear`;\n\nconst getInitialState = () => ({\n  loading: false,\n  error: null,\n  filters: {\n    search: '',\n    page: 1,\n    limit: 10,\n  },\n  data: [],\n  count: 0,\n});\n\nexport const reducer = {\n  name: resource,\n  [resource](state = getInitialState(), action) {\n    switch (action.type) {\n      case ZIPCODE_LIST_AUTOCOMPLETE_REQUEST:\n        return {\n          ...state,\n          loading: true,\n        };\n      case ZIPCODE_LIST_AUTOCOMPLETE_SUCCESS:\n        return {\n          ...state,\n          count: Number(action.response.count),\n          data: state.data.concat(action.response.data),\n          loading: false,\n        };\n      case ZIPCODE_LIST_AUTOCOMPLETE_ERROR:\n        return {\n          ...state,\n          error: action.error,\n          loading: false,\n        };\n      case ZIPCODE_LIST_AUTOCOMPLETE_CLEAR: {\n        return getInitialState();\n      }\n      case ZIPCODE_LIST_AUTOCOMPLETE_SET_PAGE:\n        return {\n          ...state,\n          page: action.page,\n        };\n      case ZIPCODE_LIST_AUTOCOMPLETE_FILTERS_CHANGED:\n        return {\n          ...state,\n          data: [],\n          filters: {\n            ...state.filters,\n            ...action.filters,\n          },\n        };\n      default:\n        return state;\n    }\n  },\n};\n\nexport function getZipcodesForAutocomplete(body) {\n  return {\n    type: CALL_API,\n    request: {\n      method: 'GET',\n      endpoint: '/zipcode',\n      types: [\n        ZIPCODE_LIST_AUTOCOMPLETE_REQUEST,\n        ZIPCODE_LIST_AUTOCOMPLETE_SUCCESS,\n        ZIPCODE_LIST_AUTOCOMPLETE_ERROR,\n      ],\n      ...body,\n    },\n  };\n}\n\nexport function updateFilters(filters) {\n  return {\n    type: ZIPCODE_LIST_AUTOCOMPLETE_FILTERS_CHANGED,\n    filters,\n  };\n}\n\nexport function abortPageRequests() {\n  return {\n    type: API_REQUESTS_ABORT,\n    requestTypes: [ZIPCODE_LIST_AUTOCOMPLETE_REQUEST],\n  };\n}\n\nexport function setPage(page) {\n  return {\n    type: ZIPCODE_LIST_AUTOCOMPLETE_SET_PAGE,\n    page,\n  };\n}\n\nexport function clearAutocomplete() {\n  return {\n    type: ZIPCODE_LIST_AUTOCOMPLETE_CLEAR,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}