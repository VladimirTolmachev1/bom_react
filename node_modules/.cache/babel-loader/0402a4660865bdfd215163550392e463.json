{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/StripeCheckoutToggler/index.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Button, withStyles } from '@material-ui/core';\nimport styles from './styles';\nvar CHECKOUT_DESCRIPTION = 'Pay ';\nvar CHECKOUT_TITLE = 'Pay with stripe';\n\nvar StripeCheckoutToggler = function StripeCheckoutToggler(_ref) {\n  var title = _ref.title,\n      onToken = _ref.onToken,\n      children = _ref.children,\n      stripeKey = _ref.stripeKey,\n      priceInCoins = _ref.priceInCoins,\n      billingAddress = _ref.billingAddress,\n      togglerButtonProps = _ref.togglerButtonProps,\n      submitCheckoutText = _ref.submitCheckoutText,\n      description = _ref.description,\n      classes = _ref.classes,\n      rest = _objectWithoutProperties(_ref, [\"title\", \"onToken\", \"children\", \"stripeKey\", \"priceInCoins\", \"billingAddress\", \"togglerButtonProps\", \"submitCheckoutText\", \"description\", \"classes\"]);\n\n  return React.createElement(Button, Object.assign({\n    color: \"primary\",\n    variant: \"contained\"\n  }, togglerButtonProps, {\n    className: \"\".concat(classes.checkoutBtn, \" \").concat(togglerButtonProps.className || ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(StripeCheckout, Object.assign({\n    name: title // Modal Header\n    ,\n    description: description,\n    panelLabel: submitCheckoutText,\n    amount: priceInCoins // 999 - it's $9.99 in cents\n    ,\n    ComponentClass: \"div\" // don't tuch it! Look in './styles.js'\n    ,\n    token: onToken,\n    stripeKey: stripeKey,\n    billingAddress: billingAddress\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), children));\n};\n\nStripeCheckoutToggler.defaultProps = {\n  billingAddress: false,\n  togglerButtonProps: {},\n  description: CHECKOUT_DESCRIPTION,\n  title: CHECKOUT_TITLE\n};\nStripeCheckoutToggler.propTypes = {\n  title: PropTypes.string,\n  classes: PropTypes.object,\n  description: PropTypes.string,\n  billingAddress: PropTypes.bool,\n  togglerButtonProps: PropTypes.object,\n  submitCheckoutText: PropTypes.string,\n  onToken: PropTypes.func.isRequired,\n  stripeKey: PropTypes.string.isRequired,\n  priceInCoins: PropTypes.number.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)])\n};\n\nvar _default = withStyles(styles)(StripeCheckoutToggler);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CHECKOUT_DESCRIPTION, \"CHECKOUT_DESCRIPTION\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/StripeCheckoutToggler/index.js\");\n  reactHotLoader.register(CHECKOUT_TITLE, \"CHECKOUT_TITLE\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/StripeCheckoutToggler/index.js\");\n  reactHotLoader.register(StripeCheckoutToggler, \"StripeCheckoutToggler\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/StripeCheckoutToggler/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/StripeCheckoutToggler/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/StripeCheckoutToggler/index.js"],"names":["React","PropTypes","StripeCheckout","Button","withStyles","styles","CHECKOUT_DESCRIPTION","CHECKOUT_TITLE","StripeCheckoutToggler","title","onToken","children","stripeKey","priceInCoins","billingAddress","togglerButtonProps","submitCheckoutText","description","classes","rest","checkoutBtn","className","defaultProps","propTypes","string","object","bool","func","isRequired","number","oneOfType","node","arrayOf"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,oBAAoB,GAAG,MAA7B;AACA,IAAMC,cAAc,GAAG,iBAAvB;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,MAC5BC,KAD4B,QAC5BA,KAD4B;AAAA,MAE5BC,OAF4B,QAE5BA,OAF4B;AAAA,MAG5BC,QAH4B,QAG5BA,QAH4B;AAAA,MAI5BC,SAJ4B,QAI5BA,SAJ4B;AAAA,MAK5BC,YAL4B,QAK5BA,YAL4B;AAAA,MAM5BC,cAN4B,QAM5BA,cAN4B;AAAA,MAO5BC,kBAP4B,QAO5BA,kBAP4B;AAAA,MAQ5BC,kBAR4B,QAQ5BA,kBAR4B;AAAA,MAS5BC,WAT4B,QAS5BA,WAT4B;AAAA,MAU5BC,OAV4B,QAU5BA,OAV4B;AAAA,MAWzBC,IAXyB;;AAAA,SAa5B,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC;AAFV,KAGMJ,kBAHN;AAIE,IAAA,SAAS,YAAKG,OAAO,CAACE,WAAb,cAA4BL,kBAAkB,CAACM,SAAnB,IAAgC,EAA5D,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAEZ,KADR,CACe;AADf;AAEE,IAAA,WAAW,EAAEQ,WAFf;AAGE,IAAA,UAAU,EAAED,kBAHd;AAIE,IAAA,MAAM,EAAEH,YAJV,CAIwB;AAJxB;AAKE,IAAA,cAAc,EAAC,KALjB,CAKuB;AALvB;AAME,IAAA,KAAK,EAAEH,OANT;AAOE,IAAA,SAAS,EAAEE,SAPb;AAQE,IAAA,cAAc,EAAEE;AARlB,KASMK,IATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUGR,QAVH,CALF,CAb4B;AAAA,CAA9B;;AAiCAH,qBAAqB,CAACc,YAAtB,GAAqC;AACnCR,EAAAA,cAAc,EAAE,KADmB;AAEnCC,EAAAA,kBAAkB,EAAE,EAFe;AAGnCE,EAAAA,WAAW,EAAEX,oBAHsB;AAInCG,EAAAA,KAAK,EAAEF;AAJ4B,CAArC;AAOAC,qBAAqB,CAACe,SAAtB,GAAkC;AAChCd,EAAAA,KAAK,EAAER,SAAS,CAACuB,MADe;AAEhCN,EAAAA,OAAO,EAAEjB,SAAS,CAACwB,MAFa;AAGhCR,EAAAA,WAAW,EAAEhB,SAAS,CAACuB,MAHS;AAIhCV,EAAAA,cAAc,EAAEb,SAAS,CAACyB,IAJM;AAKhCX,EAAAA,kBAAkB,EAAEd,SAAS,CAACwB,MALE;AAMhCT,EAAAA,kBAAkB,EAAEf,SAAS,CAACuB,MANE;AAOhCd,EAAAA,OAAO,EAAET,SAAS,CAAC0B,IAAV,CAAeC,UAPQ;AAQhChB,EAAAA,SAAS,EAAEX,SAAS,CAACuB,MAAV,CAAiBI,UARI;AAShCf,EAAAA,YAAY,EAAEZ,SAAS,CAAC4B,MAAV,CAAiBD,UATC;AAUhCjB,EAAAA,QAAQ,EAAEV,SAAS,CAAC6B,SAAV,CAAoB,CAC5B7B,SAAS,CAAC8B,IADkB,EAE5B9B,SAAS,CAAC+B,OAAV,CAAkB/B,SAAS,CAAC8B,IAA5B,CAF4B,CAApB;AAVsB,CAAlC;;eAgBe3B,UAAU,CAACC,MAAD,CAAV,CAAmBG,qBAAnB,C;;AAAf;;;;;;;;;;0BA3DMF,oB;0BACAC,c;0BAEAC,qB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Button, withStyles } from '@material-ui/core';\n\nimport styles from './styles';\n\nconst CHECKOUT_DESCRIPTION = 'Pay ';\nconst CHECKOUT_TITLE = 'Pay with stripe';\n\nconst StripeCheckoutToggler = ({\n  title,\n  onToken,\n  children,\n  stripeKey,\n  priceInCoins,\n  billingAddress,\n  togglerButtonProps,\n  submitCheckoutText,\n  description,\n  classes,\n  ...rest\n}) => (\n  <Button\n    color=\"primary\"\n    variant=\"contained\"\n    {...togglerButtonProps}\n    className={`${classes.checkoutBtn} ${togglerButtonProps.className || ''}`}>\n    <StripeCheckout\n      name={title} // Modal Header\n      description={description}\n      panelLabel={submitCheckoutText}\n      amount={priceInCoins} // 999 - it's $9.99 in cents\n      ComponentClass=\"div\" // don't tuch it! Look in './styles.js'\n      token={onToken}\n      stripeKey={stripeKey}\n      billingAddress={billingAddress}\n      {...rest}>\n      {children}\n    </StripeCheckout>\n  </Button>\n);\n\nStripeCheckoutToggler.defaultProps = {\n  billingAddress: false,\n  togglerButtonProps: {},\n  description: CHECKOUT_DESCRIPTION,\n  title: CHECKOUT_TITLE,\n};\n\nStripeCheckoutToggler.propTypes = {\n  title: PropTypes.string,\n  classes: PropTypes.object,\n  description: PropTypes.string,\n  billingAddress: PropTypes.bool,\n  togglerButtonProps: PropTypes.object,\n  submitCheckoutText: PropTypes.string,\n  onToken: PropTypes.func.isRequired,\n  stripeKey: PropTypes.string.isRequired,\n  priceInCoins: PropTypes.number.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n};\n\nexport default withStyles(styles)(StripeCheckoutToggler);\n"]},"metadata":{},"sourceType":"module"}