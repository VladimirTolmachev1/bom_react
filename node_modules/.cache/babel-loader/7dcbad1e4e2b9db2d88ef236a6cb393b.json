{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/OrderActionsPopup/OrderActionsPopup.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { Popup } from '../../../../components';\nimport { orderPopupActionsShape, orderShape } from '../../../../constants/propTypes';\n\nvar buildClickHandlrer = function buildClickHandlrer(target, handlers) {\n  return function () {\n    handlers.forEach(function (handler) {\n      handler && handler(target);\n    });\n  };\n};\n\nvar OrderActionsPopup = function OrderActionsPopup(_ref) {\n  var actions = _ref.actions,\n      triggerClassName = _ref.triggerClassName,\n      order = _ref.order;\n  return React.createElement(Popup, {\n    triggerProps: {\n      className: triggerClassName\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, function (closePopup) {\n    return React.createElement(MenuList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, actions.map(function (_ref2) {\n      var name = _ref2.name,\n          onClick = _ref2.onClick,\n          renderTitle = _ref2.renderTitle,\n          isVisible = _ref2.isVisible;\n      var shoulRender = true;\n\n      if (typeof isVisible === 'function') {\n        shoulRender = isVisible(order);\n      }\n\n      if (typeof isVisible === 'boolean') {\n        shoulRender = isVisible;\n      }\n\n      if (!shoulRender) return null;\n      return React.createElement(MenuItem, {\n        onClick: buildClickHandlrer(order, [onClick, closePopup]),\n        key: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, typeof renderTitle === 'function' ? renderTitle(order) : name);\n    }));\n  });\n};\n\nOrderActionsPopup.propTypes = {\n  triggerClassName: PropTypes.string,\n  actions: PropTypes.arrayOf(PropTypes.shape(orderPopupActionsShape)).isRequired,\n  order: PropTypes.oneOfType([PropTypes.shape(orderShape), PropTypes.object]).isRequired\n};\nOrderActionsPopup.defaultProps = {\n  triggerClassName: ''\n};\nvar _default = OrderActionsPopup;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(buildClickHandlrer, \"buildClickHandlrer\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/OrderActionsPopup/OrderActionsPopup.js\");\n  reactHotLoader.register(OrderActionsPopup, \"OrderActionsPopup\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/OrderActionsPopup/OrderActionsPopup.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/OrderActionsPopup/OrderActionsPopup.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/OrderActionsPopup/OrderActionsPopup.js"],"names":["React","PropTypes","MenuItem","MenuList","Popup","orderPopupActionsShape","orderShape","buildClickHandlrer","target","handlers","forEach","handler","OrderActionsPopup","actions","triggerClassName","order","className","closePopup","map","name","onClick","renderTitle","isVisible","shoulRender","propTypes","string","arrayOf","shape","isRequired","oneOfType","object","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SACEC,sBADF,EAEEC,UAFF,QAGO,iCAHP;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,MAAD,EAASC,QAAT;AAAA,SAAsB,YAAM;AACrDA,IAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAAC,OAAO,EAAI;AAC1BA,MAAAA,OAAO,IAAIA,OAAO,CAACH,MAAD,CAAlB;AACD,KAFD;AAGD,GAJ0B;AAAA,CAA3B;;AAMA,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,MAAYC,gBAAZ,QAAYA,gBAAZ;AAAA,MAA8BC,KAA9B,QAA8BA,KAA9B;AAAA,SACxB,oBAAC,KAAD;AACE,IAAA,YAAY,EAAE;AACZC,MAAAA,SAAS,EAAEF;AADC,KADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,UAAAG,UAAU;AAAA,WACT,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,OAAO,CAACK,GAAR,CAAY,iBAA+C;AAAA,UAA5CC,IAA4C,SAA5CA,IAA4C;AAAA,UAAtCC,OAAsC,SAAtCA,OAAsC;AAAA,UAA7BC,WAA6B,SAA7BA,WAA6B;AAAA,UAAhBC,SAAgB,SAAhBA,SAAgB;AAC1D,UAAIC,WAAW,GAAG,IAAlB;;AACA,UAAI,OAAOD,SAAP,KAAqB,UAAzB,EAAqC;AACnCC,QAAAA,WAAW,GAAGD,SAAS,CAACP,KAAD,CAAvB;AACD;;AAED,UAAI,OAAOO,SAAP,KAAqB,SAAzB,EAAoC;AAClCC,QAAAA,WAAW,GAAGD,SAAd;AACD;;AAED,UAAI,CAACC,WAAL,EAAkB,OAAO,IAAP;AAElB,aACE,oBAAC,QAAD;AACE,QAAA,OAAO,EAAEhB,kBAAkB,CAACQ,KAAD,EAAQ,CAACK,OAAD,EAAUH,UAAV,CAAR,CAD7B;AAEE,QAAA,GAAG,EAAEE,IAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGG,OAAOE,WAAP,KAAuB,UAAvB,GAAoCA,WAAW,CAACN,KAAD,CAA/C,GAAyDI,IAH5D,CADF;AAOD,KAnBA,CADH,CADS;AAAA,GAJb,CADwB;AAAA,CAA1B;;AAgCAP,iBAAiB,CAACY,SAAlB,GAA8B;AAC5BV,EAAAA,gBAAgB,EAAEb,SAAS,CAACwB,MADA;AAE5BZ,EAAAA,OAAO,EAAEZ,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAAC0B,KAAV,CAAgBtB,sBAAhB,CAAlB,EACNuB,UAHyB;AAI5Bb,EAAAA,KAAK,EAAEd,SAAS,CAAC4B,SAAV,CAAoB,CAAC5B,SAAS,CAAC0B,KAAV,CAAgBrB,UAAhB,CAAD,EAA8BL,SAAS,CAAC6B,MAAxC,CAApB,EACJF;AALyB,CAA9B;AAQAhB,iBAAiB,CAACmB,YAAlB,GAAiC;AAC/BjB,EAAAA,gBAAgB,EAAE;AADa,CAAjC;eAIeF,iB;AAAf;;;;;;;;;;0BAlDML,kB;0BAMAK,iB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\nimport { Popup } from '../../../../components';\nimport {\n  orderPopupActionsShape,\n  orderShape,\n} from '../../../../constants/propTypes';\n\nconst buildClickHandlrer = (target, handlers) => () => {\n  handlers.forEach(handler => {\n    handler && handler(target);\n  });\n};\n\nconst OrderActionsPopup = ({ actions, triggerClassName, order }) => (\n  <Popup\n    triggerProps={{\n      className: triggerClassName,\n    }}>\n    {closePopup => (\n      <MenuList>\n        {actions.map(({ name, onClick, renderTitle, isVisible }) => {\n          let shoulRender = true;\n          if (typeof isVisible === 'function') {\n            shoulRender = isVisible(order);\n          }\n\n          if (typeof isVisible === 'boolean') {\n            shoulRender = isVisible;\n          }\n\n          if (!shoulRender) return null;\n\n          return (\n            <MenuItem\n              onClick={buildClickHandlrer(order, [onClick, closePopup])}\n              key={name}>\n              {typeof renderTitle === 'function' ? renderTitle(order) : name}\n            </MenuItem>\n          );\n        })}\n      </MenuList>\n    )}\n  </Popup>\n);\n\nOrderActionsPopup.propTypes = {\n  triggerClassName: PropTypes.string,\n  actions: PropTypes.arrayOf(PropTypes.shape(orderPopupActionsShape))\n    .isRequired,\n  order: PropTypes.oneOfType([PropTypes.shape(orderShape), PropTypes.object])\n    .isRequired,\n};\n\nOrderActionsPopup.defaultProps = {\n  triggerClassName: '',\n};\n\nexport default OrderActionsPopup;\n"]},"metadata":{},"sourceType":"module"}