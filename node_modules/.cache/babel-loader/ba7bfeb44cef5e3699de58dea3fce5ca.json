{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormSelect/AppFormSelect.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, FormHelperText } from '@material-ui/core';\nimport styles from './styles';\nimport { AppSelect } from '../AppSelect';\nexport var AppFormSelect = withStyles(styles)(function (_ref) {\n  var input = _ref.input,\n      classes = _ref.classes,\n      className = _ref.className,\n      wrapperClassName = _ref.wrapperClassName,\n      withoutNone = _ref.withoutNone,\n      type = _ref.type,\n      label = _ref.label,\n      required = _ref.required,\n      options = _ref.options,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error;\n  return React.createElement(\"div\", {\n    className: \"\".concat(classes.formControlContainer, \" \").concat(wrapperClassName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(AppSelect, Object.assign({\n    value: input.value,\n    className: \"\".concat(classes.formControl, \" \").concat(className)\n  }, {\n    type: type,\n    label: label,\n    options: options,\n    required: required,\n    withoutNone: withoutNone\n  }, {\n    error: Boolean(touched && error)\n  }, input, {\n    onChange: function onChange(data) {\n      return input.onChange(data[input.name]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), touched && error ? React.createElement(FormHelperText, {\n    className: \"app-form-control__error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, error) : false);\n});\nAppFormSelect.propTypes = {\n  options: PropTypes.array,\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AppFormSelect, \"AppFormSelect\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormSelect/AppFormSelect.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormSelect/AppFormSelect.js"],"names":["React","PropTypes","withStyles","FormHelperText","styles","AppSelect","AppFormSelect","input","classes","className","wrapperClassName","withoutNone","type","label","required","options","meta","touched","error","formControlContainer","value","formControl","Boolean","data","onChange","name","propTypes","array","string","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,mBAA3C;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAO,IAAMC,aAAa,GAAGJ,UAAU,CAACE,MAAD,CAAV,CAC3B,gBAWM;AAAA,MAVJG,KAUI,QAVJA,KAUI;AAAA,MATJC,OASI,QATJA,OASI;AAAA,MARJC,SAQI,QARJA,SAQI;AAAA,MAPJC,gBAOI,QAPJA,gBAOI;AAAA,MANJC,WAMI,QANJA,WAMI;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,uBADJC,IACI;AAAA,MADIC,OACJ,aADIA,OACJ;AAAA,MADaC,KACb,aADaA,KACb;AACJ,SACE;AAAK,IAAA,SAAS,YAAKV,OAAO,CAACW,oBAAb,cAAqCT,gBAArC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEH,KAAK,CAACa,KADf;AAEE,IAAA,SAAS,YAAKZ,OAAO,CAACa,WAAb,cAA4BZ,SAA5B;AAFX,KAGM;AACFG,IAAAA,IAAI,EAAJA,IADE;AAEFC,IAAAA,KAAK,EAALA,KAFE;AAGFE,IAAAA,OAAO,EAAPA,OAHE;AAIFD,IAAAA,QAAQ,EAARA,QAJE;AAKFH,IAAAA,WAAW,EAAXA;AALE,GAHN;AAUE,IAAA,KAAK,EAAEW,OAAO,CAACL,OAAO,IAAIC,KAAZ;AAVhB,KAWMX,KAXN;AAYE,IAAA,QAAQ,EAAE,kBAAAgB,IAAI;AAAA,aAAIhB,KAAK,CAACiB,QAAN,CAAeD,IAAI,CAAChB,KAAK,CAACkB,IAAP,CAAnB,CAAJ;AAAA,KAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAeGR,OAAO,IAAIC,KAAX,GACC,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,yBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CADD,GAKC,KApBJ,CADF;AAyBD,CAtC0B,CAAtB;AAyCPZ,aAAa,CAACoB,SAAd,GAA0B;AACxBX,EAAAA,OAAO,EAAEd,SAAS,CAAC0B,KADK;AAExBlB,EAAAA,SAAS,EAAER,SAAS,CAAC2B,MAFG;AAGxBf,EAAAA,KAAK,EAAEZ,SAAS,CAAC2B,MAAV,CAAiBC;AAHA,CAA1B;;;;;;;;;;0BAzCavB,a","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, FormHelperText } from '@material-ui/core';\n\nimport styles from './styles';\nimport { AppSelect } from '../AppSelect';\n\nexport const AppFormSelect = withStyles(styles)(\n  ({\n    input,\n    classes,\n    className,\n    wrapperClassName,\n    withoutNone,\n    type,\n    label,\n    required,\n    options,\n    meta: { touched, error },\n  }) => {\n    return (\n      <div className={`${classes.formControlContainer} ${wrapperClassName}`}>\n        <AppSelect\n          value={input.value}\n          className={`${classes.formControl} ${className}`}\n          {...{\n            type,\n            label,\n            options,\n            required,\n            withoutNone,\n          }}\n          error={Boolean(touched && error)}\n          {...input}\n          onChange={data => input.onChange(data[input.name])}\n        />\n        {touched && error ? (\n          <FormHelperText className=\"app-form-control__error\">\n            {error}\n          </FormHelperText>\n        ) : (\n          false\n        )}\n      </div>\n    );\n  },\n);\n\nAppFormSelect.propTypes = {\n  options: PropTypes.array,\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}