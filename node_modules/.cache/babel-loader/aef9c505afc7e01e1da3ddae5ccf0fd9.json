{"ast":null,"code":"import _slicedToArray from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { ReduxCrudService } from '/services';\nexport var resource = '/payment/charge';\n\nvar _ReduxCrudService$get = ReduxCrudService.getActionCrudTypes(resource),\n    _ReduxCrudService$get2 = _slicedToArray(_ReduxCrudService$get.POST, 3),\n    CREATE_CHARGE_REQUEST = _ReduxCrudService$get2[0],\n    CREATE_CHARGE_SUCCESS = _ReduxCrudService$get2[1],\n    CREATE_CHARGE_ERROR = _ReduxCrudService$get2[2];\n\nexport { CREATE_CHARGE_REQUEST, CREATE_CHARGE_SUCCESS, CREATE_CHARGE_ERROR };\nexport var createOrderCharge = ReduxCrudService.resourceAction({\n  resource: resource,\n  method: 'POST'\n});\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(resource, \"resource\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/modules/checkout.actions.js\");\n  reactHotLoader.register(CREATE_CHARGE_REQUEST, \"CREATE_CHARGE_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/modules/checkout.actions.js\");\n  reactHotLoader.register(CREATE_CHARGE_SUCCESS, \"CREATE_CHARGE_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/modules/checkout.actions.js\");\n  reactHotLoader.register(CREATE_CHARGE_ERROR, \"CREATE_CHARGE_ERROR\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/modules/checkout.actions.js\");\n  reactHotLoader.register(createOrderCharge, \"createOrderCharge\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/modules/checkout.actions.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Checkout/modules/checkout.actions.js"],"names":["ReduxCrudService","resource","getActionCrudTypes","POST","CREATE_CHARGE_REQUEST","CREATE_CHARGE_SUCCESS","CREATE_CHARGE_ERROR","createOrderCharge","resourceAction","method"],"mappings":";;;;;;;;AAAA,SAASA,gBAAT,QAAiC,WAAjC;AAEA,OAAO,IAAMC,QAAQ,GAAG,iBAAjB;;4BAQHD,gBAAgB,CAACE,kBAAjB,CAAoCD,QAApC,C;kEALFE,I;IACIC,qB;IACAC,qB;IACAC,mB;;;AAIN,OAAO,IAAMC,iBAAiB,GAAGP,gBAAgB,CAACQ,cAAjB,CAAgC;AAC7DP,EAAAA,QAAQ,EAARA,QAD6D;AAE7DQ,EAAAA,MAAM,EAAE;AAFqD,CAAhC,CAA1B;;;;;;;;;;;;0BAVMR,Q;0BAIPG,qB;0BACAC,qB;0BACAC,mB;0BAIOC,iB","sourcesContent":["import { ReduxCrudService } from '/services';\n\nexport const resource = '/payment/charge';\n\nexport const {\n  POST: [\n      CREATE_CHARGE_REQUEST,\n      CREATE_CHARGE_SUCCESS,\n      CREATE_CHARGE_ERROR,\n  ],\n} = ReduxCrudService.getActionCrudTypes(resource);\n\nexport const createOrderCharge = ReduxCrudService.resourceAction({\n    resource,\n    method: 'POST', \n});\n\n"]},"metadata":{},"sourceType":"module"}