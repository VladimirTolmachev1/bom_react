{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/StripeConnectionButton/index.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\nimport { StripeService } from '../../services';\n\nvar StripeConnectionButton = function StripeConnectionButton(_ref) {\n  var isConnectedToStripe = _ref.isConnectedToStripe,\n      handleDissconnectStripe = _ref.handleDissconnectStripe;\n  return isConnectedToStripe ? React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleDissconnectStripe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Dissconnect stripe\") : React.createElement(Button, {\n    href: StripeService.generateStripeOAuthLink(),\n    disabled: isConnectedToStripe,\n    variant: \"outlined\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Connect stripe\");\n};\n\nStripeConnectionButton.propTypes = {\n  isConnectedToStripe: PropTypes.bool,\n  handleDissconnectStripe: PropTypes.func\n};\nStripeConnectionButton.defaultProps = {\n  isConnectedToStripe: false,\n  handleDissconnectStripe: function handleDissconnectStripe() {\n    return null;\n  }\n};\nvar _default = StripeConnectionButton;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(StripeConnectionButton, \"StripeConnectionButton\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/StripeConnectionButton/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/StripeConnectionButton/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/StripeConnectionButton/index.js"],"names":["React","PropTypes","Button","StripeService","StripeConnectionButton","isConnectedToStripe","handleDissconnectStripe","generateStripeOAuthLink","propTypes","bool","func","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAASC,aAAT,QAA8B,gBAA9B;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,MAC7BC,mBAD6B,QAC7BA,mBAD6B;AAAA,MAE7BC,uBAF6B,QAE7BA,uBAF6B;AAAA,SAI7BD,mBAAmB,GACjB,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,OAAO,EAAEC,uBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADiB,GAQjB,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEH,aAAa,CAACI,uBAAd,EADR;AAEE,IAAA,QAAQ,EAAEF,mBAFZ;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZ2B;AAAA,CAA/B;;AAqBAD,sBAAsB,CAACI,SAAvB,GAAmC;AACjCH,EAAAA,mBAAmB,EAAEJ,SAAS,CAACQ,IADE;AAEjCH,EAAAA,uBAAuB,EAAEL,SAAS,CAACS;AAFF,CAAnC;AAKAN,sBAAsB,CAACO,YAAvB,GAAsC;AACpCN,EAAAA,mBAAmB,EAAE,KADe;AAEpCC,EAAAA,uBAAuB,EAAE;AAAA,WAAM,IAAN;AAAA;AAFW,CAAtC;eAKeF,sB;AAAf;;;;;;;;;;0BA/BMA,sB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\n\nimport { StripeService } from '../../services';\n\nconst StripeConnectionButton = ({\n  isConnectedToStripe,\n  handleDissconnectStripe,\n}) =>\n  isConnectedToStripe ? (\n    <Button\n      variant=\"outlined\"\n      color=\"secondary\"\n      onClick={handleDissconnectStripe}>\n      Dissconnect stripe\n    </Button>\n  ) : (\n    <Button\n      href={StripeService.generateStripeOAuthLink()}\n      disabled={isConnectedToStripe}\n      variant=\"outlined\"\n      color=\"primary\">\n      Connect stripe\n    </Button>\n  );\n\nStripeConnectionButton.propTypes = {\n  isConnectedToStripe: PropTypes.bool,\n  handleDissconnectStripe: PropTypes.func,\n};\n\nStripeConnectionButton.defaultProps = {\n  isConnectedToStripe: false,\n  handleDissconnectStripe: () => null,\n};\n\nexport default StripeConnectionButton;\n"]},"metadata":{},"sourceType":"module"}