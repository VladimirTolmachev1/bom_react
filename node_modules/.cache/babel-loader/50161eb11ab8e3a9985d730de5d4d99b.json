{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nexport var API_PREFIX = 'api';\nexport var ApiService =\n/*#__PURE__*/\nfunction () {\n  function ApiService() {\n    _classCallCheck(this, ApiService);\n  }\n\n  _createClass(ApiService, null, [{\n    key: \"bodyJSONStringify\",\n    value: function bodyJSONStringify(body) {\n      return JSON.stringify(body);\n    }\n  }, {\n    key: \"bodyToFormData\",\n    value: function bodyToFormData(body) {\n      var formData = new FormData();\n\n      for (var name in body) {\n        formData.append(name, body[name]);\n      }\n\n      return formData;\n    }\n  }, {\n    key: \"createRequestProxy\",\n    value: function createRequestProxy(request, params) {\n      var xhr;\n      var promise = new Promise(function (resolve, reject) {\n        xhr = ApiService.createRequest(resolve, reject, request);\n        xhr.send(params);\n      });\n      return {\n        promise: promise,\n        xhr: xhr\n      };\n    }\n  }, {\n    key: \"createRequest\",\n    value: function createRequest(resolve, reject, request) {\n      var xhr = new XMLHttpRequest();\n      var url = request.isCustomApiEndpoint ? request.endpoint : process.env.REACT_APP_APINAME + '/' + API_PREFIX + request.endpoint;\n      xhr.open(request.method, url);\n\n      ApiService._prepareHeaderByRequestParams(xhr, request);\n\n      xhr.onload = function () {\n        xhr.status >= 200 && xhr.status < 300 ? resolve(ApiService.transformSuccessResponse(xhr)) : reject(ApiService.transformErrorResponse(xhr));\n      };\n\n      xhr.onerror = function () {\n        return reject(ApiService.transformErrorResponse(xhr));\n      };\n\n      xhr.onabort = function () {\n        return reject(ApiService.transformErrorResponse(xhr));\n      };\n\n      return xhr;\n    }\n  }, {\n    key: \"get\",\n    value: function get(request) {\n      if (request.isCustomApiEndpoint) {\n        return ApiService.createRequestProxy(request);\n      }\n\n      var url = new URL(request.endpoint, window.location.origin);\n\n      if (request.body) {\n        Object.keys(request.body).forEach(function (key) {\n          request.body[key] && url.searchParams.append(key, request.body[key]);\n        });\n      }\n\n      request.endpoint = url.pathname + url.search;\n      return ApiService.createRequestProxy(request);\n    }\n  }, {\n    key: \"post\",\n    value: function post(request) {\n      var params = ApiService.callAPIMatix[request.contentType](request.body);\n      return ApiService.createRequestProxy(request, params);\n    }\n  }, {\n    key: \"put\",\n    value: function put(request) {\n      var params = ApiService.callAPIMatix[request.contentType](request.body);\n      return ApiService.createRequestProxy(request, params);\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(request) {\n      var params = ApiService.callAPIMatix[request.contentType](request.body);\n      return ApiService.createRequestProxy(request, params);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(request) {\n      var params = ApiService.callAPIMatix[request.contentType](request.body);\n      return ApiService.createRequestProxy(request, params);\n    }\n  }, {\n    key: \"_prepareHeaderByRequestParams\",\n    value: function _prepareHeaderByRequestParams(xhr, request) {\n      var token = window.localStorage.getItem('token') || '';\n\n      if (request.contentType === 'application/json') {\n        xhr.setRequestHeader('Content-Type', request.contentType);\n      }\n\n      if (!request.isCustomApiEndpoint) {\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\n        xhr.setRequestHeader('Access-Control-Allow-Credentials', true);\n        xhr.setRequestHeader('Access-Control-Allow-Methods', '*');\n        xhr.setRequestHeader('Access-Control-Allow-Request-Headers', 'Authorization, Content-Type');\n        xhr.setRequestHeader('Authorization', \"Bearer \".concat(token));\n      }\n    }\n  }, {\n    key: \"transformErrorResponse\",\n    value: function transformErrorResponse(xhr) {\n      var response = xhr.response;\n\n      if (ApiService.isJsonString(xhr.response)) {\n        response = JSON.parse(xhr.response);\n      }\n\n      return {\n        response: response,\n        status: xhr.status\n      };\n    }\n  }, {\n    key: \"transformSuccessResponse\",\n    value: function transformSuccessResponse(xhr) {\n      var response = xhr.response;\n\n      if (ApiService.isJsonString(response)) {\n        response = JSON.parse(response);\n      }\n\n      return response;\n    }\n  }, {\n    key: \"isJsonString\",\n    value: function isJsonString(str) {\n      try {\n        JSON.parse(str);\n      } catch (e) {\n        return false;\n      }\n\n      return true;\n    }\n  }]);\n\n  return ApiService;\n}();\nApiService.callAPIMatix = {\n  'multipart/form-data': ApiService.bodyToFormData,\n  'application/json': ApiService.bodyJSONStringify\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(API_PREFIX, \"API_PREFIX\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/services/ApiService/ApiService.js\");\n  reactHotLoader.register(ApiService, \"ApiService\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/services/ApiService/ApiService.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/services/ApiService/ApiService.js"],"names":["API_PREFIX","ApiService","body","JSON","stringify","formData","FormData","name","append","request","params","xhr","promise","Promise","resolve","reject","createRequest","send","XMLHttpRequest","url","isCustomApiEndpoint","endpoint","process","env","REACT_APP_APINAME","open","method","_prepareHeaderByRequestParams","onload","status","transformSuccessResponse","transformErrorResponse","onerror","onabort","createRequestProxy","URL","window","location","origin","Object","keys","forEach","key","searchParams","pathname","search","callAPIMatix","contentType","token","localStorage","getItem","setRequestHeader","response","isJsonString","parse","str","e","bodyToFormData","bodyJSONStringify"],"mappings":"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","sourcesContent":["export const API_PREFIX = 'api';\nexport class ApiService {\n    static callAPIMatix = {\n        'multipart/form-data': ApiService.bodyToFormData,\n        'application/json': ApiService.bodyJSONStringify\n    };\n\n    static bodyJSONStringify(body) {\n        return JSON.stringify(body);\n    }\n\n    static bodyToFormData(body) {\n        let formData = new FormData();\n\n        for (let name in body) {\n            formData.append(name, body[name]);\n        }\n\n        return formData;\n    }\n\n    static createRequestProxy(request, params) {\n        let xhr;\n        let promise = new Promise((resolve, reject) => {\n            xhr = ApiService.createRequest(resolve, reject, request);\n            xhr.send(params);\n        });\n\n        return {\n            promise,\n            xhr\n        };\n    }\n\n    static createRequest(resolve, reject, request) {\n        const xhr = new XMLHttpRequest();\n\n        const url = request.isCustomApiEndpoint\n            ? request.endpoint\n            : process.env.REACT_APP_APINAME + '/' +\n              API_PREFIX +\n              request.endpoint;\n\n        xhr.open(request.method, url);\n\n        ApiService._prepareHeaderByRequestParams(xhr, request);\n\n        xhr.onload = () => {\n            xhr.status >= 200 && xhr.status < 300\n                ? resolve(ApiService.transformSuccessResponse(xhr))\n                : reject(ApiService.transformErrorResponse(xhr));\n        };\n\n        xhr.onerror = () => reject(ApiService.transformErrorResponse(xhr));\n        xhr.onabort = () => reject(ApiService.transformErrorResponse(xhr));\n\n        return xhr;\n    }\n\n    static get(request) {\n        if (request.isCustomApiEndpoint) {\n            return ApiService.createRequestProxy(request);\n        }\n\n        let url = new URL(request.endpoint, window.location.origin);\n\n        if (request.body) {\n            Object.keys(request.body).forEach(key => {\n                request.body[key] &&\n                    url.searchParams.append(key, request.body[key]);\n            });\n        }\n\n        request.endpoint = url.pathname + url.search;\n\n        return ApiService.createRequestProxy(request);\n    }\n\n    static post(request) {\n        const params = ApiService.callAPIMatix[request.contentType](\n            request.body\n        );\n        return ApiService.createRequestProxy(request, params);\n    }\n\n    static put(request) {\n        const params = ApiService.callAPIMatix[request.contentType](\n            request.body\n        );\n        return ApiService.createRequestProxy(request, params);\n    }\n\n    static patch(request) {\n        const params = ApiService.callAPIMatix[request.contentType](\n            request.body\n        );\n        return ApiService.createRequestProxy(request, params);\n    }\n\n    static delete(request) {\n        const params = ApiService.callAPIMatix[request.contentType](\n            request.body\n        );\n        return ApiService.createRequestProxy(request, params);\n    }\n\n    static _prepareHeaderByRequestParams(xhr, request) {\n        const token = window.localStorage.getItem('token') || '';\n        if (request.contentType === 'application/json') {\n            xhr.setRequestHeader('Content-Type', request.contentType);\n        }\n\n        if (!request.isCustomApiEndpoint) {\n            xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\n            xhr.setRequestHeader('Access-Control-Allow-Credentials', true);\n            xhr.setRequestHeader('Access-Control-Allow-Methods', '*');\n            xhr.setRequestHeader(\n                'Access-Control-Allow-Request-Headers',\n                'Authorization, Content-Type'\n            );\n            xhr.setRequestHeader('Authorization', `Bearer ${token}`);\n        }\n    }\n\n    static transformErrorResponse(xhr) {\n        let response = xhr.response;\n        if (ApiService.isJsonString(xhr.response)) {\n            response = JSON.parse(xhr.response);\n        }\n        return {\n            response,\n            status: xhr.status\n        };\n    }\n\n    static transformSuccessResponse(xhr) {\n        let response = xhr.response;\n        if (ApiService.isJsonString(response)) {\n            response = JSON.parse(response);\n        }\n        return response;\n    }\n\n    static isJsonString(str) {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}