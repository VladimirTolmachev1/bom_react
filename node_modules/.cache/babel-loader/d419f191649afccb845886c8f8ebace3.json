{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { ReduxCrudService } from '../../services';\nimport { API_REQUESTS_ABORT } from '../core';\nimport { resource, SET_CATEGORY_FILTERS, CLEANUP_CATEGORIES, CHANGE_CATEGORIES_ORDERING, GET_CATEGORY_LIST_REQUEST, CREATE_CATEGORY_REQUEST, GET_CATEGORY_BY_ID_REQUEST, UPDATE_CATEGORY_REQUEST, UPDATE_CATEGORY_SUCCESS, UPDATE_CATEGORY_ERROR, PATCH_CATEGORY_EXTRAS_REQUEST, PATCH_CATEGORY_EXTRAS_SUCCESS, PATCH_CATEGORY_EXTRAS_ERROR, CREATE_CATEGORY_SUCCESS, CREATE_CATEGORY_ERROR } from './categories.types';\nexport var changeCategoriesOrdering = function changeCategoriesOrdering(idsWithOrder) {\n  return {\n    type: CHANGE_CATEGORIES_ORDERING,\n    payload: {\n      idsWithOrder: idsWithOrder\n    }\n  };\n};\nexport var patchCategoryExtras = function patchCategoryExtras(categoryId, extras) {\n  return {\n    type: PATCH_CATEGORY_EXTRAS_REQUEST,\n    payload: {\n      categoryId: categoryId,\n      extras: extras\n    }\n  };\n};\nexport var patchCategoryExtrasSuccess = function patchCategoryExtrasSuccess(payload) {\n  return {\n    type: PATCH_CATEGORY_EXTRAS_SUCCESS,\n    payload: payload\n  };\n};\nexport var patchCategoryExtrasError = function patchCategoryExtrasError(payload) {\n  return {\n    type: PATCH_CATEGORY_EXTRAS_ERROR,\n    payload: payload\n  };\n}; // CREATE CATEGORY\n\nexport var createCategory = function createCategory(payload) {\n  return {\n    type: CREATE_CATEGORY_REQUEST,\n    payload: payload\n  };\n};\nexport var createCategorySuccess = function createCategorySuccess(newCategory) {\n  return {\n    type: CREATE_CATEGORY_SUCCESS,\n    payload: newCategory\n  };\n};\nexport var createCategoryError = function createCategoryError(error) {\n  return {\n    type: CREATE_CATEGORY_ERROR,\n    payload: error\n  };\n}; // UPDATE CATEGORY\n\nexport var updateCategory = function updateCategory(payload) {\n  return {\n    type: UPDATE_CATEGORY_REQUEST,\n    payload: payload\n  };\n};\nexport var updateCategorySuccess = function updateCategorySuccess(updatedCategory) {\n  return {\n    type: UPDATE_CATEGORY_SUCCESS,\n    payload: updatedCategory\n  };\n};\nexport var updateCategoryError = function updateCategoryError(error) {\n  return {\n    type: UPDATE_CATEGORY_ERROR,\n    payload: error\n  };\n};\nexport var getCategories = ReduxCrudService.resourceAction({\n  resource: resource,\n  method: 'GET'\n});\nexport var getCategoryById = ReduxCrudService.resourceAction({\n  resource: resource,\n  method: 'GET',\n  byId: true\n});\nexport var deleteCategory = ReduxCrudService.resourceAction({\n  resource: resource,\n  method: 'DELETE',\n  logger: {\n    success: 'Category was successful deleted',\n    error: 'Error during category delete'\n  }\n});\nexport function updateCategoryFilters(filters) {\n  return {\n    type: SET_CATEGORY_FILTERS,\n    filters: filters\n  };\n}\nexport function cleanupCategories() {\n  return {\n    type: CLEANUP_CATEGORIES\n  };\n}\nexport function abortPageRequests() {\n  return {\n    type: API_REQUESTS_ABORT,\n    requestTypes: [GET_CATEGORY_LIST_REQUEST, CREATE_CATEGORY_REQUEST, GET_CATEGORY_BY_ID_REQUEST, UPDATE_CATEGORY_REQUEST]\n  };\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(changeCategoriesOrdering, \"changeCategoriesOrdering\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(patchCategoryExtras, \"patchCategoryExtras\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(patchCategoryExtrasSuccess, \"patchCategoryExtrasSuccess\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(patchCategoryExtrasError, \"patchCategoryExtrasError\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(createCategory, \"createCategory\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(createCategorySuccess, \"createCategorySuccess\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(createCategoryError, \"createCategoryError\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(updateCategory, \"updateCategory\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(updateCategorySuccess, \"updateCategorySuccess\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(updateCategoryError, \"updateCategoryError\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(getCategories, \"getCategories\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(getCategoryById, \"getCategoryById\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(deleteCategory, \"deleteCategory\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(updateCategoryFilters, \"updateCategoryFilters\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(cleanupCategories, \"cleanupCategories\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n  reactHotLoader.register(abortPageRequests, \"abortPageRequests\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.actions.js"],"names":["ReduxCrudService","API_REQUESTS_ABORT","resource","SET_CATEGORY_FILTERS","CLEANUP_CATEGORIES","CHANGE_CATEGORIES_ORDERING","GET_CATEGORY_LIST_REQUEST","CREATE_CATEGORY_REQUEST","GET_CATEGORY_BY_ID_REQUEST","UPDATE_CATEGORY_REQUEST","UPDATE_CATEGORY_SUCCESS","UPDATE_CATEGORY_ERROR","PATCH_CATEGORY_EXTRAS_REQUEST","PATCH_CATEGORY_EXTRAS_SUCCESS","PATCH_CATEGORY_EXTRAS_ERROR","CREATE_CATEGORY_SUCCESS","CREATE_CATEGORY_ERROR","changeCategoriesOrdering","idsWithOrder","type","payload","patchCategoryExtras","categoryId","extras","patchCategoryExtrasSuccess","patchCategoryExtrasError","createCategory","createCategorySuccess","newCategory","createCategoryError","error","updateCategory","updateCategorySuccess","updatedCategory","updateCategoryError","getCategories","resourceAction","method","getCategoryById","byId","deleteCategory","logger","success","updateCategoryFilters","filters","cleanupCategories","abortPageRequests","requestTypes"],"mappings":"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","sourcesContent":["import { ReduxCrudService } from '../../services';\nimport { API_REQUESTS_ABORT } from '../core';\n\nimport {\n  resource,\n  SET_CATEGORY_FILTERS,\n  CLEANUP_CATEGORIES,\n  CHANGE_CATEGORIES_ORDERING,\n  GET_CATEGORY_LIST_REQUEST,\n  CREATE_CATEGORY_REQUEST,\n  GET_CATEGORY_BY_ID_REQUEST,\n  UPDATE_CATEGORY_REQUEST,\n  UPDATE_CATEGORY_SUCCESS,\n  UPDATE_CATEGORY_ERROR,\n  PATCH_CATEGORY_EXTRAS_REQUEST,\n  PATCH_CATEGORY_EXTRAS_SUCCESS,\n  PATCH_CATEGORY_EXTRAS_ERROR,\n  CREATE_CATEGORY_SUCCESS,\n  CREATE_CATEGORY_ERROR,\n} from './categories.types';\n\nexport const changeCategoriesOrdering = idsWithOrder => ({\n  type: CHANGE_CATEGORIES_ORDERING,\n  payload: { idsWithOrder },\n});\n\nexport const patchCategoryExtras = (categoryId, extras) => ({\n  type: PATCH_CATEGORY_EXTRAS_REQUEST,\n  payload: { categoryId, extras },\n});\n\nexport const patchCategoryExtrasSuccess = payload => ({\n  type: PATCH_CATEGORY_EXTRAS_SUCCESS,\n  payload,\n});\n\nexport const patchCategoryExtrasError = payload => ({\n  type: PATCH_CATEGORY_EXTRAS_ERROR,\n  payload,\n});\n\n// CREATE CATEGORY\nexport const createCategory = payload => ({\n  type: CREATE_CATEGORY_REQUEST,\n  payload,\n});\n\nexport const createCategorySuccess = newCategory => ({\n  type: CREATE_CATEGORY_SUCCESS,\n  payload: newCategory,\n});\n\nexport const createCategoryError = error => ({\n  type: CREATE_CATEGORY_ERROR,\n  payload: error,\n});\n\n// UPDATE CATEGORY\nexport const updateCategory = payload => ({\n  type: UPDATE_CATEGORY_REQUEST,\n  payload,\n});\n\nexport const updateCategorySuccess = updatedCategory => ({\n  type: UPDATE_CATEGORY_SUCCESS,\n  payload: updatedCategory,\n});\n\nexport const updateCategoryError = error => ({\n  type: UPDATE_CATEGORY_ERROR,\n  payload: error,\n});\n\nexport const getCategories = ReduxCrudService.resourceAction({\n  resource,\n  method: 'GET',\n});\n\nexport const getCategoryById = ReduxCrudService.resourceAction({\n  resource,\n  method: 'GET',\n  byId: true,\n});\n\nexport const deleteCategory = ReduxCrudService.resourceAction({\n  resource,\n  method: 'DELETE',\n  logger: {\n    success: 'Category was successful deleted',\n    error: 'Error during category delete',\n  },\n});\n\nexport function updateCategoryFilters(filters) {\n  return {\n    type: SET_CATEGORY_FILTERS,\n    filters,\n  };\n}\n\nexport function cleanupCategories() {\n  return {\n    type: CLEANUP_CATEGORIES,\n  };\n}\n\nexport function abortPageRequests() {\n  return {\n    type: API_REQUESTS_ABORT,\n    requestTypes: [\n      GET_CATEGORY_LIST_REQUEST,\n      CREATE_CATEGORY_REQUEST,\n      GET_CATEGORY_BY_ID_REQUEST,\n      UPDATE_CATEGORY_REQUEST,\n    ],\n  };\n}\n"]},"metadata":{},"sourceType":"module"}