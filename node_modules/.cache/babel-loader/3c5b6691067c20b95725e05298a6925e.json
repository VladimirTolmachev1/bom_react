{"ast":null,"code":"import _defineProperty from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppSelect/AppSelect.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { autobind } from 'core-decorators';\nexport var AppSelect = (_class =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AppSelect, _PureComponent);\n\n  function AppSelect() {\n    _classCallCheck(this, AppSelect);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppSelect).apply(this, arguments));\n  }\n\n  _createClass(AppSelect, [{\n    key: \"mapOptions\",\n    value: function mapOptions() {\n      var options = this.props.options;\n      return options.map(function (_ref, index) {\n        var name = _ref.name,\n            value = _ref.value;\n        return React.createElement(MenuItem, {\n          key: index,\n          value: value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, name);\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      var onChange = this.props.onChange;\n      var _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n      onChange(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(event) {\n      var onFocus = this.props.onFocus;\n      onFocus && onFocus(event);\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(event) {\n      var onBlur = this.props.onBlur;\n      onBlur && onBlur(event);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          label = _this$props.label,\n          className = _this$props.className,\n          name = _this$props.name,\n          error = _this$props.error,\n          disabled = _this$props.disabled,\n          required = _this$props.required,\n          withoutNone = _this$props.withoutNone;\n      return React.createElement(FormControl, {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, label + (required ? ' *' : '')), React.createElement(Select, Object.assign({\n        error: error,\n        required: required,\n        disabled: disabled,\n        name: name,\n        value: value\n      }, {\n        onChange: this.onChange,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), !withoutNone && React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"None\")), this.mapOptions()));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return AppSelect;\n}(PureComponent), (_applyDecoratedDescriptor(_class.prototype, \"onChange\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onFocus\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onFocus\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onBlur\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onBlur\"), _class.prototype)), _class);\nAppSelect.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  value: PropTypes.any,\n  required: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  withoutNone: PropTypes.bool\n};\nAppSelect.defaultProps = {\n  withoutNone: false\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AppSelect, \"AppSelect\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppSelect/AppSelect.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppSelect/AppSelect.js"],"names":["React","PureComponent","PropTypes","FormControl","Select","InputLabel","MenuItem","autobind","AppSelect","options","props","map","index","name","value","event","onChange","target","onFocus","onBlur","label","className","error","disabled","required","withoutNone","mapOptions","propTypes","string","func","isRequired","any","bool","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { autobind } from 'core-decorators';\n\nexport class AppSelect extends PureComponent {\n    mapOptions() {\n        const { options } = this.props;\n\n        return options.map(({ name, value }, index) => {\n            return (\n                <MenuItem key={index} value={value}>\n                    {name}\n                </MenuItem>\n            );\n        });\n    }\n\n    @autobind\n    onChange(event) {\n        const { onChange } = this.props;\n        const { value, name } = event.target;\n\n        onChange({ [name]: value });\n    }\n\n    @autobind\n    onFocus(event) {\n        const { onFocus } = this.props;\n        onFocus && onFocus(event);\n    }\n\n    @autobind\n    onBlur(event) {\n        const { onBlur } = this.props;\n        onBlur && onBlur(event);\n    }\n\n    render() {\n        const {\n            value,\n            label,\n            className,\n            name,\n            error,\n            disabled,\n            required,\n            withoutNone\n        } = this.props;\n\n        return (\n            <FormControl className={className}>\n                <InputLabel htmlFor={name}>\n                    {label + (required ? ' *' : '')}\n                </InputLabel>\n                <Select\n                    {...{\n                        error,\n                        required,\n                        disabled,\n                        name,\n                        value\n                    }}\n                    onChange={this.onChange}\n                    onFocus={this.onFocus}\n                    onBlur={this.onBlur}\n                >\n                    {!withoutNone && (\n                        <MenuItem value=''>\n                            <em>None</em>\n                        </MenuItem>\n                    )}\n                    {this.mapOptions()}\n                </Select>\n            </FormControl>\n        );\n    }\n}\n\nAppSelect.propTypes = {\n    className: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    value: PropTypes.any,\n    required: PropTypes.bool,\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    options: PropTypes.array.isRequired,\n    withoutNone: PropTypes.bool\n};\n\nAppSelect.defaultProps = {\n    withoutNone: false\n};\n"]},"metadata":{},"sourceType":"module"}