{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishAutocomplete/DishAutocomplete.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { AppCleanHOC, AppAutoComplete } from '/components';\nimport { HelperService } from '/services';\nimport './DishAutocomplete.scss';\nimport { dishesFiltersSelector, dishesListSelector, dishesLoadingSelector, updateFilters, abortPageRequests, getDishesForAutocomplete, dishesCountSelector, setPage, clearAutocomplete } from './modules';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dishes: dishesListSelector(state),\n    filters: dishesFiltersSelector(state),\n    loading: dishesLoadingSelector(state),\n    count: dishesCountSelector(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  getDishesForAutocomplete: getDishesForAutocomplete,\n  updateFilters: updateFilters,\n  abortPageRequests: abortPageRequests,\n  setPage: setPage,\n  clearAutocomplete: clearAutocomplete\n};\nvar DishAutocomplete = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = AppCleanHOC(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(DishAutocomplete, _PureComponent);\n\n  function DishAutocomplete() {\n    _classCallCheck(this, DishAutocomplete);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DishAutocomplete).apply(this, arguments));\n  }\n\n  _createClass(DishAutocomplete, [{\n    key: \"makeRequest\",\n    value: function makeRequest(rest) {\n      var _this$props = this.props,\n          getDishesForAutocomplete = _this$props.getDishesForAutocomplete,\n          category_id = _this$props.category_id,\n          updateFilters = _this$props.updateFilters,\n          filters = _this$props.filters,\n          withSizes = _this$props.withSizes,\n          withExtras = _this$props.withExtras;\n\n      var body = _objectSpread({}, filters, {\n        category_id: category_id\n      }, rest, {\n        withSizes: withSizes,\n        withExtras: withExtras\n      });\n\n      updateFilters(body);\n      getDishesForAutocomplete({\n        body: body\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var clearAutocomplete = this.props.clearAutocomplete;\n      clearAutocomplete();\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange(name) {\n      this.makeRequest({\n        name: name\n      });\n    }\n  }, {\n    key: \"onMenuScrollToBottom\",\n    value: function onMenuScrollToBottom(event) {\n      var _this$props2 = this.props,\n          setPage = _this$props2.setPage,\n          page = _this$props2.filters.page,\n          getDishesForAutocomplete = _this$props2.getDishesForAutocomplete,\n          category_id = _this$props2.category_id,\n          withSizes = _this$props2.withSizes,\n          withExtras = _this$props2.withExtras;\n      var body = {\n        page: page + 1,\n        category_id: category_id,\n        withSizes: withSizes,\n        withExtras: withExtras\n      };\n      setPage(page + 1);\n      getDishesForAutocomplete({\n        body: body\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(_ref) {\n      var value = _ref.value;\n      var _this$props3 = this.props,\n          onChange = _this$props3.onChange,\n          dishes = _this$props3.dishes;\n      var dish = dishes.find(function (dish) {\n        return dish.value === value;\n      }) || {\n        label: '',\n        value: ''\n      };\n      onChange(dish);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.makeRequest();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dishes = this.props.dishes;\n      return React.createElement(\"div\", {\n        className: 'dish-autocomplete-wrapper',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(AppAutoComplete, Object.assign({}, HelperService.pick(this.props, ['loading', 'compareKey', 'value', 'count']), {\n        onMenuScrollToBottom: this.onMenuScrollToBottom,\n        onInputChange: this.onInputChange,\n        options: dishes,\n        className: 'dish-autocomplete',\n        onChange: this.onChange,\n        placeholder: \"Dish\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return DishAutocomplete;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onInputChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onInputChange\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onMenuScrollToBottom\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onMenuScrollToBottom\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onChange\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"componentDidMount\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"componentDidMount\"), _class2.prototype)), _class2)) || _class) || _class);\nexport { DishAutocomplete as default };\nDishAutocomplete.propTypes = {\n  withSizes: PropTypes.bool,\n  withExtras: PropTypes.bool,\n  dishes: PropTypes.array,\n  category_id: PropTypes.string,\n  loading: PropTypes.bool,\n  compareKey: PropTypes.string,\n  onChange: PropTypes.func,\n  theme: PropTypes.object\n};\nDishAutocomplete.defaultProps = {\n  compareKey: 'label',\n  withSizes: false,\n  withExtras: false\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishAutocomplete/DishAutocomplete.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishAutocomplete/DishAutocomplete.js\");\n  reactHotLoader.register(DishAutocomplete, \"DishAutocomplete\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishAutocomplete/DishAutocomplete.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/DishAutocomplete/DishAutocomplete.js"],"names":["React","PureComponent","PropTypes","connect","autobind","AppCleanHOC","AppAutoComplete","HelperService","dishesFiltersSelector","dishesListSelector","dishesLoadingSelector","updateFilters","abortPageRequests","getDishesForAutocomplete","dishesCountSelector","setPage","clearAutocomplete","mapStateToProps","state","dishes","filters","loading","count","mapDispatchToProps","DishAutocomplete","rest","props","category_id","withSizes","withExtras","body","name","makeRequest","event","page","value","onChange","dish","find","label","pick","onMenuScrollToBottom","onInputChange","propTypes","bool","array","string","compareKey","func","theme","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { AppCleanHOC, AppAutoComplete } from '/components';\nimport { HelperService } from '/services';\n\nimport './DishAutocomplete.scss';\n\nimport {\n    dishesFiltersSelector,\n    dishesListSelector,\n    dishesLoadingSelector,\n    updateFilters,\n    abortPageRequests,\n    getDishesForAutocomplete,\n    dishesCountSelector,\n    setPage,\n    clearAutocomplete\n} from './modules';\n\nconst mapStateToProps = state => ({\n    dishes: dishesListSelector(state),\n    filters: dishesFiltersSelector(state),\n    loading: dishesLoadingSelector(state),\n    count: dishesCountSelector(state)\n});\n\nconst mapDispatchToProps = {\n    getDishesForAutocomplete,\n    updateFilters,\n    abortPageRequests,\n    setPage,\n    clearAutocomplete\n};\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n\n@AppCleanHOC\nclass DishAutocomplete extends PureComponent {\n\n    makeRequest(rest) {\n        const {\n            getDishesForAutocomplete,\n            category_id,\n            updateFilters,\n            filters,\n            withSizes,\n            withExtras\n        } = this.props;\n        const body = {...filters, category_id, ...rest, withSizes, withExtras};\n\n        updateFilters(body);\n        getDishesForAutocomplete({body});\n    }\n\n    componentWillUnmount() {\n        const {clearAutocomplete} = this.props;\n        clearAutocomplete();\n    }\n\n    @autobind\n    onInputChange(name) {\n        this.makeRequest({name})\n    }\n\n    @autobind\n    onMenuScrollToBottom(event) {\n        const {\n            setPage, filters: {\n                page\n            },\n            getDishesForAutocomplete,\n            category_id,\n            withSizes,\n            withExtras\n        } = this.props;\n        const body = {page: page + 1, category_id, withSizes, withExtras};\n\n        setPage(page + 1);\n        getDishesForAutocomplete({body});\n    }\n\n    @autobind\n    onChange({value}) {\n        const {onChange, dishes} = this.props;\n        const dish = dishes.find(dish => dish.value === value) || {label: '', value: ''};\n        onChange(dish);\n    };\n\n    @autobind\n    componentDidMount() {\n        this.makeRequest();\n    }\n\n    render() {\n        const {dishes} = this.props;\n        return (\n            <div className={ 'dish-autocomplete-wrapper' }>\n                <AppAutoComplete\n\n                    { ...HelperService.pick(this.props, [\n                        'loading',\n                        'compareKey',\n                        'value',\n                        'count'\n                    ]) }\n\n                    onMenuScrollToBottom={ this.onMenuScrollToBottom }\n                    onInputChange={ this.onInputChange }\n                    options={ dishes }\n                    className={ 'dish-autocomplete' }\n                    onChange={ this.onChange }\n                    placeholder=\"Dish\"\n                />\n            </div>\n        );\n    }\n}\n\nDishAutocomplete.propTypes = {\n    withSizes: PropTypes.bool,\n    withExtras: PropTypes.bool,\n    dishes: PropTypes.array,\n    category_id: PropTypes.string,\n    loading: PropTypes.bool,\n    compareKey: PropTypes.string,\n    onChange: PropTypes.func,\n    theme: PropTypes.object\n};\n\nDishAutocomplete.defaultProps = {\n    compareKey: 'label',\n    withSizes: false,\n    withExtras: false\n};\n\n\n"]},"metadata":{},"sourceType":"module"}