{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Header/components/AdminNav/AdminNav.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { autobind } from 'core-decorators';\nexport var AdminNav = (_class =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AdminNav, _PureComponent);\n\n  function AdminNav() {\n    _classCallCheck(this, AdminNav);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AdminNav).apply(this, arguments));\n  }\n\n  _createClass(AdminNav, [{\n    key: \"onSignOutClick\",\n    value: function onSignOutClick() {\n      var signOut = this.props.signOut;\n      signOut();\n    }\n  }, {\n    key: \"getMarkupByRole\",\n    value: function getMarkupByRole() {\n      var role = this.props.role;\n\n      switch (role.name) {\n        case 'restaurant':\n          {\n            return React.createElement(Fragment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, React.createElement(NavLink, {\n              to: \"/restaurant_info\",\n              activeClassName: \"active\",\n              className: \"header-nav__list-item\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22\n              },\n              __self: this\n            }, \"Restaurant info\"), React.createElement(NavLink, {\n              to: \"/menu?restaurant_id=\".concat(role.restaurant_id),\n              activeClassName: \"active\",\n              className: \"header-nav__list-item\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28\n              },\n              __self: this\n            }, \"Menu\"), React.createElement(NavLink, {\n              to: \"/designer?restaurant_id=\".concat(role.restaurant_id),\n              activeClassName: \"active\",\n              className: \"header-nav__list-item\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34\n              },\n              __self: this\n            }, \"Page Designer\"), React.createElement(NavLink, {\n              to: \"/restaurant_orders\",\n              activeClassName: \"active\",\n              className: \"header-nav__list-item\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41\n              },\n              __self: this\n            }, \"Orders\"));\n          }\n\n        case 'admin':\n          {\n            return React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52\n              },\n              __self: this\n            }, React.createElement(NavLink, {\n              to: \"/restaurants\",\n              activeClassName: \"active\",\n              className: \"header-nav__list-item\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            }, \"Restaurants\"));\n          }\n\n        default:\n          {\n            return false;\n          }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"nav\", {\n        className: \"header-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"header-nav__list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.getMarkupByRole(), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"header-nav__list-item\",\n        onClick: this.onSignOutClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Sign Out\"))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return AdminNav;\n}(PureComponent), (_applyDecoratedDescriptor(_class.prototype, \"onSignOutClick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onSignOutClick\"), _class.prototype)), _class);\nAdminNav.propTypes = {\n  signOut: PropTypes.func.isRequired\n};\nAdminNav.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AdminNav, \"AdminNav\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Header/components/AdminNav/AdminNav.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Header/components/AdminNav/AdminNav.js"],"names":["React","PureComponent","Fragment","PropTypes","NavLink","autobind","AdminNav","signOut","props","role","name","restaurant_id","getMarkupByRole","onSignOutClick","propTypes","func","isRequired","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,WAAaC,QAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,qCAEmB;AAAA,UACPC,OADO,GACK,KAAKC,KADV,CACPD,OADO;AAEfA,MAAAA,OAAO;AACR;AALH;AAAA;AAAA,sCAOoB;AAAA,UACRE,IADQ,GACC,KAAKD,KADN,CACRC,IADQ;;AAGhB,cAAQA,IAAI,CAACC,IAAb;AACE,aAAK,YAAL;AAAmB;AACjB,mBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,OAAD;AACE,cAAA,EAAE,EAAC,kBADL;AAEE,cAAA,eAAe,EAAC,QAFlB;AAGE,cAAA,SAAS,EAAC,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAOE,oBAAC,OAAD;AACE,cAAA,EAAE,gCAAyBD,IAAI,CAACE,aAA9B,CADJ;AAEE,cAAA,eAAe,EAAC,QAFlB;AAGE,cAAA,SAAS,EAAC,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,EAaE,oBAAC,OAAD;AACE,cAAA,EAAE,oCAA6BF,IAAI,CAACE,aAAlC,CADJ;AAEE,cAAA,eAAe,EAAC,QAFlB;AAGE,cAAA,SAAS,EAAC,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAbF,EAoBE,oBAAC,OAAD;AACE,cAAA,EAAE,EAAC,oBADL;AAEE,cAAA,eAAe,EAAC,QAFlB;AAGE,cAAA,SAAS,EAAC,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBApBF,CADF;AA6BD;;AACD,aAAK,OAAL;AAAc;AACZ,mBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,OAAD;AACE,cAAA,EAAE,EAAC,cADL;AAEE,cAAA,eAAe,EAAC,QAFlB;AAGE,cAAA,SAAS,EAAC,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF;AAUD;;AACD;AAAS;AACP,mBAAO,KAAP;AACD;AA9CH;AAgDD;AA1DH;AAAA;AAAA,6BA4DW;AACP,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,eAAL,EADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,SAAS,EAAC,uBAFZ;AAGE,QAAA,OAAO,EAAE,KAAKC,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAFF,CADF,CADF;AAeD;AA5EH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAA8BZ,aAA9B,mEACGI,QADH;AA+EAC,QAAQ,CAACQ,SAAT,GAAqB;AACnBP,EAAAA,OAAO,EAAEJ,SAAS,CAACY,IAAV,CAAeC;AADL,CAArB;AAGAV,QAAQ,CAACW,YAAT,GAAwB,EAAxB;;;;;;;;;;0BAlFaX,Q","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport { autobind } from 'core-decorators';\n\nexport class AdminNav extends PureComponent {\n  @autobind\n  onSignOutClick() {\n    const { signOut } = this.props;\n    signOut();\n  }\n\n  getMarkupByRole() {\n    const { role } = this.props;\n\n    switch (role.name) {\n      case 'restaurant': {\n        return (\n          <Fragment>\n            <NavLink\n              to=\"/restaurant_info\"\n              activeClassName=\"active\"\n              className=\"header-nav__list-item\">\n              Restaurant info\n            </NavLink>\n            <NavLink\n              to={`/menu?restaurant_id=${role.restaurant_id}`}\n              activeClassName=\"active\"\n              className=\"header-nav__list-item\">\n              Menu\n            </NavLink>\n            <NavLink\n              to={`/designer?restaurant_id=${role.restaurant_id}`}\n              activeClassName=\"active\"\n              className=\"header-nav__list-item\">\n              Page Designer\n            </NavLink>\n\n            <NavLink\n              to=\"/restaurant_orders\"\n              activeClassName=\"active\"\n              className=\"header-nav__list-item\">\n              Orders\n            </NavLink>\n          </Fragment>\n        );\n      }\n      case 'admin': {\n        return (\n          <li>\n            <NavLink\n              to=\"/restaurants\"\n              activeClassName=\"active\"\n              className=\"header-nav__list-item\">\n              Restaurants\n            </NavLink>\n          </li>\n        );\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n\n  render() {\n    return (\n      <nav className=\"header-nav\">\n        <ul className=\"header-nav__list\">\n          {this.getMarkupByRole()}\n          <li>\n            <a\n              href=\"#\"\n              className=\"header-nav__list-item\"\n              onClick={this.onSignOutClick}>\n              Sign Out\n            </a>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nAdminNav.propTypes = {\n  signOut: PropTypes.func.isRequired,\n};\nAdminNav.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}