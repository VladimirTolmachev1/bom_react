{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/components/DishList/DishList.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { autobind } from 'core-decorators';\nimport { HelperService } from '../../../../services';\nimport { AppPreloaderSmall } from '../../../../components';\nimport { DISHES_DROPPABLE } from '../../../../modules/dnd';\nimport { DishItem } from '../DishItem';\nimport './DishList.scss';\nexport var DishList = (_class =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(DishList, _PureComponent);\n\n  function DishList() {\n    _classCallCheck(this, DishList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DishList).apply(this, arguments));\n  }\n\n  _createClass(DishList, [{\n    key: \"mapDishItems\",\n    value: function mapDishItems() {\n      var _this = this;\n\n      var _this$props = this.props,\n          dishes = _this$props.dishes,\n          showConfirm = _this$props.showConfirm,\n          isDndMode = _this$props.isDndMode,\n          handleEditDishClick = _this$props.handleEditDishClick;\n      return dishes.map(function (dish, index) {\n        return React.createElement(Draggable, {\n          draggableId: dish.id,\n          index: index,\n          isDragDisabled: !isDndMode,\n          key: \"dish\".concat(dish.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, function (provided) {\n          return React.createElement(\"div\", Object.assign({\n            ref: provided.innerRef\n          }, provided.draggableProps, provided.dragHandleProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }), React.createElement(DishItem, Object.assign({\n            showConfirm: showConfirm,\n            dish: dish,\n            onEditClick: function onEditClick() {\n              return handleEditDishClick(dish.id);\n            }\n          }, HelperService.pick(_this.props, ['showConfirm', 'mode', 'updateDishFilters', 'removeDish', 'addDishInOrder', 'publishDishes', 'toggleDishModal', 'unpublishDishes', 'setDishModalMode', 'setDishSize', 'onBasketClick']), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          })));\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('scroll', this.onScrollToBottom);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('scroll', this.onScrollToBottom);\n    }\n  }, {\n    key: \"onScrollToBottom\",\n    value: function onScrollToBottom() {\n      var _this$props2 = this.props,\n          dishesLoading = _this$props2.dishesLoading,\n          setDishPage = _this$props2.setDishPage,\n          dishFilters = _this$props2.dishFilters,\n          getDishes = _this$props2.getDishes,\n          dishes = _this$props2.dishes,\n          category_id = _this$props2.category_id,\n          dishesCount = _this$props2.dishesCount;\n      var bottomOffset = 20;\n\n      if (dishesLoading || Boolean(dishes.length === dishesCount) || !category_id || !dishesCount || window.innerHeight + window.scrollY < document.body.offsetHeight - bottomOffset) {\n        return false;\n      }\n\n      setDishPage(dishFilters.page + 1);\n      getDishes({\n        body: _objectSpread({}, dishFilters, {\n          page: dishFilters.page + 1,\n          category_id: category_id\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          dishesLoading = _this$props3.dishesLoading,\n          mode = _this$props3.mode,\n          category = _this$props3.category,\n          isDndMode = _this$props3.isDndMode;\n      return React.createElement(Droppable, {\n        droppableId: DISHES_DROPPABLE,\n        isDropDisabled: !isDndMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, function (provided) {\n        return React.createElement(\"div\", Object.assign({\n          className: \"dish-list \".concat(mode !== 'client' ? 'dish-list--admin' : '')\n        }, provided.droppableProps, {\n          ref: provided.innerRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), category && category.name && React.createElement(React.Fragment, null, React.createElement(Typography, {\n          variant: \"h6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, category.name, \":\"), React.createElement(Typography, {\n          align: \"justify\",\n          paragraph: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, category.description)), _this2.mapDishItems(), dishesLoading && React.createElement(AppPreloaderSmall, {\n          className: \"dish-list__preloader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return DishList;\n}(PureComponent), (_applyDecoratedDescriptor(_class.prototype, \"onScrollToBottom\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onScrollToBottom\"), _class.prototype)), _class);\nDishList.propTypes = {\n  category_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  updateDishFilters: PropTypes.func,\n  dishFilters: PropTypes.any,\n  removeDish: PropTypes.func,\n  dishesLoading: PropTypes.bool,\n  publishDishes: PropTypes.func,\n  showConfirm: PropTypes.func,\n  toggleDishModal: PropTypes.func,\n  setDishModalMode: PropTypes.func,\n  dishes: PropTypes.array,\n  mode: PropTypes.string\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DishList, \"DishList\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/components/DishList/DishList.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Menu/components/DishList/DishList.js"],"names":["React","PureComponent","PropTypes","Typography","Draggable","Droppable","autobind","HelperService","AppPreloaderSmall","DISHES_DROPPABLE","DishItem","DishList","props","dishes","showConfirm","isDndMode","handleEditDishClick","map","dish","index","id","provided","innerRef","draggableProps","dragHandleProps","pick","window","addEventListener","onScrollToBottom","removeEventListener","dishesLoading","setDishPage","dishFilters","getDishes","category_id","dishesCount","bottomOffset","Boolean","length","innerHeight","scrollY","document","body","offsetHeight","page","mode","category","droppableProps","name","description","mapDishItems","propTypes","oneOfType","string","number","updateDishFilters","func","any","removeDish","bool","publishDishes","toggleDishModal","setDishModalMode","array"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { autobind } from 'core-decorators';\n\nimport { HelperService } from '../../../../services';\nimport { AppPreloaderSmall } from '../../../../components';\n\nimport { DISHES_DROPPABLE } from '../../../../modules/dnd';\nimport { DishItem } from '../DishItem';\n\nimport './DishList.scss';\n\nexport class DishList extends PureComponent {\n  mapDishItems() {\n    const { dishes, showConfirm, isDndMode, handleEditDishClick } = this.props;\n\n    return dishes.map((dish, index) => {\n      return (\n        <Draggable\n          draggableId={dish.id}\n          index={index}\n          isDragDisabled={!isDndMode}\n          key={`dish${dish.id}`}>\n          {provided => (\n            <div\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}>\n              <DishItem\n                showConfirm={showConfirm}\n                dish={dish}\n                onEditClick={() => handleEditDishClick(dish.id)}\n                {...HelperService.pick(this.props, [\n                  'showConfirm',\n                  'mode',\n                  'updateDishFilters',\n                  'removeDish',\n                  'addDishInOrder',\n                  'publishDishes',\n                  'toggleDishModal',\n                  'unpublishDishes',\n                  'setDishModalMode',\n                  'setDishSize',\n                  'onBasketClick',\n                ])}\n              />\n            </div>\n          )}\n        </Draggable>\n      );\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.onScrollToBottom);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.onScrollToBottom);\n  }\n\n  @autobind\n  onScrollToBottom() {\n    const {\n      dishesLoading,\n      setDishPage,\n      dishFilters,\n      getDishes,\n      dishes,\n      category_id,\n      dishesCount,\n    } = this.props;\n\n    const bottomOffset = 20;\n\n    if (\n      dishesLoading ||\n      Boolean(dishes.length === dishesCount) ||\n      !category_id ||\n      !dishesCount ||\n      window.innerHeight + window.scrollY <\n        document.body.offsetHeight - bottomOffset\n    ) {\n      return false;\n    }\n\n    setDishPage(dishFilters.page + 1);\n    getDishes({\n      body: {\n        ...dishFilters,\n        page: dishFilters.page + 1,\n        category_id,\n      },\n    });\n  }\n\n  render() {\n    const { dishesLoading, mode, category, isDndMode } = this.props;\n    return (\n      <Droppable droppableId={DISHES_DROPPABLE} isDropDisabled={!isDndMode}>\n        {provided => (\n          <div\n            className={`dish-list ${\n              mode !== 'client' ? 'dish-list--admin' : ''\n            }`}\n            {...provided.droppableProps}\n            ref={provided.innerRef}>\n            {category && category.name && (\n              <>\n                <Typography variant=\"h6\">{category.name}:</Typography>\n                <Typography align=\"justify\" paragraph>\n                  {category.description}\n                </Typography>\n              </>\n            )}\n\n            {this.mapDishItems()}\n\n            {dishesLoading && (\n              <AppPreloaderSmall className=\"dish-list__preloader\" />\n            )}\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n\nDishList.propTypes = {\n  category_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  updateDishFilters: PropTypes.func,\n  dishFilters: PropTypes.any,\n  removeDish: PropTypes.func,\n  dishesLoading: PropTypes.bool,\n  publishDishes: PropTypes.func,\n  showConfirm: PropTypes.func,\n  toggleDishModal: PropTypes.func,\n  setDishModalMode: PropTypes.func,\n  dishes: PropTypes.array,\n  mode: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}