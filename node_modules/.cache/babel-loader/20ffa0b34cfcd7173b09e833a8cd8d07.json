{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nexport var MockApiService =\n/*#__PURE__*/\nfunction () {\n  function MockApiService() {\n    _classCallCheck(this, MockApiService);\n  }\n\n  _createClass(MockApiService, null, [{\n    key: \"createRequestProxy\",\n    value: function createRequestProxy(mock) {\n      var promise = new Promise(function (resolve) {\n        // simulate network\n        setTimeout(function () {\n          resolve(mock);\n        }, 1000);\n      });\n      return {\n        promise: promise,\n        xhr: {\n          abort: function abort() {\n            return console.log('Mock API request aborted');\n          }\n        }\n      };\n    }\n  }, {\n    key: \"get\",\n    value: function get(mock) {\n      return MockApiService.createRequestProxy(mock);\n    }\n  }, {\n    key: \"post\",\n    value: function post(mock) {\n      return MockApiService.createRequestProxy(mock);\n    }\n  }, {\n    key: \"put\",\n    value: function put(mock) {\n      return MockApiService.createRequestProxy(mock);\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(mock) {\n      return MockApiService.createRequestProxy(mock);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(mock) {\n      return MockApiService.createRequestProxy(mock);\n    }\n  }]);\n\n  return MockApiService;\n}();\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MockApiService, \"MockApiService\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/services/MockApiService/MockApiService.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/services/MockApiService/MockApiService.js"],"names":["MockApiService","mock","promise","Promise","resolve","setTimeout","xhr","abort","console","log","createRequestProxy"],"mappings":";;;;;;;;AAAA,WAAaA,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uCAC4BC,IAD5B,EACkC;AAC9B,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACrC;AACAC,QAAAA,UAAU,CAAC,YAAM;AACfD,UAAAA,OAAO,CAACH,IAAD,CAAP;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OALe,CAAhB;AAOA,aAAO;AACLC,QAAAA,OAAO,EAAPA,OADK;AAELI,QAAAA,GAAG,EAAE;AACHC,UAAAA,KAAK,EAAE;AAAA,mBAAMC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAN;AAAA;AADJ;AAFA,OAAP;AAMD;AAfH;AAAA;AAAA,wBAiBaR,IAjBb,EAiBmB;AACf,aAAOD,cAAc,CAACU,kBAAf,CAAkCT,IAAlC,CAAP;AACD;AAnBH;AAAA;AAAA,yBAqBcA,IArBd,EAqBoB;AAChB,aAAOD,cAAc,CAACU,kBAAf,CAAkCT,IAAlC,CAAP;AACD;AAvBH;AAAA;AAAA,wBAyBaA,IAzBb,EAyBmB;AACf,aAAOD,cAAc,CAACU,kBAAf,CAAkCT,IAAlC,CAAP;AACD;AA3BH;AAAA;AAAA,0BA6BeA,IA7Bf,EA6BqB;AACjB,aAAOD,cAAc,CAACU,kBAAf,CAAkCT,IAAlC,CAAP;AACD;AA/BH;AAAA;AAAA,4BAiCgBA,IAjChB,EAiCsB;AAClB,aAAOD,cAAc,CAACU,kBAAf,CAAkCT,IAAlC,CAAP;AACD;AAnCH;;AAAA;AAAA;;;;;;;;;;0BAAaD,c","sourcesContent":["export class MockApiService {\n  static createRequestProxy(mock) {\n    const promise = new Promise(resolve => {\n      // simulate network\n      setTimeout(() => {\n        resolve(mock);\n      }, 1000);\n    });\n\n    return {\n      promise,\n      xhr: {\n        abort: () => console.log('Mock API request aborted'),\n      },\n    };\n  }\n\n  static get(mock) {\n    return MockApiService.createRequestProxy(mock);\n  }\n\n  static post(mock) {\n    return MockApiService.createRequestProxy(mock);\n  }\n\n  static put(mock) {\n    return MockApiService.createRequestProxy(mock);\n  }\n\n  static patch(mock) {\n    return MockApiService.createRequestProxy(mock);\n  }\n\n  static delete(mock) {\n    return MockApiService.createRequestProxy(mock);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}