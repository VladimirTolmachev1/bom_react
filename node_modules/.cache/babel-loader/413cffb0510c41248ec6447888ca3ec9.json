{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { SIGN_IN_SUCCESS, SIGN_OUT, getDictionaries } from '../../modules/core';\nimport { HelperService } from '../../services';\n\nvar _default = function _default(store) {\n  return function (next) {\n    return function (action) {\n      switch (action.type) {\n        case SIGN_IN_SUCCESS:\n          {\n            HelperService.setInStorage(localStorage, 'token', action.response.token);\n            store.dispatch(getDictionaries());\n            return next(action);\n          }\n\n        case SIGN_OUT:\n          {\n            HelperService.popFromStorage(localStorage, 'token');\n            return next(action);\n          }\n\n        default:\n          {\n            return next(action);\n          }\n      }\n    };\n  };\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/store/middleware/sessionMiddleware.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/store/middleware/sessionMiddleware.js"],"names":["SIGN_IN_SUCCESS","SIGN_OUT","getDictionaries","HelperService","store","next","action","type","setInStorage","localStorage","response","token","dispatch","popFromStorage"],"mappings":";;;;;AAAA,SAASA,eAAT,EAA0BC,QAA1B,EAAoCC,eAApC,QAA2D,oBAA3D;AACA,SAASC,aAAT,QAA8B,gBAA9B;;eAEe,kBAAAC,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACxC,cAAQA,MAAM,CAACC,IAAf;AACE,aAAKP,eAAL;AAAsB;AACpBG,YAAAA,aAAa,CAACK,YAAd,CAA2BC,YAA3B,EAAyC,OAAzC,EAAkDH,MAAM,CAACI,QAAP,CAAgBC,KAAlE;AACAP,YAAAA,KAAK,CAACQ,QAAN,CAAeV,eAAe,EAA9B;AACA,mBAAOG,IAAI,CAACC,MAAD,CAAX;AACD;;AAED,aAAKL,QAAL;AAAe;AACbE,YAAAA,aAAa,CAACU,cAAd,CAA6BJ,YAA7B,EAA2C,OAA3C;AAEA,mBAAOJ,IAAI,CAACC,MAAD,CAAX;AACD;;AAED;AAAS;AACP,mBAAOD,IAAI,CAACC,MAAD,CAAX;AACD;AAfH;AAiBD,KAlB2B;AAAA,GAAR;AAAA,C;;AAApB","sourcesContent":["import { SIGN_IN_SUCCESS, SIGN_OUT, getDictionaries } from '../../modules/core';\nimport { HelperService } from '../../services';\n\nexport default store => next => action => {\n  switch (action.type) {\n    case SIGN_IN_SUCCESS: {\n      HelperService.setInStorage(localStorage, 'token', action.response.token);\n      store.dispatch(getDictionaries());\n      return next(action);\n    }\n\n    case SIGN_OUT: {\n      HelperService.popFromStorage(localStorage, 'token');\n\n      return next(action);\n    }\n\n    default: {\n      return next(action);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}