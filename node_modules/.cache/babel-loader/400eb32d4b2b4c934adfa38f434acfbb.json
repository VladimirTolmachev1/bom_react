{"ast":null,"code":"import _regeneratorRuntime from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _dec2,\n    _dec3,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\nimport styles from './styles';\nimport { createOrderCharge } from '../../modules';\nimport { StripeService } from '../../../../services';\nimport { AppFormTextField, AppFormMaskTextField, StripeCheckoutToggler, AppPreloaderSmall, AddressFormFields, AppFormSelect, AppSwitch } from '../../../../components';\nimport { checkoutValidations } from '../../modules/checkout.validations';\nimport { PHONE_MASK, PAY_NOW_OPTION, PAY_ON_PICKUP_OPTION, PAY_ON_DELIVERY_OPTION, DELIVERY_METHOD, PICKUP_METHOD, deliveryMethods, paymentMethods } from '../../../../constants';\nimport './PaymentDetailsTab.scss';\nvar ORDER_FORM = 'Order form';\nvar formFieldsSelector = formValueSelector(ORDER_FORM);\nvar FORM_FIELDS_TO_SELECT = ['name', 'email', 'phone', 'city', 'street_address', 'building', 'appartment', 'zipcode', 'payment_method', 'comment'];\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    formValues: formFieldsSelector.apply(void 0, [state].concat(FORM_FIELDS_TO_SELECT))\n  };\n};\n\nvar PaymentDetailsTab = (_dec = withStyles(styles), _dec2 = connect(mapStateToProps, {\n  createOrderCharge: createOrderCharge\n}), _dec3 = reduxForm({\n  form: ORDER_FORM,\n  enableReinitialize: true,\n  validate: checkoutValidations\n}), _dec(_class = _dec2(_class = _dec3(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(PaymentDetailsTab, _PureComponent);\n\n  function PaymentDetailsTab() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PaymentDetailsTab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PaymentDetailsTab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      pickupByMySelf: false\n    };\n    return _this;\n  }\n\n  _createClass(PaymentDetailsTab, [{\n    key: \"getPaymentOptions\",\n    value: function getPaymentOptions() {\n      var _this$props$restauran = this.props.restaurant,\n          delivery_method = _this$props$restauran.delivery_method,\n          connected_stripe = _this$props$restauran.connected_stripe;\n      var pickupByMySelf = this.state.pickupByMySelf;\n      var resultOptions = [];\n\n      switch (delivery_method) {\n        case deliveryMethods.PICKUP_AND_DELIVERY:\n          {\n            resultOptions = pickupByMySelf ? [PAY_ON_PICKUP_OPTION] : [PAY_ON_DELIVERY_OPTION];\n            break;\n          }\n\n        case deliveryMethods.PICKUP_ONLY:\n          {\n            resultOptions = [PAY_ON_PICKUP_OPTION];\n            break;\n          }\n\n        case deliveryMethods.DELIVERY_ONLY:\n          {\n            resultOptions = [PAY_ON_DELIVERY_OPTION];\n            break;\n          }\n\n        default:\n          {\n            console.error(\"Unknown delivery method '\".concat(delivery_method, \"' !\"));\n          }\n      }\n\n      if (connected_stripe) {\n        resultOptions.push(PAY_NOW_OPTION);\n      }\n\n      return resultOptions;\n    }\n  }, {\n    key: \"getOrderDeliveryMethod\",\n    value: function getOrderDeliveryMethod() {\n      return this.hasDelivery() ? DELIVERY_METHOD : PICKUP_METHOD;\n    }\n  }, {\n    key: \"onSubmitClick\",\n    value: function onSubmitClick() {\n      var _this$props = this.props,\n          onSubmit = _this$props.onSubmit,\n          body = _this$props.formValues,\n          orderPriceInCoins = _this$props.orderPriceInCoins;\n      body.total_price = orderPriceInCoins;\n      body.delivery_method = this.getOrderDeliveryMethod();\n      onSubmit && onSubmit(body);\n    }\n  }, {\n    key: \"handleStripeCheckout\",\n    value: function () {\n      var _handleStripeCheckout = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(token) {\n        var _this$props2, id, createOrderCharge, orderPriceInCoins;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props2 = this.props, id = _this$props2.restaurant.id, createOrderCharge = _this$props2.createOrderCharge, orderPriceInCoins = _this$props2.orderPriceInCoins;\n                _context.prev = 1;\n                _context.next = 4;\n                return createOrderCharge({\n                  body: {\n                    amount: orderPriceInCoins,\n                    restaurant_id: +id,\n                    token: token.id\n                  }\n                }).promise;\n\n              case 4:\n                this.onSubmitClick();\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      return function handleStripeCheckout(_x) {\n        return _handleStripeCheckout.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"onChangeZipCode\",\n    value: function onChangeZipCode(_ref) {\n      var _ref$value = _ref.value,\n          value = _ref$value === void 0 ? '' : _ref$value,\n          city = _ref.city;\n      var change = this.props.change;\n      change('zipcode', value);\n      change('city', city);\n    }\n  }, {\n    key: \"hasDelivery\",\n    value: function hasDelivery() {\n      if (this.props.restaurant.delivery_method === deliveryMethods.PICKUP_ONLY || this.state.pickupByMySelf) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"handleDeliveryMethodChange\",\n    value: function handleDeliveryMethodChange(_ref2) {\n      var checked = _ref2.target.checked;\n      this.setState({\n        pickupByMySelf: checked\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          delivery_method = _this$props3.restaurant.delivery_method,\n          _this$props3$formValu = _this$props3.formValues,\n          zipcode = _this$props3$formValu.zipcode,\n          payment_method = _this$props3$formValu.payment_method,\n          isOrderCreating = _this$props3.isOrderCreating,\n          orderPriceInCoins = _this$props3.orderPriceInCoins,\n          invalid = _this$props3.invalid,\n          classes = _this$props3.classes;\n      var pickupByMySelf = this.state.pickupByMySelf;\n      var isAddressRequired = this.hasDelivery();\n      return React.createElement(\"div\", {\n        className: \"order-placement-tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"order-placement-tab__user-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"order-placement__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, isOrderCreating && React.createElement(AppPreloaderSmall, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(Field, {\n        required: true,\n        multiline: true,\n        name: \"name\",\n        label: \"Your name\",\n        component: AppFormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(Field, {\n        required: true,\n        name: \"email\",\n        type: \"email\",\n        label: \"Your Email\",\n        component: AppFormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(Field, {\n        required: true,\n        name: \"phone\",\n        label: \"Phone number\",\n        mask: PHONE_MASK,\n        component: AppFormMaskTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), delivery_method === deliveryMethods.PICKUP_AND_DELIVERY && React.createElement(AppSwitch, {\n        label: \"Choose delivery service\",\n        offCaption: \"Delivery\",\n        onCaption: \"Pickup\",\n        onChange: this.handleDeliveryMethodChange,\n        checked: pickupByMySelf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(Field, {\n        required: true,\n        withoutNone: true,\n        name: \"payment_method\",\n        label: \"Select payment method\",\n        options: this.getPaymentOptions(),\n        component: AppFormSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), isAddressRequired && React.createElement(AddressFormFields, {\n        zipcode: zipcode,\n        onChangeZipCode: this.onChangeZipCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(Field, {\n        multiline: true,\n        name: \"comment\",\n        label: \"Comment to the order\",\n        component: AppFormTextField,\n        className: classes.orderCommentField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), payment_method === paymentMethods.PAY_NOW ? React.createElement(StripeCheckoutToggler, {\n        togglerButtonProps: {\n          disabled: Boolean(isOrderCreating || invalid)\n        },\n        stripeKey: StripeService.getStripePublishKey(),\n        onToken: this.handleStripeCheckout,\n        priceInCoins: orderPriceInCoins,\n        title: \"Pay for order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Pay and place\") : React.createElement(Button, {\n        onClick: this.onSubmitClick,\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: isOrderCreating || invalid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Place my order\"))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return PaymentDetailsTab;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onSubmitClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onSubmitClick\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"handleStripeCheckout\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"handleStripeCheckout\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onChangeZipCode\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onChangeZipCode\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"handleDeliveryMethodChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"handleDeliveryMethodChange\"), _class2.prototype)), _class2)) || _class) || _class) || _class);\nexport { PaymentDetailsTab as default };\nPaymentDetailsTab.propTypes = {\n  restaurant: PropTypes.object,\n  isOrderCreating: PropTypes.bool\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ORDER_FORM, \"ORDER_FORM\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js\");\n  reactHotLoader.register(formFieldsSelector, \"formFieldsSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js\");\n  reactHotLoader.register(FORM_FIELDS_TO_SELECT, \"FORM_FIELDS_TO_SELECT\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js\");\n  reactHotLoader.register(PaymentDetailsTab, \"PaymentDetailsTab\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Checkout/components/PaymentDetailsTab/PaymentDetailsTab.js"],"names":["React","PureComponent","PropTypes","Button","withStyles","connect","autobind","Field","reduxForm","formValueSelector","styles","createOrderCharge","StripeService","AppFormTextField","AppFormMaskTextField","StripeCheckoutToggler","AppPreloaderSmall","AddressFormFields","AppFormSelect","AppSwitch","checkoutValidations","PHONE_MASK","PAY_NOW_OPTION","PAY_ON_PICKUP_OPTION","PAY_ON_DELIVERY_OPTION","DELIVERY_METHOD","PICKUP_METHOD","deliveryMethods","paymentMethods","ORDER_FORM","formFieldsSelector","FORM_FIELDS_TO_SELECT","mapStateToProps","state","formValues","PaymentDetailsTab","form","enableReinitialize","validate","pickupByMySelf","props","restaurant","delivery_method","connected_stripe","resultOptions","PICKUP_AND_DELIVERY","PICKUP_ONLY","DELIVERY_ONLY","console","error","push","hasDelivery","onSubmit","body","orderPriceInCoins","total_price","getOrderDeliveryMethod","token","id","amount","restaurant_id","promise","onSubmitClick","value","city","change","checked","target","setState","zipcode","payment_method","isOrderCreating","invalid","classes","isAddressRequired","handleDeliveryMethodChange","getPaymentOptions","onChangeZipCode","orderCommentField","PAY_NOW","disabled","Boolean","getStripePublishKey","handleStripeCheckout","propTypes","object","bool"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\n\nimport styles from './styles';\nimport { createOrderCharge } from '../../modules';\nimport { StripeService } from '../../../../services';\nimport {\n  AppFormTextField,\n  AppFormMaskTextField,\n  StripeCheckoutToggler,\n  AppPreloaderSmall,\n  AddressFormFields,\n  AppFormSelect,\n  AppSwitch,\n} from '../../../../components';\nimport { checkoutValidations } from '../../modules/checkout.validations';\nimport {\n  PHONE_MASK,\n  PAY_NOW_OPTION,\n  PAY_ON_PICKUP_OPTION,\n  PAY_ON_DELIVERY_OPTION,\n  DELIVERY_METHOD,\n  PICKUP_METHOD,\n  deliveryMethods,\n  paymentMethods,\n} from '../../../../constants';\n\nimport './PaymentDetailsTab.scss';\n\nconst ORDER_FORM = 'Order form';\nconst formFieldsSelector = formValueSelector(ORDER_FORM);\n\nconst FORM_FIELDS_TO_SELECT = [\n  'name',\n  'email',\n  'phone',\n  'city',\n  'street_address',\n  'building',\n  'appartment',\n  'zipcode',\n  'payment_method',\n  'comment',\n];\n\nconst mapStateToProps = state => ({\n  formValues: formFieldsSelector(state, ...FORM_FIELDS_TO_SELECT),\n});\n\nexport default\n@withStyles(styles)\n@connect(\n  mapStateToProps,\n  { createOrderCharge },\n)\n@reduxForm({\n  form: ORDER_FORM,\n  enableReinitialize: true,\n  validate: checkoutValidations,\n})\nclass PaymentDetailsTab extends PureComponent {\n  state = {\n    pickupByMySelf: false,\n  };\n\n  getPaymentOptions() {\n    const {\n      restaurant: { delivery_method, connected_stripe },\n    } = this.props;\n    const { pickupByMySelf } = this.state;\n\n    let resultOptions = [];\n\n    switch (delivery_method) {\n      case deliveryMethods.PICKUP_AND_DELIVERY: {\n        resultOptions = pickupByMySelf\n          ? [PAY_ON_PICKUP_OPTION]\n          : [PAY_ON_DELIVERY_OPTION];\n        break;\n      }\n\n      case deliveryMethods.PICKUP_ONLY: {\n        resultOptions = [PAY_ON_PICKUP_OPTION];\n        break;\n      }\n\n      case deliveryMethods.DELIVERY_ONLY: {\n        resultOptions = [PAY_ON_DELIVERY_OPTION];\n        break;\n      }\n\n      default: {\n        console.error(`Unknown delivery method '${delivery_method}' !`);\n      }\n    }\n\n    if (connected_stripe) {\n      resultOptions.push(PAY_NOW_OPTION);\n    }\n\n    return resultOptions;\n  }\n\n  getOrderDeliveryMethod() {\n    return this.hasDelivery() ? DELIVERY_METHOD : PICKUP_METHOD;\n  }\n\n  @autobind\n  onSubmitClick() {\n    const { onSubmit, formValues: body, orderPriceInCoins } = this.props;\n\n    body.total_price = orderPriceInCoins;\n    body.delivery_method = this.getOrderDeliveryMethod();\n\n    onSubmit && onSubmit(body);\n  }\n\n  @autobind\n  async handleStripeCheckout(token) {\n    const {\n      restaurant: { id },\n      createOrderCharge,\n      orderPriceInCoins,\n    } = this.props;\n\n    try {\n      await createOrderCharge({\n        body: {\n          amount: orderPriceInCoins,\n          restaurant_id: +id,\n          token: token.id,\n        },\n      }).promise;\n\n      this.onSubmitClick();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  @autobind\n  onChangeZipCode({ value = '', city }) {\n    const { change } = this.props;\n    change('zipcode', value);\n    change('city', city);\n  }\n\n  hasDelivery() {\n    if (\n      this.props.restaurant.delivery_method === deliveryMethods.PICKUP_ONLY ||\n      this.state.pickupByMySelf\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  @autobind\n  handleDeliveryMethodChange({ target: { checked } }) {\n    this.setState({\n      pickupByMySelf: checked,\n    });\n  }\n\n  render() {\n    const {\n      restaurant: { delivery_method },\n      formValues: { zipcode, payment_method },\n      isOrderCreating,\n      orderPriceInCoins,\n      invalid,\n      classes,\n    } = this.props;\n\n    const { pickupByMySelf } = this.state;\n\n    const isAddressRequired = this.hasDelivery();\n\n    return (\n      <div className=\"order-placement-tab\">\n        <div className=\"order-placement-tab__user-form\">\n          <form className=\"order-placement__form\">\n            {isOrderCreating && <AppPreloaderSmall />}\n            <Field\n              required\n              multiline\n              name=\"name\"\n              label=\"Your name\"\n              component={AppFormTextField}\n            />\n\n            <Field\n              required\n              name=\"email\"\n              type=\"email\"\n              label=\"Your Email\"\n              component={AppFormTextField}\n            />\n\n            <Field\n              required\n              name=\"phone\"\n              label=\"Phone number\"\n              mask={PHONE_MASK}\n              component={AppFormMaskTextField}\n            />\n\n            {delivery_method === deliveryMethods.PICKUP_AND_DELIVERY && (\n              <AppSwitch\n                label=\"Choose delivery service\"\n                offCaption=\"Delivery\"\n                onCaption=\"Pickup\"\n                onChange={this.handleDeliveryMethodChange}\n                checked={pickupByMySelf}\n              />\n            )}\n\n            <Field\n              required\n              withoutNone\n              name=\"payment_method\"\n              label=\"Select payment method\"\n              options={this.getPaymentOptions()}\n              component={AppFormSelect}\n            />\n\n            {isAddressRequired && (\n              <AddressFormFields\n                zipcode={zipcode}\n                onChangeZipCode={this.onChangeZipCode}\n              />\n            )}\n\n            <Field\n              multiline\n              name=\"comment\"\n              label=\"Comment to the order\"\n              component={AppFormTextField}\n              className={classes.orderCommentField}\n            />\n\n            {payment_method === paymentMethods.PAY_NOW ? (\n              <StripeCheckoutToggler\n                togglerButtonProps={{\n                  disabled: Boolean(isOrderCreating || invalid),\n                }}\n                stripeKey={StripeService.getStripePublishKey()}\n                onToken={this.handleStripeCheckout}\n                priceInCoins={orderPriceInCoins}\n                title=\"Pay for order\">\n                Pay and place\n              </StripeCheckoutToggler>\n            ) : (\n              <Button\n                onClick={this.onSubmitClick}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isOrderCreating || invalid}>\n                Place my order\n              </Button>\n            )}\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nPaymentDetailsTab.propTypes = {\n  restaurant: PropTypes.object,\n  isOrderCreating: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}