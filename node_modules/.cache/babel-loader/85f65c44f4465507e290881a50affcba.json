{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormSetHoursControl/AppFormSetHoursControl.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport TimePicker from 'rc-time-picker';\nimport { FormControl, FormLabel, withStyles } from '@material-ui/core';\nimport styles from './styles';\nimport { TIME_FORMAT, DEFAULT_MOMENT_FORMAT } from '../../constants';\nvar defaultTimeValue = moment().hours(8).minutes(0);\n\nvar handleChange = function handleChange(reduxFormChangeHandler) {\n  return function (time) {\n    reduxFormChangeHandler(time ? time.format() : '');\n  };\n};\n\nvar formatValue = function formatValue(val) {\n  if (!val) return null;\n  return moment(val, [DEFAULT_MOMENT_FORMAT, TIME_FORMAT]);\n};\n\nexport var AppFormSetHoursControl = function AppFormSetHoursControl(_ref) {\n  var input = _ref.input,\n      meta = _ref.meta,\n      label = _ref.label,\n      classes = _ref.classes,\n      rest = _objectWithoutProperties(_ref, [\"input\", \"meta\", \"label\", \"classes\"]);\n\n  return React.createElement(FormControl, {\n    className: classes.timepickerWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.timepickerLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, label), React.createElement(TimePicker, Object.assign({}, input, {\n    use12Hours: true,\n    inputReadOnly: true,\n    format: TIME_FORMAT,\n    showSecond: false,\n    defaultOpenValue: defaultTimeValue,\n    onChange: handleChange(input.onChange),\n    value: formatValue(input.value),\n    minuteStep: 5\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n};\nAppFormSetHoursControl.propTypes = {\n  label: PropTypes.node.isRequired,\n  input: PropTypes.shape({\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool.isRequired,\n    error: PropTypes.string\n  }).isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nvar _default = withStyles(styles)(AppFormSetHoursControl);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(defaultTimeValue, \"defaultTimeValue\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormSetHoursControl/AppFormSetHoursControl.js\");\n  reactHotLoader.register(handleChange, \"handleChange\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormSetHoursControl/AppFormSetHoursControl.js\");\n  reactHotLoader.register(formatValue, \"formatValue\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormSetHoursControl/AppFormSetHoursControl.js\");\n  reactHotLoader.register(AppFormSetHoursControl, \"AppFormSetHoursControl\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormSetHoursControl/AppFormSetHoursControl.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormSetHoursControl/AppFormSetHoursControl.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppFormSetHoursControl/AppFormSetHoursControl.js"],"names":["React","PropTypes","moment","TimePicker","FormControl","FormLabel","withStyles","styles","TIME_FORMAT","DEFAULT_MOMENT_FORMAT","defaultTimeValue","hours","minutes","handleChange","reduxFormChangeHandler","time","format","formatValue","val","AppFormSetHoursControl","input","meta","label","classes","rest","timepickerWrapper","timepickerLabel","onChange","value","propTypes","node","isRequired","shape","string","touched","bool","error","object"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,mBAAnD;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,EAAsBC,qBAAtB,QAAmD,iBAAnD;AAEA,IAAMC,gBAAgB,GAAGR,MAAM,GAC5BS,KADsB,CAChB,CADgB,EAEtBC,OAFsB,CAEd,CAFc,CAAzB;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,sBAAsB;AAAA,SAAI,UAAAC,IAAI,EAAI;AACrDD,IAAAA,sBAAsB,CAACC,IAAI,GAAGA,IAAI,CAACC,MAAL,EAAH,GAAmB,EAAxB,CAAtB;AACD,GAF0C;AAAA,CAA3C;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,GAAG,EAAI;AACzB,MAAI,CAACA,GAAL,EAAU,OAAO,IAAP;AACV,SAAOhB,MAAM,CAACgB,GAAD,EAAM,CAACT,qBAAD,EAAwBD,WAAxB,CAAN,CAAb;AACD,CAHD;;AAKA,OAAO,IAAMW,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,MACpCC,KADoC,QACpCA,KADoC;AAAA,MAEpCC,IAFoC,QAEpCA,IAFoC;AAAA,MAGpCC,KAHoC,QAGpCA,KAHoC;AAAA,MAIpCC,OAJoC,QAIpCA,OAJoC;AAAA,MAKjCC,IALiC;;AAAA,SAOpC,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAED,OAAO,CAACE,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEF,OAAO,CAACG,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDJ,KAAhD,CADF,EAGE,oBAAC,UAAD,oBACMF,KADN;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,aAAa,MAHf;AAIE,IAAA,MAAM,EAAEZ,WAJV;AAKE,IAAA,UAAU,EAAE,KALd;AAME,IAAA,gBAAgB,EAAEE,gBANpB;AAOE,IAAA,QAAQ,EAAEG,YAAY,CAACO,KAAK,CAACO,QAAP,CAPxB;AAQE,IAAA,KAAK,EAAEV,WAAW,CAACG,KAAK,CAACQ,KAAP,CARpB;AASE,IAAA,UAAU,EAAE;AATd,KAUMJ,IAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHF,CAPoC;AAAA,CAA/B;AAyBPL,sBAAsB,CAACU,SAAvB,GAAmC;AACjCP,EAAAA,KAAK,EAAErB,SAAS,CAAC6B,IAAV,CAAeC,UADW;AAGjCX,EAAAA,KAAK,EAAEnB,SAAS,CAAC+B,KAAV,CAAgB;AACrBJ,IAAAA,KAAK,EAAE3B,SAAS,CAACgC,MAAV,CAAiBF;AADH,GAAhB,EAEJA,UAL8B;AAOjCV,EAAAA,IAAI,EAAEpB,SAAS,CAAC+B,KAAV,CAAgB;AACpBE,IAAAA,OAAO,EAAEjC,SAAS,CAACkC,IAAV,CAAeJ,UADJ;AAEpBK,IAAAA,KAAK,EAAEnC,SAAS,CAACgC;AAFG,GAAhB,EAGHF,UAV8B;AAYjCR,EAAAA,OAAO,EAAEtB,SAAS,CAACoC,MAAV,CAAiBN;AAZO,CAAnC;;eAeezB,UAAU,CAACC,MAAD,CAAV,CAAmBY,sBAAnB,C;;AAAf;;;;;;;;;;0BArDMT,gB;0BAIAG,Y;0BAIAI,W;0BAKOE,sB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport TimePicker from 'rc-time-picker';\nimport { FormControl, FormLabel, withStyles } from '@material-ui/core';\n\nimport styles from './styles';\nimport { TIME_FORMAT, DEFAULT_MOMENT_FORMAT } from '../../constants';\n\nconst defaultTimeValue = moment()\n  .hours(8)\n  .minutes(0);\n\nconst handleChange = reduxFormChangeHandler => time => {\n  reduxFormChangeHandler(time ? time.format() : '');\n};\n\nconst formatValue = val => {\n  if (!val) return null;\n  return moment(val, [DEFAULT_MOMENT_FORMAT, TIME_FORMAT]);\n};\n\nexport const AppFormSetHoursControl = ({\n  input,\n  meta,\n  label,\n  classes,\n  ...rest\n}) => (\n  <FormControl className={classes.timepickerWrapper}>\n    <FormLabel className={classes.timepickerLabel}>{label}</FormLabel>\n\n    <TimePicker\n      {...input}\n      use12Hours\n      inputReadOnly\n      format={TIME_FORMAT}\n      showSecond={false}\n      defaultOpenValue={defaultTimeValue}\n      onChange={handleChange(input.onChange)}\n      value={formatValue(input.value)}\n      minuteStep={5}\n      {...rest}\n    />\n  </FormControl>\n);\n\nAppFormSetHoursControl.propTypes = {\n  label: PropTypes.node.isRequired,\n\n  input: PropTypes.shape({\n    value: PropTypes.string.isRequired,\n  }).isRequired,\n\n  meta: PropTypes.shape({\n    touched: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n  }).isRequired,\n\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppFormSetHoursControl);\n"]},"metadata":{},"sourceType":"module"}