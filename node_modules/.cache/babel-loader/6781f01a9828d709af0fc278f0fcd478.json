{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { createSelector } from 'reselect';\nimport { resource } from './dish-autocomplete.modules';\nexport var _dishAutocompleteSliceSelector = function _dishAutocompleteSliceSelector(state) {\n  return state[resource];\n};\nexport var dishesListSelector = createSelector([_dishAutocompleteSliceSelector], function (slice) {\n  return slice.data.map(function (_ref) {\n    var name = _ref.name,\n        id = _ref.id,\n        extras = _ref.extras,\n        extra_lists = _ref.extra_lists,\n        sizes = _ref.sizes;\n    return {\n      label: name,\n      value: id,\n      extra_lists: extra_lists,\n      extras: extras,\n      sizes: sizes\n    };\n  });\n});\nexport var dishesFiltersSelector = function dishesFiltersSelector(state) {\n  return _dishAutocompleteSliceSelector(state).filters;\n};\nexport var dishesLoadingSelector = function dishesLoadingSelector(state) {\n  return _dishAutocompleteSliceSelector(state).loading;\n};\nexport var dishesCountSelector = function dishesCountSelector(state) {\n  return _dishAutocompleteSliceSelector(state).count;\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_dishAutocompleteSliceSelector, \"_dishAutocompleteSliceSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/DishAutocomplete/modules/dish-autocomplete.selectors.js\");\n  reactHotLoader.register(dishesListSelector, \"dishesListSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/DishAutocomplete/modules/dish-autocomplete.selectors.js\");\n  reactHotLoader.register(dishesFiltersSelector, \"dishesFiltersSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/DishAutocomplete/modules/dish-autocomplete.selectors.js\");\n  reactHotLoader.register(dishesLoadingSelector, \"dishesLoadingSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/DishAutocomplete/modules/dish-autocomplete.selectors.js\");\n  reactHotLoader.register(dishesCountSelector, \"dishesCountSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/DishAutocomplete/modules/dish-autocomplete.selectors.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/DishAutocomplete/modules/dish-autocomplete.selectors.js"],"names":["createSelector","resource","_dishAutocompleteSliceSelector","state","dishesListSelector","slice","data","map","name","id","extras","extra_lists","sizes","label","value","dishesFiltersSelector","filters","dishesLoadingSelector","loading","dishesCountSelector","count"],"mappings":";;;;;AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,QAAT,QAAyB,6BAAzB;AAEA,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACF,QAAD,CAAT;AAAA,CAA5C;AAEP,OAAO,IAAMG,kBAAkB,GAAGJ,cAAc,CAC9C,CAACE,8BAAD,CAD8C,EAE9C,UAAAG,KAAK,EAAI;AACP,SAAOA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,QAASC,EAAT,QAASA,EAAT;AAAA,QAAaC,MAAb,QAAaA,MAAb;AAAA,QAAqBC,WAArB,QAAqBA,WAArB;AAAA,QAAkCC,KAAlC,QAAkCA,KAAlC;AAAA,WAA+C;AACnEC,MAAAA,KAAK,EAAEL,IAD4D;AAEnEM,MAAAA,KAAK,EAAEL,EAF4D;AAGnEE,MAAAA,WAAW,EAAXA,WAHmE;AAInED,MAAAA,MAAM,EAANA,MAJmE;AAKnEE,MAAAA,KAAK,EAALA;AALmE,KAA/C;AAAA,GAAf,CAAP;AAOD,CAV6C,CAAzC;AAaP,OAAO,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAZ,KAAK;AAAA,SACxCD,8BAA8B,CAACC,KAAD,CAA9B,CAAsCa,OADE;AAAA,CAAnC;AAEP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAd,KAAK;AAAA,SACxCD,8BAA8B,CAACC,KAAD,CAA9B,CAAsCe,OADE;AAAA,CAAnC;AAEP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAhB,KAAK;AAAA,SACtCD,8BAA8B,CAACC,KAAD,CAA9B,CAAsCiB,KADA;AAAA,CAAjC;;;;;;;;;;0BAnBMlB,8B;0BAEAE,kB;0BAaAW,qB;0BAEAE,qB;0BAEAE,mB","sourcesContent":["import { createSelector } from 'reselect';\nimport { resource } from './dish-autocomplete.modules';\n\nexport const _dishAutocompleteSliceSelector = state => state[resource];\n\nexport const dishesListSelector = createSelector(\n  [_dishAutocompleteSliceSelector],\n  slice => {\n    return slice.data.map(({ name, id, extras, extra_lists, sizes }) => ({\n      label: name,\n      value: id,\n      extra_lists,\n      extras,\n      sizes,\n    }));\n  },\n);\n\nexport const dishesFiltersSelector = state =>\n  _dishAutocompleteSliceSelector(state).filters;\nexport const dishesLoadingSelector = state =>\n  _dishAutocompleteSliceSelector(state).loading;\nexport const dishesCountSelector = state =>\n  _dishAutocompleteSliceSelector(state).count;\n"]},"metadata":{},"sourceType":"module"}