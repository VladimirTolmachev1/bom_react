{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _dec2,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ForgotPassword/ForgotPassword.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport { autobind } from 'core-decorators';\nimport { forgotPassword, abortPageRequests, forgotPasswordLoadingSelector } from '/modules';\nimport { AppCleanHOC, AppPreloaderSmall, AppFormTextField } from '/components/';\nimport { forgotPasswordValidation } from './modules';\nvar formFieldsSelector = formValueSelector('ForgotPassword');\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: forgotPasswordLoadingSelector(state),\n    email: formFieldsSelector(state, 'email')\n  };\n};\n\nvar mapDispatchToProps = {\n  forgotPassword: forgotPassword,\n  abortPageRequests: abortPageRequests\n};\nvar ForgotPassword = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec2 = reduxForm({\n  form: 'ForgotPassword',\n  validate: forgotPasswordValidation\n}), _dec(_class = _dec2(_class = AppCleanHOC(_class = (_class2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForgotPassword, _Component);\n\n  function ForgotPassword() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ForgotPassword)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      success: false\n    };\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          forgotPassword = _this$props.forgotPassword,\n          email = _this$props.email;\n      event.preventDefault();\n      event.stopPropagation();\n      forgotPassword({\n        email: email\n      }).promise.then(function () {\n        _this2.setState({\n          success: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          loading = _this$props2.loading,\n          invalid = _this$props2.invalid;\n      var success = this.state.success;\n\n      if (success) {\n        return React.createElement(\"div\", {\n          className: 'app-static-container auth',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: 'auth__title',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Please, check your email\"));\n      }\n\n      return React.createElement(\"div\", {\n        className: 'app-static-container auth',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: 'auth__title',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Please, enter your email\"), React.createElement(\"form\", {\n        className: 'auth__form',\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, loading && React.createElement(AppPreloaderSmall, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Field, {\n        className: 'auth__field',\n        name: \"email\",\n        required: true,\n        type: 'text',\n        label: \"Email\",\n        component: AppFormTextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        type: 'submit',\n        disabled: loading || invalid,\n        className: 'auth__button',\n        color: 'primary',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Send recovery link\")));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return ForgotPassword;\n}(Component), (_applyDecoratedDescriptor(_class2.prototype, \"onSubmit\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onSubmit\"), _class2.prototype)), _class2)) || _class) || _class) || _class);\nexport { ForgotPassword as default };\nForgotPassword.propTypes = {\n  loading: PropTypes.bool,\n  invalid: PropTypes.bool\n};\nForgotPassword.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(formFieldsSelector, \"formFieldsSelector\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ForgotPassword/ForgotPassword.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ForgotPassword/ForgotPassword.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ForgotPassword/ForgotPassword.js\");\n  reactHotLoader.register(ForgotPassword, \"ForgotPassword\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ForgotPassword/ForgotPassword.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ForgotPassword/ForgotPassword.js"],"names":["React","Component","PropTypes","connect","Field","reduxForm","formValueSelector","Button","autobind","forgotPassword","abortPageRequests","forgotPasswordLoadingSelector","AppCleanHOC","AppPreloaderSmall","AppFormTextField","forgotPasswordValidation","formFieldsSelector","mapStateToProps","state","loading","email","mapDispatchToProps","ForgotPassword","form","validate","success","event","props","preventDefault","stopPropagation","promise","then","setState","invalid","onSubmit","propTypes","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport { autobind } from 'core-decorators';\n\nimport { forgotPassword, abortPageRequests, forgotPasswordLoadingSelector } from '/modules';\nimport { AppCleanHOC, AppPreloaderSmall, AppFormTextField } from '/components/';\nimport { forgotPasswordValidation } from './modules';\n\nconst formFieldsSelector = formValueSelector('ForgotPassword');\n\nconst mapStateToProps = state => ({\n    loading: forgotPasswordLoadingSelector(state),\n    email: formFieldsSelector(state, 'email')\n});\n\nconst mapDispatchToProps = {\n    forgotPassword,\n    abortPageRequests\n};\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n\n@reduxForm({\n    form: 'ForgotPassword',\n    validate: forgotPasswordValidation\n})\n@AppCleanHOC\nclass ForgotPassword extends Component {\n\n    state = {\n        success: false\n    };\n\n    @autobind\n    onSubmit(event) {\n        const {forgotPassword, email} = this.props;\n        event.preventDefault();\n        event.stopPropagation();\n\n        forgotPassword({email})\n            .promise\n            .then(() => {\n                this.setState({\n                    success: true\n                })\n            });\n    }\n\n    render() {\n        const {loading, invalid} = this.props;\n        const {success} = this.state;\n\n        if (success) {\n            return (\n                <div className={ 'app-static-container auth' }>\n                    <h2 className={ 'auth__title' }>Please, check your email</h2>\n                </div>\n            );\n        }\n\n        return (\n            <div className={ 'app-static-container auth' }>\n                <h2 className={ 'auth__title' }>Please, enter your email</h2>\n                <form className={ 'auth__form' } onSubmit={ this.onSubmit }>\n                    { loading && <AppPreloaderSmall/> }\n                    <Field\n                        className={ 'auth__field' }\n                        name=\"email\"\n                        required\n                        type={ 'text' }\n                        label={ \"Email\" }\n                        component={ AppFormTextField }/>\n                    <Button variant=\"contained\"\n                            type={ 'submit' }\n                            disabled={ loading || invalid }\n                            className={ 'auth__button' }\n                            color={ 'primary' }>\n                        Send recovery link\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nForgotPassword.propTypes = {\n    loading: PropTypes.bool,\n    invalid: PropTypes.bool\n};\nForgotPassword.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}