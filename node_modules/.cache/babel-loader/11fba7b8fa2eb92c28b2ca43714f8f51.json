{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/OrderItemForm/components/ClientMultiselectionExtras/ClientMultiselectionExtras.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport { Table, TableBody } from '@material-ui/core';\nimport { ExtrasFormTableRow } from '../ExtrasFormTableRow';\nimport { isNotSatisfiesSizesLimits } from '../../../../../modules/dishes';\n\nvar ClientMultiselectionExtras = function ClientMultiselectionExtras(_ref) {\n  var fields = _ref.fields,\n      change = _ref.change,\n      selectedSizeId = _ref.selectedSizeId;\n  return React.createElement(Table, {\n    padding: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, fields.map(function (field, index) {\n    var extra = fields.get(index);\n\n    if (isNotSatisfiesSizesLimits(extra, selectedSizeId)) {\n      extra.selected && change(\"\".concat(field, \".selected\"), false);\n      return null;\n    }\n\n    return React.createElement(ExtrasFormTableRow, {\n      key: field,\n      field: field,\n      extra: extra,\n      change: change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  })));\n};\n\nvar _default = ClientMultiselectionExtras;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ClientMultiselectionExtras, \"ClientMultiselectionExtras\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/OrderItemForm/components/ClientMultiselectionExtras/ClientMultiselectionExtras.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/OrderItemForm/components/ClientMultiselectionExtras/ClientMultiselectionExtras.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/OrderItemForm/components/ClientMultiselectionExtras/ClientMultiselectionExtras.js"],"names":["React","Table","TableBody","ExtrasFormTableRow","isNotSatisfiesSizesLimits","ClientMultiselectionExtras","fields","change","selectedSizeId","map","field","index","extra","get","selected"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,mBAAjC;AAEA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,yBAAT,QAA0C,+BAA1C;;AAEA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,MAAWC,MAAX,QAAWA,MAAX;AAAA,MAAmBC,cAAnB,QAAmBA,cAAnB;AAAA,SACjC,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACG,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC5B,QAAMC,KAAK,GAAGN,MAAM,CAACO,GAAP,CAAWF,KAAX,CAAd;;AAEA,QAAIP,yBAAyB,CAACQ,KAAD,EAAQJ,cAAR,CAA7B,EAAsD;AACpDI,MAAAA,KAAK,CAACE,QAAN,IAAkBP,MAAM,WAAIG,KAAJ,gBAAsB,KAAtB,CAAxB;AACA,aAAO,IAAP;AACD;;AAED,WACE,oBAAC,kBAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,KAAK,EAAEA,KAFT;AAGE,MAAA,KAAK,EAAEE,KAHT;AAIE,MAAA,MAAM,EAAEL,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GAhBA,CADH,CADF,CADiC;AAAA,CAAnC;;eAwBeF,0B;AAAf;;;;;;;;;;0BAxBMA,0B","sourcesContent":["import React from 'react';\nimport { Table, TableBody } from '@material-ui/core';\n\nimport { ExtrasFormTableRow } from '../ExtrasFormTableRow';\nimport { isNotSatisfiesSizesLimits } from '../../../../../modules/dishes';\n\nconst ClientMultiselectionExtras = ({ fields, change, selectedSizeId }) => (\n  <Table padding=\"none\">\n    <TableBody>\n      {fields.map((field, index) => {\n        const extra = fields.get(index);\n\n        if (isNotSatisfiesSizesLimits(extra, selectedSizeId)) {\n          extra.selected && change(`${field}.selected`, false);\n          return null;\n        }\n\n        return (\n          <ExtrasFormTableRow\n            key={field}\n            field={field}\n            extra={extra}\n            change={change}\n          />\n        );\n      })}\n    </TableBody>\n  </Table>\n);\n\nexport default ClientMultiselectionExtras;\n"]},"metadata":{},"sourceType":"module"}