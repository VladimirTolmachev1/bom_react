{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { API_REQUESTS_ABORT } from '../../modules/core/core.types';\nimport { PUT_API_REQUEST_IN_REGISTRY, CALL_API } from './api';\nimport { GET_RESTAURANTS_LIST_REQUEST } from '../../modules/restaurants';\nvar appRequestsRegistry = {};\nvar forceAbortRequestsRegistry = [GET_RESTAURANTS_LIST_REQUEST];\n\nvar _default = function _default() {\n  return function (next) {\n    return function (action) {\n      switch (action.type) {\n        case CALL_API:\n          {\n            var requestType = action.request.types[0];\n\n            if (forceAbortRequestsRegistry.includes(requestType)) {\n              appRequestsRegistry[requestType] && appRequestsRegistry[requestType].abort();\n            }\n\n            break;\n          }\n\n        case PUT_API_REQUEST_IN_REGISTRY:\n          {\n            appRequestsRegistry[action.requestType] = action.xhr;\n            break;\n          }\n\n        case API_REQUESTS_ABORT:\n          {\n            action.requestTypes.forEach(function (requestType) {\n              appRequestsRegistry[requestType] && appRequestsRegistry[requestType].abort();\n            });\n            break;\n          }\n\n        default:\n          {\n            return next(action);\n          }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(appRequestsRegistry, \"appRequestsRegistry\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/store/middleware/requestsMiddleware.js\");\n  reactHotLoader.register(forceAbortRequestsRegistry, \"forceAbortRequestsRegistry\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/store/middleware/requestsMiddleware.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/store/middleware/requestsMiddleware.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/store/middleware/requestsMiddleware.js"],"names":["API_REQUESTS_ABORT","PUT_API_REQUEST_IN_REGISTRY","CALL_API","GET_RESTAURANTS_LIST_REQUEST","appRequestsRegistry","forceAbortRequestsRegistry","next","action","type","requestType","request","types","includes","abort","xhr","requestTypes","forEach"],"mappings":";;;;;AAAA,SAASA,kBAAT,QAAmC,+BAAnC;AACA,SAASC,2BAAT,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,4BAAT,QAA6C,2BAA7C;AAEA,IAAMC,mBAAmB,GAAG,EAA5B;AACA,IAAMC,0BAA0B,GAAG,CAACF,4BAAD,CAAnC;;eAEe;AAAA,SAAM,UAAAG,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACrC,cAAQA,MAAM,CAACC,IAAf;AACE,aAAKN,QAAL;AAAe;AACb,gBAAMO,WAAW,GAAGF,MAAM,CAACG,OAAP,CAAeC,KAAf,CAAqB,CAArB,CAApB;;AACA,gBAAIN,0BAA0B,CAACO,QAA3B,CAAoCH,WAApC,CAAJ,EAAsD;AACpDL,cAAAA,mBAAmB,CAACK,WAAD,CAAnB,IACEL,mBAAmB,CAACK,WAAD,CAAnB,CAAiCI,KAAjC,EADF;AAED;;AACD;AACD;;AAED,aAAKZ,2BAAL;AAAkC;AAChCG,YAAAA,mBAAmB,CAACG,MAAM,CAACE,WAAR,CAAnB,GAA0CF,MAAM,CAACO,GAAjD;AACA;AACD;;AAED,aAAKd,kBAAL;AAAyB;AACvBO,YAAAA,MAAM,CAACQ,YAAP,CAAoBC,OAApB,CAA4B,UAAAP,WAAW,EAAI;AACzCL,cAAAA,mBAAmB,CAACK,WAAD,CAAnB,IACEL,mBAAmB,CAACK,WAAD,CAAnB,CAAiCI,KAAjC,EADF;AAED,aAHD;AAIA;AACD;;AAED;AAAS;AACP,mBAAOP,IAAI,CAACC,MAAD,CAAX;AACD;AAzBH;;AA4BA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACD,KA9BwB;AAAA,GAAV;AAAA,C;;AAAf;;;;;;;;;;0BAHMH,mB;0BACAC,0B","sourcesContent":["import { API_REQUESTS_ABORT } from '../../modules/core/core.types';\nimport { PUT_API_REQUEST_IN_REGISTRY, CALL_API } from './api';\nimport { GET_RESTAURANTS_LIST_REQUEST } from '../../modules/restaurants';\n\nconst appRequestsRegistry = {};\nconst forceAbortRequestsRegistry = [GET_RESTAURANTS_LIST_REQUEST];\n\nexport default () => next => action => {\n  switch (action.type) {\n    case CALL_API: {\n      const requestType = action.request.types[0];\n      if (forceAbortRequestsRegistry.includes(requestType)) {\n        appRequestsRegistry[requestType] &&\n          appRequestsRegistry[requestType].abort();\n      }\n      break;\n    }\n\n    case PUT_API_REQUEST_IN_REGISTRY: {\n      appRequestsRegistry[action.requestType] = action.xhr;\n      break;\n    }\n\n    case API_REQUESTS_ABORT: {\n      action.requestTypes.forEach(requestType => {\n        appRequestsRegistry[requestType] &&\n          appRequestsRegistry[requestType].abort();\n      });\n      break;\n    }\n\n    default: {\n      return next(action);\n    }\n  }\n\n  return next(action);\n};\n"]},"metadata":{},"sourceType":"module"}