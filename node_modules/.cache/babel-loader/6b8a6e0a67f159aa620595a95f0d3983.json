{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { ValidationService } from '../../../services';\nexport var forgotPasswordValidation = function forgotPasswordValidation(values) {\n  var errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!ValidationService.email(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(forgotPasswordValidation, \"forgotPasswordValidation\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ForgotPassword/modules/forgot-password.validation.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/ForgotPassword/modules/forgot-password.validation.js"],"names":["ValidationService","forgotPasswordValidation","values","errors","email"],"mappings":";;;;;AAAA,SAASA,iBAAT,QAAkC,mBAAlC;AAEA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAC,MAAM,EAAI;AAChD,MAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,MAAM,CAACE,KAAZ,EAAmB;AACjBD,IAAAA,MAAM,CAACC,KAAP,GAAe,UAAf;AACD,GAFD,MAEO,IAAI,CAACJ,iBAAiB,CAACI,KAAlB,CAAwBF,MAAM,CAACE,KAA/B,CAAL,EAA4C;AACjDD,IAAAA,MAAM,CAACC,KAAP,GAAe,uBAAf;AACD;;AAED,SAAOD,MAAP;AACD,CATM;;;;;;;;;;0BAAMF,wB","sourcesContent":["import { ValidationService } from '../../../services';\n\nexport const forgotPasswordValidation = values => {\n  const errors = {};\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!ValidationService.email(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n"]},"metadata":{},"sourceType":"module"}