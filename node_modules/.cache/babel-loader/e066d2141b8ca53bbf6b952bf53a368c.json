{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nexport var MockApiService =\n/*#__PURE__*/\nfunction () {\n  function MockApiService() {\n    _classCallCheck(this, MockApiService);\n  }\n\n  _createClass(MockApiService, null, [{\n    key: \"createRequestProxy\",\n    value: function createRequestProxy(mock) {\n      var promise = new Promise(function (resolve) {\n        //simulate network\n        setTimeout(function () {\n          resolve(mock);\n        }, 1000);\n      });\n      return {\n        promise: promise,\n        xhr: {\n          abort: function abort() {\n            return console.log('Mock API request aborted');\n          }\n        }\n      };\n    }\n  }, {\n    key: \"get\",\n    value: function get(mock) {\n      return MockApiService.createRequestProxy(mock);\n    }\n  }, {\n    key: \"post\",\n    value: function post(mock) {\n      return MockApiService.createRequestProxy(mock);\n    }\n  }, {\n    key: \"put\",\n    value: function put(mock) {\n      return MockApiService.createRequestProxy(mock);\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(mock) {\n      return MockApiService.createRequestProxy(mock);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(mock) {\n      return MockApiService.createRequestProxy(mock);\n    }\n  }]);\n\n  return MockApiService;\n}();\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MockApiService, \"MockApiService\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/services/MockApiService/MockApiService.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/services/MockApiService/MockApiService.js"],"names":["MockApiService","mock","promise","Promise","resolve","setTimeout","xhr","abort","console","log","createRequestProxy"],"mappings":";;;;;;;;;AAAA,WAAaA,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uCAC8BC,IAD9B,EACoC;AAC5B,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAEnC;AACAC,QAAAA,UAAU,CAAC,YAAM;AACbD,UAAAA,OAAO,CAACH,IAAD,CAAP;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OANe,CAAhB;AAQA,aAAO;AACHC,QAAAA,OAAO,EAAPA,OADG;AAEHI,QAAAA,GAAG,EAAE;AACDC,UAAAA,KAAK,EAAE;AAAA,mBAAMC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAN;AAAA;AADN;AAFF,OAAP;AAMH;AAhBL;AAAA;AAAA,wBAkBeR,IAlBf,EAkBqB;AACb,aAAOD,cAAc,CAACU,kBAAf,CAAkCT,IAAlC,CAAP;AACH;AApBL;AAAA;AAAA,yBAsBgBA,IAtBhB,EAsBsB;AACd,aAAOD,cAAc,CAACU,kBAAf,CAAkCT,IAAlC,CAAP;AACH;AAxBL;AAAA;AAAA,wBA0BeA,IA1Bf,EA0BqB;AACb,aAAOD,cAAc,CAACU,kBAAf,CAAkCT,IAAlC,CAAP;AACH;AA5BL;AAAA;AAAA,0BA8BiBA,IA9BjB,EA8BuB;AACf,aAAOD,cAAc,CAACU,kBAAf,CAAkCT,IAAlC,CAAP;AACH;AAhCL;AAAA;AAAA,4BAkCkBA,IAlClB,EAkCwB;AAChB,aAAOD,cAAc,CAACU,kBAAf,CAAkCT,IAAlC,CAAP;AACH;AApCL;;AAAA;AAAA;;;;;;;;;;;;0BAAaD,c","sourcesContent":["export class MockApiService {\n    static createRequestProxy(mock) {\n        const promise = new Promise(resolve => {\n\n            //simulate network\n            setTimeout(() => {\n                resolve(mock);\n            }, 1000);\n        });\n\n        return {\n            promise,\n            xhr: {\n                abort: () => console.log('Mock API request aborted')\n            }\n        }\n    }\n\n    static get(mock) {\n        return MockApiService.createRequestProxy(mock);\n    }\n\n    static post(mock) {\n        return MockApiService.createRequestProxy(mock);\n    }\n\n    static put(mock) {\n        return MockApiService.createRequestProxy(mock);\n    }\n\n    static patch(mock) {\n        return MockApiService.createRequestProxy(mock);\n    }\n\n    static delete(mock) {\n        return MockApiService.createRequestProxy(mock);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}