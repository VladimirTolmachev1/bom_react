{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class,\n    _class2,\n    _temp,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppTable/AppTable.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\nimport MoreHoriz from '@material-ui/icons/MoreHoriz';\nimport { AppTableFooter, AppTableHeader } from './components';\nimport { AppPreloaderSmall } from '/components';\nimport { autobind } from 'core-decorators';\nimport './AppTable.scss';\nexport var AppTable = (_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AppTable, _PureComponent);\n\n  function AppTable() {\n    _classCallCheck(this, AppTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppTable).apply(this, arguments));\n  }\n\n  _createClass(AppTable, [{\n    key: \"onSortHeaderCellClick\",\n    value: function onSortHeaderCellClick(event) {\n      var sort_field = event.currentTarget.dataset.sort_field;\n\n      var _this$getTableOptions = this.getTableOptions(),\n          onSortChange = _this$getTableOptions.onSortChange;\n\n      var sort_order;\n\n      if (sort_field !== this.props.sort_field) {\n        sort_order = 'asc';\n        onSortChange({\n          sort_field: sort_field,\n          sort_order: sort_order\n        });\n        return;\n      }\n\n      switch (this.props.sort_order) {\n        case '':\n          {\n            sort_order = 'asc';\n            break;\n          }\n\n        case 'asc':\n          {\n            sort_order = 'desc';\n            break;\n          }\n\n        case 'desc':\n          {\n            sort_order = '';\n            sort_field = '';\n          }\n      }\n\n      onSortChange({\n        sort_field: sort_field,\n        sort_order: sort_order\n      });\n    }\n  }, {\n    key: \"getSortCaretIcon\",\n    value: function getSortCaretIcon(field) {\n      var sort_order = this.props.sort_order;\n      return sort_order ? sort_order === 'asc' ? React.createElement(KeyboardArrowDown, {\n        \"data-sort_field\": field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }) : React.createElement(KeyboardArrowUp, {\n        \"data-sort_field\": field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }) : null;\n    }\n  }, {\n    key: \"mapTableHead\",\n    value: function mapTableHead() {\n      var _this = this;\n\n      var dataSettings = this.props.dataSettings;\n      var sort_field = this.props.sort_field;\n      return dataSettings.map(function (_ref, index) {\n        var title = _ref.title,\n            sort = _ref.sort,\n            field = _ref.field,\n            width = _ref.width,\n            style = _ref.style;\n\n        if (sort) {\n          return React.createElement(TableCell, {\n            key: index,\n            \"data-sort_field\": field,\n            onClick: _this.onSortHeaderCellClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: 'voc-table_th-cell voc-table_th-cell--sort',\n            style: style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, title, sort_field === field ? _this.getSortCaretIcon(field) : React.createElement(MoreHoriz, {\n            \"data-sort_field\": field,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          })));\n        }\n\n        return React.createElement(TableCell, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: 'voc-table_th-cell',\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, title));\n      });\n    }\n  }, {\n    key: \"getTableCellFormatter\",\n    value: function getTableCellFormatter(formatter) {\n      return formatter ? AppTable.formatters[formatter] : null;\n    }\n  }, {\n    key: \"mapRow\",\n    value: function mapRow(item) {\n      var _this2 = this;\n\n      var dataSettings = this.props.dataSettings;\n      return dataSettings.map(function (_ref2, index) {\n        var field = _ref2.field,\n            formatter = _ref2.formatter,\n            width = _ref2.width,\n            style = _ref2.style,\n            mask = _ref2.mask;\n        var dataField = item[field];\n\n        if (typeof formatter === 'function') {\n          return React.createElement(TableCell, {\n            key: index,\n            style: style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, formatter(dataField, item));\n        }\n\n        var TableCellFormatter = _this2.getTableCellFormatter(formatter);\n\n        return React.createElement(TableCell, {\n          key: index,\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, TableCellFormatter ? React.createElement(TableCellFormatter, {\n          field: dataField,\n          mask: mask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }) : dataField);\n      });\n    }\n  }, {\n    key: \"mapTableBodyRows\",\n    value: function mapTableBodyRows() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          rowStyle = _this$props.options.rowStyle;\n      return data.map(function (item, index) {\n        return React.createElement(TableRow, {\n          key: index,\n          style: rowStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, _this3.mapRow(item));\n      });\n    }\n  }, {\n    key: \"getEmptyTable\",\n    value: function getEmptyTable() {\n      var dataSettings = this.props.dataSettings;\n      var cellsLength = dataSettings.length;\n      return React.createElement(TableRow, {\n        className: 'voc-table__empty',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: cellsLength,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"There is no data to display\"));\n    }\n  }, {\n    key: \"getTableOptions\",\n    value: function getTableOptions() {\n      var defaultOptions = {\n        onSortChange: this.onSortChange,\n        onLimitChange: this.onLimitChange,\n        onSearchType: this.onSearchType,\n        onPageChange: this.onPageChange\n      };\n      return _objectSpread({}, defaultOptions, this.props.options);\n    }\n  }, {\n    key: \"updateFiltersAndRequest\",\n    value: function updateFiltersAndRequest(newFilters) {\n      var _this$props2 = this.props,\n          _this$props2$options = _this$props2.options,\n          updateFilters = _this$props2$options.updateFilters,\n          requestTrigger = _this$props2$options.requestTrigger,\n          filters = _this$props2.filters;\n      updateFilters(newFilters);\n      requestTrigger(_objectSpread({}, filters, newFilters));\n    }\n  }, {\n    key: \"onSortChange\",\n    value: function onSortChange(newFilters) {\n      this.updateFiltersAndRequest(newFilters);\n    }\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange(page) {\n      this.updateFiltersAndRequest({\n        page: page\n      });\n    }\n  }, {\n    key: \"onLimitChange\",\n    value: function onLimitChange(limit) {\n      this.updateFiltersAndRequest({\n        limit: limit,\n        page: 1\n      });\n    }\n  }, {\n    key: \"onSearchType\",\n    value: function onSearchType(search) {\n      this.updateFiltersAndRequest({\n        search: search,\n        page: 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getTableOptions2 = this.getTableOptions(),\n          onPageChange = _this$getTableOptions2.onPageChange,\n          onLimitChange = _this$getTableOptions2.onLimitChange,\n          rowStyle = _this$getTableOptions2.rowStyle,\n          onSearchType = _this$getTableOptions2.onSearchType,\n          haveSearch = _this$getTableOptions2.haveSearch,\n          customTableHeader = _this$getTableOptions2.customTableHeader;\n\n      var _this$props3 = this.props,\n          limit = _this$props3.limit,\n          search = _this$props3.search,\n          page = _this$props3.page,\n          data = _this$props3.data,\n          total = _this$props3.total,\n          loading = _this$props3.loading;\n      return React.createElement(\"div\", {\n        className: \"voc-table__container \".concat(loading && 'voc-table__container-loading'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(AppTableHeader, Object.assign({\n        haveSearch: haveSearch,\n        search: search,\n        onSearchType: onSearchType\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), customTableHeader), React.createElement(\"div\", {\n        className: \"voc-table__wrapper \".concat(loading && 'voc-table__wrapper-loading'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, loading && React.createElement(AppPreloaderSmall, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(Table, {\n        className: 'voc-table',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        className: 'voc-table__header',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        style: rowStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, this.mapTableHead())), React.createElement(TableBody, {\n        className: 'voc-table__body',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, data.length ? this.mapTableBodyRows() : this.getEmptyTable()), React.createElement(AppTableFooter, Object.assign({\n        total: total,\n        page: page,\n        limit: limit,\n        onPageChange: onPageChange,\n        onLimitChange: onLimitChange\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return AppTable;\n}(PureComponent), _class2.formatters = {}, _temp), (_applyDecoratedDescriptor(_class.prototype, \"onSortHeaderCellClick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onSortHeaderCellClick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onSortChange\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onSortChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onPageChange\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onPageChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onLimitChange\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onLimitChange\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onSearchType\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onSearchType\"), _class.prototype)), _class);\nAppTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  total: PropTypes.number.isRequired,\n  loading: PropTypes.bool.isRequired,\n  dataSettings: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    formatter: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    style: PropTypes.shape({\n      width: PropTypes.string,\n      textAlign: PropTypes.string,\n      maxWidth: PropTypes.string\n    }),\n    sort: PropTypes.bool,\n    mask: PropTypes.string\n  })).isRequired,\n  sort_order: PropTypes.string,\n  sort_field: PropTypes.string,\n  search: PropTypes.string,\n  limit: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  options: PropTypes.shape({\n    onSortChange: PropTypes.func,\n    updateFilters: PropTypes.func,\n    haveSearch: PropTypes.bool,\n    requestTrigger: PropTypes.func,\n    rowStyle: PropTypes.shape({\n      height: PropTypes.string\n    }),\n    customTableHeader: PropTypes.any,\n    onSearchType: PropTypes.func,\n    onPageChange: PropTypes.func,\n    onLimitChange: PropTypes.func\n  }).isRequired\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AppTable, \"AppTable\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppTable/AppTable.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/AppTable/AppTable.js"],"names":["React","PureComponent","PropTypes","Table","TableBody","TableCell","TableHead","TableRow","KeyboardArrowDown","KeyboardArrowUp","MoreHoriz","AppTableFooter","AppTableHeader","AppPreloaderSmall","autobind","AppTable","event","sort_field","currentTarget","dataset","getTableOptions","onSortChange","sort_order","props","field","dataSettings","map","index","title","sort","width","style","onSortHeaderCellClick","getSortCaretIcon","formatter","formatters","item","mask","dataField","TableCellFormatter","getTableCellFormatter","data","rowStyle","options","mapRow","cellsLength","length","defaultOptions","onLimitChange","onSearchType","onPageChange","newFilters","updateFilters","requestTrigger","filters","updateFiltersAndRequest","page","limit","search","haveSearch","customTableHeader","total","loading","mapTableHead","mapTableBodyRows","getEmptyTable","propTypes","array","isRequired","number","bool","arrayOf","shape","string","oneOfType","func","textAlign","maxWidth","height","any"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\nimport MoreHoriz from '@material-ui/icons/MoreHoriz';\n\nimport { AppTableFooter, AppTableHeader } from './components';\nimport { AppPreloaderSmall } from '/components';\n\nimport { autobind } from 'core-decorators';\n\nimport './AppTable.scss';\n\nexport class AppTable extends PureComponent {\n\n    static formatters = {};\n\n    @autobind\n    onSortHeaderCellClick(event) {\n        let {sort_field} = event.currentTarget.dataset;\n        const {onSortChange} = this.getTableOptions();\n        let sort_order;\n\n        if (sort_field !== this.props.sort_field) {\n            sort_order = 'asc';\n            onSortChange({sort_field, sort_order});\n            return;\n        }\n\n        switch (this.props.sort_order) {\n            case '': {\n                sort_order = 'asc';\n                break;\n            }\n            case 'asc': {\n                sort_order = 'desc';\n                break;\n            }\n            case 'desc': {\n                sort_order = '';\n                sort_field = '';\n            }\n        }\n\n        onSortChange({sort_field, sort_order});\n    }\n\n    getSortCaretIcon(field) {\n        const {sort_order} = this.props;\n\n        return sort_order\n            ? (\n                sort_order === 'asc'\n                    ? <KeyboardArrowDown data-sort_field={ field }/>\n                    : <KeyboardArrowUp data-sort_field={ field }/>\n            )\n            : null\n    }\n\n    mapTableHead() {\n        const {dataSettings} = this.props;\n        const {sort_field} = this.props;\n        return dataSettings.map(({title, sort, field, width, style}, index) => {\n            if (sort) {\n                return (\n                    <TableCell key={ index }\n                               data-sort_field={ field }\n                               onClick={ this.onSortHeaderCellClick }>\n                        <div className={ 'voc-table_th-cell voc-table_th-cell--sort' } style={ style }>\n                            { title }\n                            { sort_field === field ? this.getSortCaretIcon(field) :\n                                <MoreHoriz data-sort_field={ field }/> }\n                        </div>\n                    </TableCell>\n                );\n            }\n\n            return (\n                <TableCell key={ index }>\n                    <div className={ 'voc-table_th-cell' } style={ style }>\n                        { title }\n                    </div>\n                </TableCell>\n            );\n        });\n    }\n\n    getTableCellFormatter(formatter) {\n        return formatter ? AppTable.formatters[formatter] : null;\n    }\n\n    mapRow(item) {\n        const {dataSettings} = this.props;\n\n        return dataSettings.map(({field, formatter, width, style, mask}, index) => {\n            const dataField = item[field];\n\n            if (typeof formatter === 'function') {\n                return (\n                    <TableCell key={ index } style={ style }>\n                        { formatter(dataField, item) }\n                    </TableCell>\n                );\n            }\n\n            const TableCellFormatter = this.getTableCellFormatter(formatter);\n\n            return (\n                <TableCell key={ index } style={ style }>\n                    { TableCellFormatter ? <TableCellFormatter field={ dataField } mask={ mask }/> : dataField }\n                </TableCell>\n            );\n        });\n    }\n\n    mapTableBodyRows() {\n        const {data, options: {rowStyle}} = this.props;\n        return data.map((item, index) => <TableRow key={ index } style={ rowStyle }>{ this.mapRow(item) }</TableRow>);\n    }\n\n    getEmptyTable() {\n        const {dataSettings} = this.props;\n        const cellsLength = dataSettings.length;\n\n        return (\n            <TableRow className={ 'voc-table__empty' }>\n                <TableCell colSpan={ cellsLength }>\n                    There is no data to display\n                </TableCell>\n            </TableRow>\n        );\n    }\n\n    getTableOptions() {\n        const defaultOptions = {\n            onSortChange: this.onSortChange,\n            onLimitChange: this.onLimitChange,\n            onSearchType: this.onSearchType,\n            onPageChange: this.onPageChange\n        };\n\n        return {...defaultOptions, ...this.props.options}\n    }\n\n    updateFiltersAndRequest(newFilters) {\n        const {options: {updateFilters, requestTrigger}, filters} = this.props;\n        updateFilters(newFilters);\n        requestTrigger({...filters, ...newFilters});\n    }\n\n    @autobind\n    onSortChange(newFilters) {\n        this.updateFiltersAndRequest(newFilters);\n    }\n\n    @autobind\n    onPageChange(page) {\n        this.updateFiltersAndRequest({page});\n    }\n\n    @autobind\n    onLimitChange(limit) {\n        this.updateFiltersAndRequest({limit, page: 1});\n    }\n\n    @autobind\n    onSearchType(search) {\n        this.updateFiltersAndRequest({search, page: 1});\n    }\n\n    render() {\n\n        const {\n            onPageChange,\n            onLimitChange,\n            rowStyle,\n            onSearchType,\n            haveSearch,\n            customTableHeader\n        } = this.getTableOptions();\n\n        const {\n            limit,\n            search,\n            page,\n            data,\n            total,\n            loading\n        } = this.props;\n\n        return (\n            <div className={ `voc-table__container ${loading && 'voc-table__container-loading'}` }>\n                <AppTableHeader\n                    { ...{\n                        haveSearch,\n                        search,\n                        onSearchType\n                    } }>\n                    { customTableHeader }\n                </AppTableHeader>\n                <div className={ `voc-table__wrapper ${loading && 'voc-table__wrapper-loading'}` }>\n                    { loading && <AppPreloaderSmall/> }\n                    <Table className={ 'voc-table' }>\n                        <TableHead className={ 'voc-table__header' }>\n                            <TableRow style={ rowStyle }>\n                                { this.mapTableHead() }\n                            </TableRow>\n                        </TableHead>\n                        <TableBody className={ 'voc-table__body' }>\n                            { data.length ? this.mapTableBodyRows() : this.getEmptyTable() }\n                        </TableBody>\n                        <AppTableFooter\n                            { ...{\n                                total,\n                                page,\n                                limit,\n                                onPageChange,\n                                onLimitChange\n                            } }\n                        />\n                    </Table>\n                </div>\n            </div>\n        );\n    }\n}\n\nAppTable.propTypes = {\n    data: PropTypes.array.isRequired,\n    total: PropTypes.number.isRequired,\n    loading: PropTypes.bool.isRequired,\n\n    dataSettings: PropTypes.arrayOf(PropTypes.shape({\n        field: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        formatter: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.func\n        ]),\n        style: PropTypes.shape({\n            width: PropTypes.string,\n            textAlign: PropTypes.string,\n            maxWidth: PropTypes.string\n        }),\n        sort: PropTypes.bool,\n        mask: PropTypes.string\n    })).isRequired,\n\n    sort_order: PropTypes.string,\n    sort_field: PropTypes.string,\n    search: PropTypes.string,\n    limit: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired,\n\n    options: PropTypes.shape({\n        onSortChange: PropTypes.func,\n        updateFilters: PropTypes.func,\n        haveSearch: PropTypes.bool,\n        requestTrigger: PropTypes.func,\n        rowStyle: PropTypes.shape({\n            height: PropTypes.string\n        }),\n        customTableHeader: PropTypes.any,\n        onSearchType: PropTypes.func,\n        onPageChange: PropTypes.func,\n        onLimitChange: PropTypes.func\n    }).isRequired\n};\n"]},"metadata":{},"sourceType":"module"}