{"ast":null,"code":"import _toConsumableArray from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { sizesFormFieldSelector } from '../../../components/forms/selectors';\nexport var lastSizesCopiedFromNameSelector = function lastSizesCopiedFromNameSelector(state) {\n  return sizesFormFieldSelector(state, 'lastCopiedFrom');\n};\nexport var COPY_SIZES_FROM_ANOTHER_ENTITY = 'COPY_SIZES_FROM_ANOTHER_ENTITY';\nexport function copySizesToForm() {\n  var sizesToCopy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var copiedFrom = arguments.length > 1 ? arguments[1] : undefined;\n  return {\n    type: COPY_SIZES_FROM_ANOTHER_ENTITY,\n    payload: {\n      sizesToCopy: sizesToCopy,\n      copiedFrom: copiedFrom\n    }\n  };\n}\n\nfunction prepareForCopying(sizes) {\n  sizes.forEach(function (size) {\n    delete size.id;\n  });\n}\n\nexport function copySizesPlugin(state, _ref) {\n  var type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case COPY_SIZES_FROM_ANOTHER_ENTITY:\n      {\n        var sizesToCopy = payload.sizesToCopy,\n            copiedFrom = payload.copiedFrom;\n        prepareForCopying(sizesToCopy);\n        return _objectSpread({}, state, {\n          values: _objectSpread({}, state.values, {\n            sizes: _toConsumableArray(state.values.sizes).concat(_toConsumableArray(sizesToCopy)),\n            lastCopiedFrom: copiedFrom\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(lastSizesCopiedFromNameSelector, \"lastSizesCopiedFromNameSelector\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/forms/plugins/sizes-form.plugin.js\");\n  reactHotLoader.register(COPY_SIZES_FROM_ANOTHER_ENTITY, \"COPY_SIZES_FROM_ANOTHER_ENTITY\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/forms/plugins/sizes-form.plugin.js\");\n  reactHotLoader.register(copySizesToForm, \"copySizesToForm\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/forms/plugins/sizes-form.plugin.js\");\n  reactHotLoader.register(prepareForCopying, \"prepareForCopying\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/forms/plugins/sizes-form.plugin.js\");\n  reactHotLoader.register(copySizesPlugin, \"copySizesPlugin\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/forms/plugins/sizes-form.plugin.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/forms/plugins/sizes-form.plugin.js"],"names":["sizesFormFieldSelector","lastSizesCopiedFromNameSelector","state","COPY_SIZES_FROM_ANOTHER_ENTITY","copySizesToForm","sizesToCopy","copiedFrom","type","payload","prepareForCopying","sizes","forEach","size","id","copySizesPlugin","values","lastCopiedFrom"],"mappings":";;;;;;;;AAAA,SAASA,sBAAT,QAAuC,qCAAvC;AAEA,OAAO,IAAMC,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAAC,KAAK;AAAA,SAClDF,sBAAsB,CAACE,KAAD,EAAQ,gBAAR,CAD4B;AAAA,CAA7C;AAGP,OAAO,IAAMC,8BAA8B,GAAG,gCAAvC;AAEP,OAAO,SAASC,eAAT,GAAuD;AAAA,MAA9BC,WAA8B,uEAAhB,EAAgB;AAAA,MAAZC,UAAY;AAC5D,SAAO;AACLC,IAAAA,IAAI,EAAEJ,8BADD;AAELK,IAAAA,OAAO,EAAE;AAAEH,MAAAA,WAAW,EAAXA,WAAF;AAAeC,MAAAA,UAAU,EAAVA;AAAf;AAFJ,GAAP;AAID;;AAED,SAASG,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCA,EAAAA,KAAK,CAACC,OAAN,CAAc,UAAAC,IAAI,EAAI;AACpB,WAAOA,IAAI,CAACC,EAAZ;AACD,GAFD;AAGD;;AAED,OAAO,SAASC,eAAT,CAAyBZ,KAAzB,QAAmD;AAAA,MAAjBK,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AACxD,UAAQD,IAAR;AACE,SAAKJ,8BAAL;AAAqC;AAAA,YAC3BE,WAD2B,GACCG,OADD,CAC3BH,WAD2B;AAAA,YACdC,UADc,GACCE,OADD,CACdF,UADc;AAEnCG,QAAAA,iBAAiB,CAACJ,WAAD,CAAjB;AAEA,iCACKH,KADL;AAEEa,UAAAA,MAAM,oBACDb,KAAK,CAACa,MADL;AAEJL,YAAAA,KAAK,qBAAMR,KAAK,CAACa,MAAN,CAAaL,KAAnB,4BAA6BL,WAA7B,EAFD;AAIJW,YAAAA,cAAc,EAAEV;AAJZ;AAFR;AASD;;AACD;AACE,aAAOJ,KAAP;AAhBJ;AAkBD;;;;;;;;;;0BArCYD,+B;0BAGAE,8B;0BAEGC,e;0BAOPK,iB;0BAMOK,e","sourcesContent":["import { sizesFormFieldSelector } from '../../../components/forms/selectors';\n\nexport const lastSizesCopiedFromNameSelector = state =>\n  sizesFormFieldSelector(state, 'lastCopiedFrom');\n\nexport const COPY_SIZES_FROM_ANOTHER_ENTITY = 'COPY_SIZES_FROM_ANOTHER_ENTITY';\n\nexport function copySizesToForm(sizesToCopy = [], copiedFrom) {\n  return {\n    type: COPY_SIZES_FROM_ANOTHER_ENTITY,\n    payload: { sizesToCopy, copiedFrom },\n  };\n}\n\nfunction prepareForCopying(sizes) {\n  sizes.forEach(size => {\n    delete size.id;\n  });\n}\n\nexport function copySizesPlugin(state, { type, payload }) {\n  switch (type) {\n    case COPY_SIZES_FROM_ANOTHER_ENTITY: {\n      const { sizesToCopy, copiedFrom } = payload;\n      prepareForCopying(sizesToCopy);\n\n      return {\n        ...state,\n        values: {\n          ...state.values,\n          sizes: [...state.values.sizes, ...sizesToCopy],\n\n          lastCopiedFrom: copiedFrom,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}