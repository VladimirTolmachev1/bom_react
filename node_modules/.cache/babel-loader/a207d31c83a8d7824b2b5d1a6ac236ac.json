{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { ReduxCrudService } from '../../services';\nimport { chargeResource, CHECKOUT__PUT_ITEM, CHECKOUT__CREATE_NEW_ITEM, CHECKOUT__UPDATE_ITEM, CHECKOUT__INCREASE_ITEM_AMOUNT, CHECKOUT__REMOVE_ITEM, CHECKOUT__CLEAR, CHECKOUT__SAVE_TO_STORAGE, CHECKOUT__CLEAR_FROM_STORAGE, CHECKOUT__RESTORE_FROM_STORAGE, CHECKOUT__SET_UI, CHECKOUT__BACK_TO_RESTAURANT_MENU, CHECKOUT__BULK_CREATE_CHECKOUT_ITEMS, CHECKOUT__BULK_SAVE } from './checkout.types';\nexport var updateCheckoutItem = function updateCheckoutItem(payload) {\n  return {\n    type: CHECKOUT__UPDATE_ITEM,\n    payload: payload\n  };\n};\nexport var putItemToCheckout = function putItemToCheckout(item) {\n  return {\n    type: CHECKOUT__PUT_ITEM,\n    payload: item\n  };\n};\nexport var bulkCreateCheckoutItems = function bulkCreateCheckoutItems(items) {\n  return {\n    type: CHECKOUT__BULK_CREATE_CHECKOUT_ITEMS,\n    payload: items\n  };\n};\nexport var bulkSaveCheckout = function bulkSaveCheckout(payload) {\n  return {\n    type: CHECKOUT__BULK_SAVE,\n    payload: payload\n  };\n};\nexport var createNewCheckoutItem = function createNewCheckoutItem(item) {\n  return {\n    type: CHECKOUT__CREATE_NEW_ITEM,\n    payload: _objectSpread({}, item)\n  };\n};\nexport var removeItemFromCheckout = function removeItemFromCheckout(itemUuid) {\n  return {\n    type: CHECKOUT__REMOVE_ITEM,\n    payload: itemUuid\n  };\n};\nexport var increaseCheckoutItemAmountBy = function increaseCheckoutItemAmountBy(uuid, amountToAdd) {\n  return {\n    type: CHECKOUT__INCREASE_ITEM_AMOUNT,\n    payload: {\n      uuid: uuid,\n      amountToAdd: amountToAdd\n    }\n  };\n};\nexport var clearCheckout = function clearCheckout() {\n  return {\n    type: CHECKOUT__CLEAR\n  };\n};\nexport var createOrderCharge = ReduxCrudService.resourceAction({\n  resource: chargeResource,\n  method: 'POST'\n}); // LOCAL STORAGE\n\nexport var saveCheckoutToStorage = function saveCheckoutToStorage(checkout) {\n  return {\n    type: CHECKOUT__SAVE_TO_STORAGE,\n    payload: {\n      checkout: checkout\n    }\n  };\n};\nexport var clearCheckoutFromStorage = function clearCheckoutFromStorage() {\n  return {\n    type: CHECKOUT__CLEAR_FROM_STORAGE\n  };\n};\nexport var restoreCheckoutFromStorage = function restoreCheckoutFromStorage(checkout) {\n  return {\n    type: CHECKOUT__RESTORE_FROM_STORAGE,\n    payload: checkout\n  };\n}; // UI\n\nexport var setCheckoutUi = function setCheckoutUi() {\n  var popertiesToMerge = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    type: CHECKOUT__SET_UI,\n    payload: popertiesToMerge\n  };\n};\nexport var backToRestaurantMenu = function backToRestaurantMenu(restaurantLink) {\n  return {\n    type: CHECKOUT__BACK_TO_RESTAURANT_MENU,\n    payload: {\n      restaurantLink: restaurantLink\n    }\n  };\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(updateCheckoutItem, \"updateCheckoutItem\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n  reactHotLoader.register(putItemToCheckout, \"putItemToCheckout\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n  reactHotLoader.register(bulkCreateCheckoutItems, \"bulkCreateCheckoutItems\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n  reactHotLoader.register(bulkSaveCheckout, \"bulkSaveCheckout\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n  reactHotLoader.register(createNewCheckoutItem, \"createNewCheckoutItem\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n  reactHotLoader.register(removeItemFromCheckout, \"removeItemFromCheckout\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n  reactHotLoader.register(increaseCheckoutItemAmountBy, \"increaseCheckoutItemAmountBy\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n  reactHotLoader.register(clearCheckout, \"clearCheckout\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n  reactHotLoader.register(createOrderCharge, \"createOrderCharge\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n  reactHotLoader.register(saveCheckoutToStorage, \"saveCheckoutToStorage\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n  reactHotLoader.register(clearCheckoutFromStorage, \"clearCheckoutFromStorage\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n  reactHotLoader.register(restoreCheckoutFromStorage, \"restoreCheckoutFromStorage\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n  reactHotLoader.register(setCheckoutUi, \"setCheckoutUi\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n  reactHotLoader.register(backToRestaurantMenu, \"backToRestaurantMenu\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.actions.js"],"names":["ReduxCrudService","chargeResource","CHECKOUT__PUT_ITEM","CHECKOUT__CREATE_NEW_ITEM","CHECKOUT__UPDATE_ITEM","CHECKOUT__INCREASE_ITEM_AMOUNT","CHECKOUT__REMOVE_ITEM","CHECKOUT__CLEAR","CHECKOUT__SAVE_TO_STORAGE","CHECKOUT__CLEAR_FROM_STORAGE","CHECKOUT__RESTORE_FROM_STORAGE","CHECKOUT__SET_UI","CHECKOUT__BACK_TO_RESTAURANT_MENU","CHECKOUT__BULK_CREATE_CHECKOUT_ITEMS","CHECKOUT__BULK_SAVE","updateCheckoutItem","payload","type","putItemToCheckout","item","bulkCreateCheckoutItems","items","bulkSaveCheckout","createNewCheckoutItem","removeItemFromCheckout","itemUuid","increaseCheckoutItemAmountBy","uuid","amountToAdd","clearCheckout","createOrderCharge","resourceAction","resource","method","saveCheckoutToStorage","checkout","clearCheckoutFromStorage","restoreCheckoutFromStorage","setCheckoutUi","popertiesToMerge","backToRestaurantMenu","restaurantLink"],"mappings":"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","sourcesContent":["import { ReduxCrudService } from '../../services';\nimport {\n  chargeResource,\n  CHECKOUT__PUT_ITEM,\n  CHECKOUT__CREATE_NEW_ITEM,\n  CHECKOUT__UPDATE_ITEM,\n  CHECKOUT__INCREASE_ITEM_AMOUNT,\n  CHECKOUT__REMOVE_ITEM,\n  CHECKOUT__CLEAR,\n  CHECKOUT__SAVE_TO_STORAGE,\n  CHECKOUT__CLEAR_FROM_STORAGE,\n  CHECKOUT__RESTORE_FROM_STORAGE,\n  CHECKOUT__SET_UI,\n  CHECKOUT__BACK_TO_RESTAURANT_MENU,\n  CHECKOUT__BULK_CREATE_CHECKOUT_ITEMS,\n  CHECKOUT__BULK_SAVE,\n} from './checkout.types';\n\nexport const updateCheckoutItem = payload => ({\n  type: CHECKOUT__UPDATE_ITEM,\n  payload,\n});\n\nexport const putItemToCheckout = item => ({\n  type: CHECKOUT__PUT_ITEM,\n  payload: item,\n});\n\nexport const bulkCreateCheckoutItems = items => ({\n  type: CHECKOUT__BULK_CREATE_CHECKOUT_ITEMS,\n  payload: items,\n});\n\nexport const bulkSaveCheckout = payload => ({\n  type: CHECKOUT__BULK_SAVE,\n  payload,\n});\n\nexport const createNewCheckoutItem = item => ({\n  type: CHECKOUT__CREATE_NEW_ITEM,\n  payload: { ...item },\n});\n\nexport const removeItemFromCheckout = itemUuid => ({\n  type: CHECKOUT__REMOVE_ITEM,\n  payload: itemUuid,\n});\n\nexport const increaseCheckoutItemAmountBy = (uuid, amountToAdd) => ({\n  type: CHECKOUT__INCREASE_ITEM_AMOUNT,\n  payload: { uuid, amountToAdd },\n});\n\nexport const clearCheckout = () => ({\n  type: CHECKOUT__CLEAR,\n});\n\nexport const createOrderCharge = ReduxCrudService.resourceAction({\n  resource: chargeResource,\n  method: 'POST',\n});\n\n// LOCAL STORAGE\nexport const saveCheckoutToStorage = checkout => ({\n  type: CHECKOUT__SAVE_TO_STORAGE,\n  payload: { checkout },\n});\n\nexport const clearCheckoutFromStorage = () => ({\n  type: CHECKOUT__CLEAR_FROM_STORAGE,\n});\n\nexport const restoreCheckoutFromStorage = checkout => ({\n  type: CHECKOUT__RESTORE_FROM_STORAGE,\n  payload: checkout,\n});\n\n// UI\nexport const setCheckoutUi = (popertiesToMerge = {}) => ({\n  type: CHECKOUT__SET_UI,\n  payload: popertiesToMerge,\n});\n\nexport const backToRestaurantMenu = restaurantLink => ({\n  type: CHECKOUT__BACK_TO_RESTAURANT_MENU,\n  payload: { restaurantLink },\n});\n"]},"metadata":{},"sourceType":"module"}