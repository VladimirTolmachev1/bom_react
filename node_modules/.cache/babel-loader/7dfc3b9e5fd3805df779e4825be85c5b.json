{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { ValidationService } from '../../../services';\nexport var REQUIRED_EXTRAS_FIELDS = ['name', 'price'];\nexport var REQUIRED_EXTRAS_LIST_FIELDS = ['name', 'items'];\nexport var getExtraErrors = function getExtraErrors(extra) {\n  var errors = {};\n\n  if (!extra) {\n    return errors;\n  }\n\n  ValidationService.validateRequired(extra, REQUIRED_EXTRAS_FIELDS, errors);\n\n  if (!ValidationService.number(extra.price)) {\n    errors.price = 'Field must be numeric';\n  }\n\n  return errors;\n};\nexport function validateExtras(prefix, extras, errors) {\n  if (!extras) {\n    return;\n  }\n\n  errors[prefix] = extras.map(getExtraErrors);\n}\nexport function getExtraListErrors(list) {\n  var errors = {};\n\n  if (!list) {\n    return errors;\n  }\n\n  ValidationService.validateRequired(list, REQUIRED_EXTRAS_LIST_FIELDS, errors);\n  validateExtras('items', list.items, errors);\n  return errors;\n}\nexport function validateExtraLists(prefix, lists, errors) {\n  if (!lists) {\n    return;\n  }\n\n  errors[prefix] = lists.map(getExtraListErrors);\n}\n\nvar _default = function _default(values) {\n  var errors = {};\n  validateExtras('extras', values.extras, errors);\n  validateExtraLists('extra_lists', values.extra_lists, errors);\n  return errors;\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(REQUIRED_EXTRAS_FIELDS, \"REQUIRED_EXTRAS_FIELDS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/ExtrasForm/extras.validation.js\");\n  reactHotLoader.register(REQUIRED_EXTRAS_LIST_FIELDS, \"REQUIRED_EXTRAS_LIST_FIELDS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/ExtrasForm/extras.validation.js\");\n  reactHotLoader.register(getExtraErrors, \"getExtraErrors\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/ExtrasForm/extras.validation.js\");\n  reactHotLoader.register(validateExtras, \"validateExtras\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/ExtrasForm/extras.validation.js\");\n  reactHotLoader.register(getExtraListErrors, \"getExtraListErrors\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/ExtrasForm/extras.validation.js\");\n  reactHotLoader.register(validateExtraLists, \"validateExtraLists\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/ExtrasForm/extras.validation.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/ExtrasForm/extras.validation.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/ExtrasForm/extras.validation.js"],"names":["ValidationService","REQUIRED_EXTRAS_FIELDS","REQUIRED_EXTRAS_LIST_FIELDS","getExtraErrors","extra","errors","validateRequired","number","price","validateExtras","prefix","extras","map","getExtraListErrors","list","items","validateExtraLists","lists","values","extra_lists"],"mappings":";;;;;AAAA,SAASA,iBAAT,QAAkC,mBAAlC;AAEA,OAAO,IAAMC,sBAAsB,GAAG,CAAC,MAAD,EAAS,OAAT,CAA/B;AAEP,OAAO,IAAMC,2BAA2B,GAAG,CAAC,MAAD,EAAS,OAAT,CAApC;AAEP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AACrC,MAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAOC,MAAP;AACD;;AAEDL,EAAAA,iBAAiB,CAACM,gBAAlB,CAAmCF,KAAnC,EAA0CH,sBAA1C,EAAkEI,MAAlE;;AAEA,MAAI,CAACL,iBAAiB,CAACO,MAAlB,CAAyBH,KAAK,CAACI,KAA/B,CAAL,EAA4C;AAC1CH,IAAAA,MAAM,CAACG,KAAP,GAAe,uBAAf;AACD;;AAED,SAAOH,MAAP;AACD,CAbM;AAeP,OAAO,SAASI,cAAT,CAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCN,MAAxC,EAAgD;AACrD,MAAI,CAACM,MAAL,EAAa;AACX;AACD;;AAEDN,EAAAA,MAAM,CAACK,MAAD,CAAN,GAAiBC,MAAM,CAACC,GAAP,CAAWT,cAAX,CAAjB;AACD;AAED,OAAO,SAASU,kBAAT,CAA4BC,IAA5B,EAAkC;AACvC,MAAMT,MAAM,GAAG,EAAf;;AACA,MAAI,CAACS,IAAL,EAAW;AACT,WAAOT,MAAP;AACD;;AAEDL,EAAAA,iBAAiB,CAACM,gBAAlB,CAAmCQ,IAAnC,EAAyCZ,2BAAzC,EAAsEG,MAAtE;AACAI,EAAAA,cAAc,CAAC,OAAD,EAAUK,IAAI,CAACC,KAAf,EAAsBV,MAAtB,CAAd;AAEA,SAAOA,MAAP;AACD;AAED,OAAO,SAASW,kBAAT,CAA4BN,MAA5B,EAAoCO,KAApC,EAA2CZ,MAA3C,EAAmD;AACxD,MAAI,CAACY,KAAL,EAAY;AACV;AACD;;AAEDZ,EAAAA,MAAM,CAACK,MAAD,CAAN,GAAiBO,KAAK,CAACL,GAAN,CAAUC,kBAAV,CAAjB;AACD;;eAEc,kBAAAK,MAAM,EAAI;AACvB,MAAMb,MAAM,GAAG,EAAf;AACAI,EAAAA,cAAc,CAAC,QAAD,EAAWS,MAAM,CAACP,MAAlB,EAA0BN,MAA1B,CAAd;AACAW,EAAAA,kBAAkB,CAAC,aAAD,EAAgBE,MAAM,CAACC,WAAvB,EAAoCd,MAApC,CAAlB;AAEA,SAAOA,MAAP;AACD,C;;AAND;;;;;;;;;;0BA/CaJ,sB;0BAEAC,2B;0BAEAC,c;0BAeGM,c;0BAQAI,kB;0BAYAG,kB","sourcesContent":["import { ValidationService } from '../../../services';\n\nexport const REQUIRED_EXTRAS_FIELDS = ['name', 'price'];\n\nexport const REQUIRED_EXTRAS_LIST_FIELDS = ['name', 'items'];\n\nexport const getExtraErrors = extra => {\n  const errors = {};\n  if (!extra) {\n    return errors;\n  }\n\n  ValidationService.validateRequired(extra, REQUIRED_EXTRAS_FIELDS, errors);\n\n  if (!ValidationService.number(extra.price)) {\n    errors.price = 'Field must be numeric';\n  }\n\n  return errors;\n};\n\nexport function validateExtras(prefix, extras, errors) {\n  if (!extras) {\n    return;\n  }\n\n  errors[prefix] = extras.map(getExtraErrors);\n}\n\nexport function getExtraListErrors(list) {\n  const errors = {};\n  if (!list) {\n    return errors;\n  }\n\n  ValidationService.validateRequired(list, REQUIRED_EXTRAS_LIST_FIELDS, errors);\n  validateExtras('items', list.items, errors);\n\n  return errors;\n}\n\nexport function validateExtraLists(prefix, lists, errors) {\n  if (!lists) {\n    return;\n  }\n\n  errors[prefix] = lists.map(getExtraListErrors);\n}\n\nexport default values => {\n  const errors = {};\n  validateExtras('extras', values.extras, errors);\n  validateExtraLists('extra_lists', values.extra_lists, errors);\n\n  return errors;\n};\n"]},"metadata":{},"sourceType":"module"}