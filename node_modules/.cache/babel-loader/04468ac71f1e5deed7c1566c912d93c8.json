{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Restaurants/Restaurants.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport DocumentTitle from 'react-document-title';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Add from '@material-ui/icons/Add';\nimport { autobind } from 'core-decorators';\nimport { RestaurantsFilters, RestaurantsActionsFormatter, RestaurantsNameFormatter } from './components';\nimport { HelperService } from '../../services';\nimport { getRestaurants, updateFilters, cleanup, restaurantsListTableDataSelector, filtersSelector, isRestaurantsLoadingSelector, restaurantsCountSelector, abortPageRequests, blockRestaurant, deleteRestaurant, clearFilters } from '../../modules/restaurants';\nimport { showConfirm } from '../AppConfirm/modules';\nimport { dictionarySelector } from '../../modules/core/core.selectors';\nimport { RestaurantModal } from '../RestaurantModal';\nimport { SetRestaurantHoursModal } from '../SetRestaurantHoursModal';\nimport { toggleRestaurantsModal, setMode } from '../RestaurantModal/modules';\nimport { toggleSetRestaurantHoursModal } from '../SetRestaurantHoursModal/modules';\nimport { AppTable, AppCleanHOC } from '../../components';\nimport './Restaurants.scss';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tableData: restaurantsListTableDataSelector(state),\n    total: restaurantsCountSelector(state),\n    filters: filtersSelector(state),\n    loading: isRestaurantsLoadingSelector(state),\n    dictionary: dictionarySelector(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  getRestaurants: getRestaurants,\n  updateFilters: updateFilters,\n  toggleRestaurantsModal: toggleRestaurantsModal,\n  abortPageRequests: abortPageRequests,\n  setMode: setMode,\n  cleanup: cleanup,\n  blockRestaurant: blockRestaurant,\n  showConfirm: showConfirm,\n  deleteRestaurant: deleteRestaurant,\n  toggleSetRestaurantHoursModal: toggleSetRestaurantHoursModal,\n  clearFilters: clearFilters\n};\nvar Restaurants = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = AppCleanHOC(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Restaurants, _PureComponent);\n\n  function Restaurants() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Restaurants);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Restaurants)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.settings = [{\n      field: 'name',\n      title: 'Name',\n      formatter: _this.restaurantsNameFormatter,\n      sort: true\n    }, {\n      field: 'revenue',\n      title: 'Revenue',\n      sort: true\n    }, {\n      field: 'subscription',\n      title: 'Subscription',\n      sort: true\n    }, {\n      field: 'agent_name',\n      title: 'Agents name',\n      sort: true\n    }, {\n      field: 'onboarded',\n      title: 'Onboarded',\n      sort: true\n    }, {\n      field: 'delivery_method',\n      title: 'Delivery Method',\n      sort: true\n    }, {\n      field: 'actions',\n      formatter: _this.restaurantsActionsFormatter,\n      title: 'Actions',\n      style: {\n        maxWidth: '240px',\n        paddingRight: '10px'\n      }\n    }];\n    _this.tableOptions = {\n      requestTrigger: _this.requestTrigger,\n      updateFilters: _this.props.updateFilters\n    };\n    return _this;\n  }\n\n  _createClass(Restaurants, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.requestTrigger();\n    }\n  }, {\n    key: \"onEditClick\",\n    value: function onEditClick(event) {\n      var _this$props = this.props,\n          toggleRestaurantsModal = _this$props.toggleRestaurantsModal,\n          setMode = _this$props.setMode;\n      var id = event.target.id;\n      setMode({\n        mode: 'edit',\n        id: id\n      });\n      toggleRestaurantsModal(true);\n    }\n  }, {\n    key: \"restaurantsActionsFormatter\",\n    value: function restaurantsActionsFormatter(cell) {\n      return React.createElement(RestaurantsActionsFormatter, Object.assign({}, HelperService.pick(this.props, ['blockRestaurant', 'showConfirm', 'deleteRestaurant', 'toggleSetRestaurantHoursModal']), cell, {\n        onEditClick: this.onEditClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"restaurantsNameFormatter\",\n    value: function restaurantsNameFormatter(name) {\n      return React.createElement(RestaurantsNameFormatter, Object.assign({}, name, {\n        onNameClick: this.onEditClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"requestTrigger\",\n    value: function requestTrigger() {\n      var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.filters;\n      this.props.getRestaurants({\n        body: _objectSpread({}, this.props.filters, filters)\n      });\n    }\n  }, {\n    key: \"renderRestaurantFilters\",\n    value: function renderRestaurantFilters() {\n      var _this$props2 = this.props,\n          _this$props2$filters = _this$props2.filters,\n          cuisine = _this$props2$filters.cuisine,\n          revenue = _this$props2$filters.revenue,\n          subscription = _this$props2$filters.subscription,\n          status = _this$props2$filters.status,\n          deliveryMethod = _this$props2$filters.deliveryMethod,\n          agent_name = _this$props2$filters.agent_name,\n          onboardingPeriodStart = _this$props2$filters.onboardingPeriodStart,\n          onboardingPeriodEnd = _this$props2$filters.onboardingPeriodEnd,\n          search = _this$props2$filters.search,\n          clearFilters = _this$props2.clearFilters,\n          dictionary = _this$props2.dictionary,\n          updateFilters = _this$props2.updateFilters;\n      return React.createElement(RestaurantsFilters, Object.assign({\n        cuisine: cuisine,\n        dictionary: dictionary,\n        revenue: revenue,\n        subscription: subscription,\n        status: status,\n        search: search,\n        deliveryMethod: deliveryMethod,\n        agent_name: agent_name,\n        clearFilters: clearFilters,\n        onboardingPeriodStart: onboardingPeriodStart,\n        onboardingPeriodEnd: onboardingPeriodEnd,\n        updateFilters: updateFilters\n      }, {\n        requestTrigger: this.requestTrigger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderMetaRow\",\n    value: function renderMetaRow() {\n      var total = this.props.total;\n      return React.createElement(\"span\", {\n        className: \"app-meta-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, total || 0, \" are shown. You can filter them by:\");\n    }\n  }, {\n    key: \"onAddNewClick\",\n    value: function onAddNewClick() {\n      var _this$props3 = this.props,\n          toggleRestaurantsModal = _this$props3.toggleRestaurantsModal,\n          setMode = _this$props3.setMode;\n      setMode({\n        mode: 'add'\n      });\n      toggleRestaurantsModal(true);\n    }\n  }, {\n    key: \"renderPageHeader\",\n    value: function renderPageHeader() {\n      return React.createElement(\"div\", {\n        className: \"restaurants-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Restaurants\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.onAddNewClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Add, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), \"Add new\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          _this$props4$filters = _this$props4.filters,\n          limit = _this$props4$filters.limit,\n          page = _this$props4$filters.page,\n          sort_field = _this$props4$filters.sort_field,\n          sort_order = _this$props4$filters.sort_order,\n          loading = _this$props4.loading,\n          total = _this$props4.total;\n      return React.createElement(DocumentTitle, {\n        title: \"Restaurants List auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-static-container restaurants\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, this.renderPageHeader(), this.renderMetaRow(), this.renderRestaurantFilters(), React.createElement(AppTable, Object.assign({\n        data: this.props.tableData,\n        loading: loading,\n        total: total,\n        options: this.tableOptions,\n        dataSettings: this.settings\n      }, {\n        limit: limit,\n        page: page,\n        sort_field: sort_field,\n        sort_order: sort_order\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })), React.createElement(RestaurantModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(SetRestaurantHoursModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Restaurants;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onEditClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onEditClick\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"restaurantsActionsFormatter\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"restaurantsActionsFormatter\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"restaurantsNameFormatter\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"restaurantsNameFormatter\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"requestTrigger\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"requestTrigger\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onAddNewClick\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onAddNewClick\"), _class2.prototype)), _class2)) || _class) || _class);\nexport { Restaurants as default };\nRestaurants.propTypes = {\n  tableData: PropTypes.array,\n  filters: PropTypes.object,\n  loading: PropTypes.bool\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Restaurants/Restaurants.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Restaurants/Restaurants.js\");\n  reactHotLoader.register(Restaurants, \"Restaurants\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Restaurants/Restaurants.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/Restaurants/Restaurants.js"],"names":["React","PureComponent","PropTypes","DocumentTitle","connect","Button","Add","autobind","RestaurantsFilters","RestaurantsActionsFormatter","RestaurantsNameFormatter","HelperService","getRestaurants","updateFilters","cleanup","restaurantsListTableDataSelector","filtersSelector","isRestaurantsLoadingSelector","restaurantsCountSelector","abortPageRequests","blockRestaurant","deleteRestaurant","clearFilters","showConfirm","dictionarySelector","RestaurantModal","SetRestaurantHoursModal","toggleRestaurantsModal","setMode","toggleSetRestaurantHoursModal","AppTable","AppCleanHOC","mapStateToProps","state","tableData","total","filters","loading","dictionary","mapDispatchToProps","Restaurants","settings","field","title","formatter","restaurantsNameFormatter","sort","restaurantsActionsFormatter","style","maxWidth","paddingRight","tableOptions","requestTrigger","props","event","id","target","mode","cell","pick","onEditClick","name","body","cuisine","revenue","subscription","status","deliveryMethod","agent_name","onboardingPeriodStart","onboardingPeriodEnd","search","onAddNewClick","limit","page","sort_field","sort_order","renderPageHeader","renderMetaRow","renderRestaurantFilters","propTypes","array","object","bool"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport DocumentTitle from 'react-document-title';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Add from '@material-ui/icons/Add';\nimport { autobind } from 'core-decorators';\n\nimport {\n  RestaurantsFilters,\n  RestaurantsActionsFormatter,\n  RestaurantsNameFormatter,\n} from './components';\nimport { HelperService } from '../../services';\nimport {\n  getRestaurants,\n  updateFilters,\n  cleanup,\n  restaurantsListTableDataSelector,\n  filtersSelector,\n  isRestaurantsLoadingSelector,\n  restaurantsCountSelector,\n  abortPageRequests,\n  blockRestaurant,\n  deleteRestaurant,\n  clearFilters,\n} from '../../modules/restaurants';\nimport { showConfirm } from '../AppConfirm/modules';\nimport { dictionarySelector } from '../../modules/core/core.selectors';\nimport { RestaurantModal } from '../RestaurantModal';\nimport { SetRestaurantHoursModal } from '../SetRestaurantHoursModal';\nimport { toggleRestaurantsModal, setMode } from '../RestaurantModal/modules';\nimport { toggleSetRestaurantHoursModal } from '../SetRestaurantHoursModal/modules';\nimport { AppTable, AppCleanHOC } from '../../components';\nimport './Restaurants.scss';\n\nconst mapStateToProps = state => ({\n  tableData: restaurantsListTableDataSelector(state),\n  total: restaurantsCountSelector(state),\n  filters: filtersSelector(state),\n  loading: isRestaurantsLoadingSelector(state),\n  dictionary: dictionarySelector(state),\n});\n\nconst mapDispatchToProps = {\n  getRestaurants,\n  updateFilters,\n  toggleRestaurantsModal,\n  abortPageRequests,\n  setMode,\n  cleanup,\n  blockRestaurant,\n  showConfirm,\n  deleteRestaurant,\n  toggleSetRestaurantHoursModal,\n  clearFilters,\n};\n\nexport default\n@connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)\n@AppCleanHOC\nclass Restaurants extends PureComponent {\n  settings = [\n    {\n      field: 'name',\n      title: 'Name',\n      formatter: this.restaurantsNameFormatter,\n      sort: true,\n    },\n    {\n      field: 'revenue',\n      title: 'Revenue',\n      sort: true,\n    },\n    {\n      field: 'subscription',\n      title: 'Subscription',\n      sort: true,\n    },\n    {\n      field: 'agent_name',\n      title: 'Agents name',\n      sort: true,\n    },\n    {\n      field: 'onboarded',\n      title: 'Onboarded',\n      sort: true,\n    },\n    {\n      field: 'delivery_method',\n      title: 'Delivery Method',\n      sort: true,\n    },\n    {\n      field: 'actions',\n      formatter: this.restaurantsActionsFormatter,\n      title: 'Actions',\n      style: {\n        maxWidth: '240px',\n        paddingRight: '10px',\n      },\n    },\n  ];\n\n  tableOptions = {\n    requestTrigger: this.requestTrigger,\n    updateFilters: this.props.updateFilters,\n  };\n\n  componentDidMount() {\n    this.requestTrigger();\n  }\n\n  @autobind\n  onEditClick(event) {\n    const { toggleRestaurantsModal, setMode } = this.props;\n    const { id } = event.target;\n    setMode({ mode: 'edit', id });\n    toggleRestaurantsModal(true);\n  }\n\n  @autobind\n  restaurantsActionsFormatter(cell) {\n    return (\n      <RestaurantsActionsFormatter\n        {...HelperService.pick(this.props, [\n          'blockRestaurant',\n          'showConfirm',\n          'deleteRestaurant',\n          'toggleSetRestaurantHoursModal',\n        ])}\n        {...cell}\n        onEditClick={this.onEditClick}\n      />\n    );\n  }\n\n  @autobind\n  restaurantsNameFormatter(name) {\n    return (\n      <RestaurantsNameFormatter {...name} onNameClick={this.onEditClick} />\n    );\n  }\n\n  @autobind\n  requestTrigger(filters = this.props.filters) {\n    this.props.getRestaurants({ body: { ...this.props.filters, ...filters } });\n  }\n\n  renderRestaurantFilters() {\n    const {\n      filters: {\n        cuisine,\n        revenue,\n        subscription,\n        status,\n        deliveryMethod,\n        agent_name,\n        onboardingPeriodStart,\n        onboardingPeriodEnd,\n        search,\n      },\n      clearFilters,\n      dictionary,\n      updateFilters,\n    } = this.props;\n\n    return (\n      <RestaurantsFilters\n        {...{\n          cuisine,\n          dictionary,\n          revenue,\n          subscription,\n          status,\n          search,\n          deliveryMethod,\n          agent_name,\n          clearFilters,\n          onboardingPeriodStart,\n          onboardingPeriodEnd,\n          updateFilters,\n        }}\n        requestTrigger={this.requestTrigger}\n      />\n    );\n  }\n\n  renderMetaRow() {\n    const { total } = this.props;\n    return (\n      <span className=\"app-meta-info\">\n        {total || 0} are shown. You can filter them by:\n      </span>\n    );\n  }\n\n  @autobind\n  onAddNewClick() {\n    const { toggleRestaurantsModal, setMode } = this.props;\n    setMode({ mode: 'add' });\n    toggleRestaurantsModal(true);\n  }\n\n  renderPageHeader() {\n    return (\n      <div className=\"restaurants-header\">\n        <h1>Restaurants</h1>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onAddNewClick}>\n          <Add />\n          Add new\n        </Button>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      filters: { limit, page, sort_field, sort_order },\n      loading,\n      total,\n    } = this.props;\n\n    return (\n      <DocumentTitle title=\"Restaurants List auto\">\n        <div className=\"app-static-container restaurants\">\n          {this.renderPageHeader()}\n          {this.renderMetaRow()}\n          {this.renderRestaurantFilters()}\n          <AppTable\n            data={this.props.tableData}\n            loading={loading}\n            total={total}\n            options={this.tableOptions}\n            dataSettings={this.settings}\n            {...{\n              limit,\n              page,\n              sort_field,\n              sort_order,\n            }}\n          />\n          <RestaurantModal />\n          <SetRestaurantHoursModal />\n        </div>\n      </DocumentTitle>\n    );\n  }\n}\n\nRestaurants.propTypes = {\n  tableData: PropTypes.array,\n  filters: PropTypes.object,\n  loading: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}