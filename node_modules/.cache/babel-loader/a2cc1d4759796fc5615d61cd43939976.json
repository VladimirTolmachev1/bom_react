{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport jwt from 'jsonwebtoken';\nimport { SET_THEME_COLOR, SIGN_IN_REQUEST, SIGN_IN_SUCCESS, SIGN_IN_ERROR, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_ERROR, RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_ERROR, DICTIONARY_GET_SUCCESS, SIGN_OUT } from './core.types';\nimport { HelperService } from '../../services'; // TODO : REMOVE THIS !!!!! IT\"S VERY BAD!!\n\nvar secret = 'yKarytod17Gc3FsGPkiYUI77sqUqw5A8'; // TODO : REMOVE THIS !!!!! IT\"S VERY BAD!!\n\nfunction parseToken(token) {\n  try {\n    var result = jwt.verify(token, secret);\n    return result;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction getRole(token) {\n  var parsedToken = parseToken(token) || {};\n  return {\n    name: parsedToken.role,\n    restaurant_id: parsedToken.id\n  };\n}\n\nvar getInitialState = function getInitialState() {\n  var token = HelperService.getFromStorage(localStorage, 'token');\n  return {\n    user: null,\n    token: token,\n    isAuth: Boolean(parseToken(token)),\n    role: getRole(token),\n    userInfo: null,\n    dictionary: {\n      cuisine: [],\n      revenues: [],\n      subscriptions: [],\n      agent_names: [],\n      deliveryMethods: [],\n      statuses: [{\n        name: 'Blocked',\n        value: 'blocked'\n      }, {\n        name: 'Active',\n        value: 'active'\n      }]\n    },\n    bgColor: 'white',\n    theme: {\n      useNextVariants: true,\n      palette: {\n        primary: {\n          main: '#f06338'\n        },\n        secondary: {\n          main: '#5b9be4'\n        }\n      }\n    },\n    signInLoading: false,\n    forgotPasswordLoading: false,\n    resetPasswordLoading: false,\n    error: null\n  };\n};\n\nexport function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getInitialState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SIGN_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          signInLoading: true\n        });\n      }\n\n    case FORGOT_PASSWORD_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          forgotPasswordLoading: true\n        });\n      }\n\n    case FORGOT_PASSWORD_SUCCESS:\n    case FORGOT_PASSWORD_ERROR:\n      {\n        return _objectSpread({}, state, {\n          forgotPasswordLoading: false\n        });\n      }\n\n    case RESET_PASSWORD_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          resetPasswordLoading: true\n        });\n      }\n\n    case RESET_PASSWORD_SUCCESS:\n    case RESET_PASSWORD_ERROR:\n      {\n        return _objectSpread({}, state, {\n          resetPasswordLoading: false\n        });\n      }\n\n    case SET_THEME_COLOR:\n      {\n        return _objectSpread({}, state, {\n          bgColor: action.bgColor || state.bgColor,\n          theme: _objectSpread({}, state.theme, {\n            palette: _objectSpread({}, state.theme.palete, {\n              primary: {\n                main: action.color || state.theme.palette.primary.main\n              }\n            })\n          })\n        });\n      }\n\n    case SIGN_IN_SUCCESS:\n      {\n        var _action$response = action.response,\n            user = _action$response.user,\n            token = _action$response.token;\n        return _objectSpread({}, state, {\n          signInLoading: false,\n          token: token,\n          isAuth: Boolean(token),\n          role: getRole(token),\n          user: user\n        });\n      }\n\n    case DICTIONARY_GET_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          dictionary: _objectSpread({}, state.dictionary, action.response)\n        });\n      }\n\n    case SIGN_OUT:\n      {\n        return getInitialState();\n      }\n\n    case SIGN_IN_ERROR:\n      {\n        return _objectSpread({}, state, {\n          signInLoading: false,\n          error: action.error\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(secret, \"secret\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.modules.js\");\n  reactHotLoader.register(parseToken, \"parseToken\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.modules.js\");\n  reactHotLoader.register(getRole, \"getRole\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.modules.js\");\n  reactHotLoader.register(getInitialState, \"getInitialState\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.modules.js\");\n  reactHotLoader.register(reducer, \"reducer\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.modules.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/core/core.modules.js"],"names":["jwt","SET_THEME_COLOR","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_ERROR","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_ERROR","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","DICTIONARY_GET_SUCCESS","SIGN_OUT","HelperService","secret","parseToken","token","result","verify","err","getRole","parsedToken","name","role","restaurant_id","id","getInitialState","getFromStorage","localStorage","user","isAuth","Boolean","userInfo","dictionary","cuisine","revenues","subscriptions","agent_names","deliveryMethods","statuses","value","bgColor","theme","useNextVariants","palette","primary","main","secondary","signInLoading","forgotPasswordLoading","resetPasswordLoading","error","reducer","state","action","type","palete","color","response"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken';\nimport {\n  SET_THEME_COLOR,\n  SIGN_IN_REQUEST,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_ERROR,\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_ERROR,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_ERROR,\n  DICTIONARY_GET_SUCCESS,\n  SIGN_OUT,\n} from './core.types';\n\nimport { HelperService } from '../../services';\n\n// TODO : REMOVE THIS !!!!! IT\"S VERY BAD!!\nconst secret = 'yKarytod17Gc3FsGPkiYUI77sqUqw5A8';\n\n// TODO : REMOVE THIS !!!!! IT\"S VERY BAD!!\nfunction parseToken(token) {\n  try {\n    const result = jwt.verify(token, secret);\n    return result;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction getRole(token) {\n  const parsedToken = parseToken(token) || {};\n\n  return {\n    name: parsedToken.role,\n    restaurant_id: parsedToken.id,\n  };\n}\n\nconst getInitialState = () => {\n  const token = HelperService.getFromStorage(localStorage, 'token');\n\n  return {\n    user: null,\n    token,\n    isAuth: Boolean(parseToken(token)),\n    role: getRole(token),\n    userInfo: null,\n    dictionary: {\n      cuisine: [],\n      revenues: [],\n      subscriptions: [],\n      agent_names: [],\n      deliveryMethods: [],\n      statuses: [\n        { name: 'Blocked', value: 'blocked' },\n        { name: 'Active', value: 'active' },\n      ],\n    },\n    bgColor: 'white',\n    theme: {\n      useNextVariants: true,\n      palette: {\n        primary: {\n          main: '#f06338',\n        },\n        secondary: {\n          main: '#5b9be4',\n        },\n      },\n    },\n    signInLoading: false,\n    forgotPasswordLoading: false,\n    resetPasswordLoading: false,\n    error: null,\n  };\n};\n\nexport function reducer(state = getInitialState(), action) {\n  switch (action.type) {\n    case SIGN_IN_REQUEST: {\n      return {\n        ...state,\n        signInLoading: true,\n      };\n    }\n\n    case FORGOT_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        forgotPasswordLoading: true,\n      };\n    }\n\n    case FORGOT_PASSWORD_SUCCESS:\n    case FORGOT_PASSWORD_ERROR: {\n      return {\n        ...state,\n        forgotPasswordLoading: false,\n      };\n    }\n\n    case RESET_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        resetPasswordLoading: true,\n      };\n    }\n\n    case RESET_PASSWORD_SUCCESS:\n    case RESET_PASSWORD_ERROR: {\n      return {\n        ...state,\n        resetPasswordLoading: false,\n      };\n    }\n\n    case SET_THEME_COLOR: {\n      return {\n        ...state,\n        bgColor: action.bgColor || state.bgColor,\n        theme: {\n          ...state.theme,\n          palette: {\n            ...state.theme.palete,\n            primary: {\n              main: action.color || state.theme.palette.primary.main,\n            },\n          },\n        },\n      };\n    }\n\n    case SIGN_IN_SUCCESS: {\n      const { user, token } = action.response;\n\n      return {\n        ...state,\n        signInLoading: false,\n        token,\n        isAuth: Boolean(token),\n        role: getRole(token),\n        user,\n      };\n    }\n\n    case DICTIONARY_GET_SUCCESS: {\n      return {\n        ...state,\n        dictionary: {\n          ...state.dictionary,\n          ...action.response,\n        },\n      };\n    }\n\n    case SIGN_OUT: {\n      return getInitialState();\n    }\n\n    case SIGN_IN_ERROR: {\n      return {\n        ...state,\n        signInLoading: false,\n        error: action.error,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}