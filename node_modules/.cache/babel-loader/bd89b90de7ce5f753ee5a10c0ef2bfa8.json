{"ast":null,"code":"import _regeneratorRuntime from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(createOrderFromRestauratorModalSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(handleOpenOrderEditingModalSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addItemToOrderSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(openOrderItemCreationModalSaga),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(restauratorOrderModalCloseSaga),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(openOrderItemForEditingSaga),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(triggerOrderUpdatingSaga),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(restauratorOrderModalSaga);\n\nimport { takeLatest, all, put, select, call } from 'redux-saga/effects';\nimport { destroy } from 'redux-form';\nimport { RESTAURATOR_ORDER_MODAL__OPEN_EDITING, RESTAURATOR_ORDER_MODAL__OPEN_ORDER_ITEM_FOR_EDITING, RESTAURATOR_ORDER_MODAL__OPEN_ORDER_ITEM_CREATION_MODAL, RESTAURATOR_ORDER_MODAL__TRIGGER_ADD_ITEM_TO_ORDER, RESTAURATOR_ORDER_MODAL__CREATE_ORDER, RESTAURATOR_ORDER_MODAL__UPDATE_ORDER, RESTAURATOR_ORDER_MODAL__CLOSE } from './restaurator-order-modal.types';\nimport { bulkCreateCheckoutItems, updateCheckoutItem, putItemToCheckout, checkoutItemsForPaymentsSelector, totalPriceSelector, clearCheckout } from '../../checkout';\nimport { ordersByIdsSelector, updateOrderSaga, orderCreatingSaga } from '../../orders';\nimport { setDishOrderModal, closeDishOrderModal } from '../dish-order';\nimport { getDishByIdSaga } from '../../dishes';\nimport { showToast } from '../../../scenes/Toasts/modules';\nimport { orderItemFormValuesSelector, clientInfoFormValuesSelector } from '../../../components/forms/selectors';\nimport { activeOrderIdSelector } from './restaurator-order-modal.selectors';\nimport { closeRestauratorOrderModal } from './restaurator-order-modal.actions';\nimport { CLIENT_INFO_FORM } from '../../../components/forms/constants/form.names';\n\nfunction convertExtrasToSelected(all, selected) {\n  if (!(selected || []).length) {\n    return;\n  } // TODO: check for mutation\n\n\n  all.forEach(function (extra) {\n    var selectedItem = selected.find(function (_ref) {\n      var id = _ref.id;\n      return id === extra.id;\n    });\n\n    if (selectedItem) {\n      extra.selected = true;\n      extra.amount = selectedItem.amount;\n    }\n  });\n}\n\nvar markSelectedSizesIfPresent = function markSelectedSizesIfPresent(item) {\n  if (!item.selectedSize) {\n    return;\n  }\n\n  item.selectedSize = item.selectedSize.id;\n};\n\nvar markSelectedExtrasInExtraLists = function markSelectedExtrasInExtraLists(item) {\n  if (!(item.selectedExtras || []).length || !(item.extra_lists || []).length) {\n    return;\n  }\n\n  item.extra_lists.forEach(function (list) {\n    if (list.multi_selection) {\n      convertExtrasToSelected(list.items, item.selectedExtras);\n    } else {\n      var extra = list.items.find(function (_ref2) {\n        var id = _ref2.id;\n        return item.selectedExtras.some(function (extra) {\n          return extra.id === id;\n        });\n      });\n\n      if (extra) {\n        list.selectedExtra = extra.id;\n      }\n    }\n  });\n};\n\nfunction createOrderFromRestauratorModalSaga() {\n  var paymentDetails, price, payload;\n  return _regeneratorRuntime.wrap(function createOrderFromRestauratorModalSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return select(clientInfoFormValuesSelector);\n\n        case 3:\n          paymentDetails = _context.sent;\n          _context.next = 6;\n          return select(totalPriceSelector);\n\n        case 6:\n          price = _context.sent;\n          payload = {\n            paymentDetails: _objectSpread({}, paymentDetails, {\n              total_price: price.total\n            })\n          };\n          _context.next = 10;\n          return call(orderCreatingSaga, {\n            payload: payload\n          });\n\n        case 10:\n          _context.next = 12;\n          return put(closeRestauratorOrderModal());\n\n        case 12:\n          _context.next = 18;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 18;\n          return put(showToast({\n            text: 'SOme error occurred while order creation',\n            type: 'error'\n          }));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 14]]);\n}\n\nfunction handleOpenOrderEditingModalSaga(_ref3) {\n  var payload, ordersByIds, order;\n  return _regeneratorRuntime.wrap(function handleOpenOrderEditingModalSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context2.next = 3;\n          return select(ordersByIdsSelector);\n\n        case 3:\n          ordersByIds = _context2.sent;\n          order = ordersByIds[payload.orderId];\n          _context2.next = 7;\n          return put(bulkCreateCheckoutItems(order.products));\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nfunction addItemToOrderSaga() {\n  var dish, item;\n  return _regeneratorRuntime.wrap(function addItemToOrderSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return select(orderItemFormValuesSelector);\n\n        case 3:\n          dish = _context3.sent;\n          item = _objectSpread({}, dish);\n\n          if (item.selectedSize && typeof item.selectedSize === 'object') {\n            item.selectedSize = item.selectedSize.id;\n          }\n\n          item.isAlreadyOpenedForEditingBefore = true;\n          _context3.next = 9;\n          return put(putItemToCheckout(item));\n\n        case 9:\n          _context3.next = 11;\n          return put(closeDishOrderModal());\n\n        case 11:\n          _context3.next = 18;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 18;\n          return put(showToast({\n            text: 'Some error occurred while creating checkout item',\n            type: 'error'\n          }));\n\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this, [[0, 13]]);\n}\n\nfunction openOrderItemCreationModalSaga(_ref4) {\n  var dishId;\n  return _regeneratorRuntime.wrap(function openOrderItemCreationModalSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          dishId = _ref4.payload.dishId;\n          _context4.next = 3;\n          return put(setDishOrderModal({\n            open: true,\n            isLoading: true,\n            id: dishId\n          }));\n\n        case 3:\n          _context4.next = 5;\n          return call(getDishByIdSaga, {\n            payload: dishId\n          });\n\n        case 5:\n          _context4.next = 7;\n          return put(setDishOrderModal({\n            isLoading: false\n          }));\n\n        case 7:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this);\n}\n\nfunction restauratorOrderModalCloseSaga() {\n  return _regeneratorRuntime.wrap(function restauratorOrderModalCloseSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([put(destroy(CLIENT_INFO_FORM)), put(clearCheckout())]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, this);\n}\n\nfunction openOrderItemForEditingSaga(_ref5) {\n  var item, dish, itemWithAllAvailableSizesAndExtras;\n  return _regeneratorRuntime.wrap(function openOrderItemForEditingSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          item = _ref5.payload.item;\n          _context6.next = 3;\n          return put(setDishOrderModal({\n            open: true,\n            isEditing: true,\n            isLoading: true,\n            id: item.uuid\n          }));\n\n        case 3:\n          if (!item.isAlreadyOpenedForEditingBefore) {\n            _context6.next = 7;\n            break;\n          }\n\n          _context6.next = 6;\n          return put(setDishOrderModal({\n            isLoading: false\n          }));\n\n        case 6:\n          return _context6.abrupt(\"return\");\n\n        case 7:\n          _context6.next = 9;\n          return call(getDishByIdSaga, {\n            payload: item.dish_id\n          });\n\n        case 9:\n          dish = _context6.sent;\n          itemWithAllAvailableSizesAndExtras = _objectSpread({}, item, {\n            extra_lists: dish.extra_lists,\n            sizes: dish.sizes,\n            extras: dish.extras,\n            isAlreadyOpenedForEditingBefore: true\n          });\n          markSelectedExtrasInExtraLists(itemWithAllAvailableSizesAndExtras);\n          markSelectedSizesIfPresent(itemWithAllAvailableSizesAndExtras);\n          convertExtrasToSelected(itemWithAllAvailableSizesAndExtras.extras, itemWithAllAvailableSizesAndExtras.selectedExtras);\n          _context6.next = 16;\n          return put(updateCheckoutItem(itemWithAllAvailableSizesAndExtras));\n\n        case 16:\n          _context6.next = 18;\n          return put(setDishOrderModal({\n            isLoading: false\n          }));\n\n        case 18:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, this);\n}\n\nfunction triggerOrderUpdatingSaga() {\n  var clientInfoValues, orderProductsValues, price, id, payload;\n  return _regeneratorRuntime.wrap(function triggerOrderUpdatingSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return select(clientInfoFormValuesSelector);\n\n        case 2:\n          clientInfoValues = _context7.sent;\n          _context7.next = 5;\n          return select(checkoutItemsForPaymentsSelector);\n\n        case 5:\n          orderProductsValues = _context7.sent;\n          _context7.next = 8;\n          return select(totalPriceSelector);\n\n        case 8:\n          price = _context7.sent;\n          _context7.next = 11;\n          return select(activeOrderIdSelector);\n\n        case 11:\n          id = _context7.sent;\n          payload = _objectSpread({}, clientInfoValues, {\n            total_price: price.total,\n            products: orderProductsValues,\n            id: id\n          });\n          _context7.prev = 13;\n          _context7.next = 16;\n          return call(updateOrderSaga, {\n            payload: payload\n          });\n\n        case 16:\n          _context7.next = 18;\n          return put(closeRestauratorOrderModal());\n\n        case 18:\n          _context7.next = 24;\n          break;\n\n        case 20:\n          _context7.prev = 20;\n          _context7.t0 = _context7[\"catch\"](13);\n          _context7.next = 24;\n          return put(showToast({\n            text: 'Some error occurred while order updating',\n            type: 'error'\n          }));\n\n        case 24:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, this, [[13, 20]]);\n}\n\nexport function restauratorOrderModalSaga() {\n  return _regeneratorRuntime.wrap(function restauratorOrderModalSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return all([takeLatest(RESTAURATOR_ORDER_MODAL__OPEN_EDITING, handleOpenOrderEditingModalSaga), takeLatest(RESTAURATOR_ORDER_MODAL__CLOSE, restauratorOrderModalCloseSaga), takeLatest(RESTAURATOR_ORDER_MODAL__OPEN_ORDER_ITEM_FOR_EDITING, openOrderItemForEditingSaga), takeLatest(RESTAURATOR_ORDER_MODAL__OPEN_ORDER_ITEM_CREATION_MODAL, openOrderItemCreationModalSaga), takeLatest(RESTAURATOR_ORDER_MODAL__TRIGGER_ADD_ITEM_TO_ORDER, addItemToOrderSaga), takeLatest(RESTAURATOR_ORDER_MODAL__UPDATE_ORDER, triggerOrderUpdatingSaga), takeLatest(RESTAURATOR_ORDER_MODAL__CREATE_ORDER, createOrderFromRestauratorModalSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, this);\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(convertExtrasToSelected, \"convertExtrasToSelected\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/restaurator-order/restaurator-order-modal.sagas.js\");\n  reactHotLoader.register(markSelectedSizesIfPresent, \"markSelectedSizesIfPresent\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/restaurator-order/restaurator-order-modal.sagas.js\");\n  reactHotLoader.register(markSelectedExtrasInExtraLists, \"markSelectedExtrasInExtraLists\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/restaurator-order/restaurator-order-modal.sagas.js\");\n  reactHotLoader.register(createOrderFromRestauratorModalSaga, \"createOrderFromRestauratorModalSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/restaurator-order/restaurator-order-modal.sagas.js\");\n  reactHotLoader.register(handleOpenOrderEditingModalSaga, \"handleOpenOrderEditingModalSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/restaurator-order/restaurator-order-modal.sagas.js\");\n  reactHotLoader.register(addItemToOrderSaga, \"addItemToOrderSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/restaurator-order/restaurator-order-modal.sagas.js\");\n  reactHotLoader.register(openOrderItemCreationModalSaga, \"openOrderItemCreationModalSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/restaurator-order/restaurator-order-modal.sagas.js\");\n  reactHotLoader.register(restauratorOrderModalCloseSaga, \"restauratorOrderModalCloseSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/restaurator-order/restaurator-order-modal.sagas.js\");\n  reactHotLoader.register(openOrderItemForEditingSaga, \"openOrderItemForEditingSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/restaurator-order/restaurator-order-modal.sagas.js\");\n  reactHotLoader.register(triggerOrderUpdatingSaga, \"triggerOrderUpdatingSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/restaurator-order/restaurator-order-modal.sagas.js\");\n  reactHotLoader.register(restauratorOrderModalSaga, \"restauratorOrderModalSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/restaurator-order/restaurator-order-modal.sagas.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/modals/restaurator-order/restaurator-order-modal.sagas.js"],"names":["createOrderFromRestauratorModalSaga","handleOpenOrderEditingModalSaga","addItemToOrderSaga","openOrderItemCreationModalSaga","restauratorOrderModalCloseSaga","openOrderItemForEditingSaga","triggerOrderUpdatingSaga","restauratorOrderModalSaga","takeLatest","all","put","select","call","destroy","RESTAURATOR_ORDER_MODAL__OPEN_EDITING","RESTAURATOR_ORDER_MODAL__OPEN_ORDER_ITEM_FOR_EDITING","RESTAURATOR_ORDER_MODAL__OPEN_ORDER_ITEM_CREATION_MODAL","RESTAURATOR_ORDER_MODAL__TRIGGER_ADD_ITEM_TO_ORDER","RESTAURATOR_ORDER_MODAL__CREATE_ORDER","RESTAURATOR_ORDER_MODAL__UPDATE_ORDER","RESTAURATOR_ORDER_MODAL__CLOSE","bulkCreateCheckoutItems","updateCheckoutItem","putItemToCheckout","checkoutItemsForPaymentsSelector","totalPriceSelector","clearCheckout","ordersByIdsSelector","updateOrderSaga","orderCreatingSaga","setDishOrderModal","closeDishOrderModal","getDishByIdSaga","showToast","orderItemFormValuesSelector","clientInfoFormValuesSelector","activeOrderIdSelector","closeRestauratorOrderModal","CLIENT_INFO_FORM","convertExtrasToSelected","selected","length","forEach","extra","selectedItem","find","id","amount","markSelectedSizesIfPresent","item","selectedSize","markSelectedExtrasInExtraLists","selectedExtras","extra_lists","list","multi_selection","items","some","selectedExtra","paymentDetails","price","payload","total_price","total","text","type","ordersByIds","order","orderId","products","dish","isAlreadyOpenedForEditingBefore","console","error","dishId","open","isLoading","isEditing","uuid","dish_id","itemWithAllAvailableSizesAndExtras","sizes","extras","clientInfoValues","orderProductsValues"],"mappings":"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","sourcesContent":["import { takeLatest, all, put, select, call } from 'redux-saga/effects';\nimport { destroy } from 'redux-form';\n\nimport {\n  RESTAURATOR_ORDER_MODAL__OPEN_EDITING,\n  RESTAURATOR_ORDER_MODAL__OPEN_ORDER_ITEM_FOR_EDITING,\n  RESTAURATOR_ORDER_MODAL__OPEN_ORDER_ITEM_CREATION_MODAL,\n  RESTAURATOR_ORDER_MODAL__TRIGGER_ADD_ITEM_TO_ORDER,\n  RESTAURATOR_ORDER_MODAL__CREATE_ORDER,\n  RESTAURATOR_ORDER_MODAL__UPDATE_ORDER,\n  RESTAURATOR_ORDER_MODAL__CLOSE,\n} from './restaurator-order-modal.types';\nimport {\n  bulkCreateCheckoutItems,\n  updateCheckoutItem,\n  putItemToCheckout,\n  checkoutItemsForPaymentsSelector,\n  totalPriceSelector,\n  clearCheckout,\n} from '../../checkout';\nimport {\n  ordersByIdsSelector,\n  updateOrderSaga,\n  orderCreatingSaga,\n} from '../../orders';\nimport { setDishOrderModal, closeDishOrderModal } from '../dish-order';\nimport { getDishByIdSaga } from '../../dishes';\nimport { showToast } from '../../../scenes/Toasts/modules';\nimport {\n  orderItemFormValuesSelector,\n  clientInfoFormValuesSelector,\n} from '../../../components/forms/selectors';\nimport { activeOrderIdSelector } from './restaurator-order-modal.selectors';\nimport { closeRestauratorOrderModal } from './restaurator-order-modal.actions';\nimport { CLIENT_INFO_FORM } from '../../../components/forms/constants/form.names';\n\nfunction convertExtrasToSelected(all, selected) {\n  if (!(selected || []).length) {\n    return;\n  }\n\n  // TODO: check for mutation\n  all.forEach(extra => {\n    const selectedItem = selected.find(({ id }) => id === extra.id);\n\n    if (selectedItem) {\n      extra.selected = true;\n      extra.amount = selectedItem.amount;\n    }\n  });\n}\n\nconst markSelectedSizesIfPresent = item => {\n  if (!item.selectedSize) {\n    return;\n  }\n\n  item.selectedSize = item.selectedSize.id;\n};\n\nconst markSelectedExtrasInExtraLists = item => {\n  if (!(item.selectedExtras || []).length || !(item.extra_lists || []).length) {\n    return;\n  }\n\n  item.extra_lists.forEach(list => {\n    if (list.multi_selection) {\n      convertExtrasToSelected(list.items, item.selectedExtras);\n    } else {\n      const extra = list.items.find(({ id }) =>\n        item.selectedExtras.some(extra => extra.id === id),\n      );\n      if (extra) {\n        list.selectedExtra = extra.id;\n      }\n    }\n  });\n};\n\nfunction* createOrderFromRestauratorModalSaga() {\n  try {\n    const paymentDetails = yield select(clientInfoFormValuesSelector);\n    const price = yield select(totalPriceSelector);\n\n    const payload = {\n      paymentDetails: { ...paymentDetails, total_price: price.total },\n    };\n    yield call(orderCreatingSaga, { payload });\n    yield put(closeRestauratorOrderModal());\n  } catch (error) {\n    yield put(\n      showToast({\n        text: 'SOme error occurred while order creation',\n        type: 'error',\n      }),\n    );\n  }\n}\n\nfunction* handleOpenOrderEditingModalSaga({ payload }) {\n  const ordersByIds = yield select(ordersByIdsSelector);\n\n  const order = ordersByIds[payload.orderId];\n\n  yield put(bulkCreateCheckoutItems(order.products));\n}\n\nfunction* addItemToOrderSaga() {\n  try {\n    const dish = yield select(orderItemFormValuesSelector);\n\n    const item = { ...dish };\n\n    if (item.selectedSize && typeof item.selectedSize === 'object') {\n      item.selectedSize = item.selectedSize.id;\n    }\n\n    item.isAlreadyOpenedForEditingBefore = true;\n\n    yield put(putItemToCheckout(item));\n    yield put(closeDishOrderModal());\n  } catch (error) {\n    console.error(error);\n    yield put(\n      showToast({\n        text: 'Some error occurred while creating checkout item',\n        type: 'error',\n      }),\n    );\n  }\n}\n\nfunction* openOrderItemCreationModalSaga({ payload: { dishId } }) {\n  yield put(\n    setDishOrderModal({\n      open: true,\n      isLoading: true,\n      id: dishId,\n    }),\n  );\n\n  yield call(getDishByIdSaga, { payload: dishId });\n\n  yield put(setDishOrderModal({ isLoading: false }));\n}\n\nfunction* restauratorOrderModalCloseSaga() {\n  yield all([put(destroy(CLIENT_INFO_FORM)), put(clearCheckout())]);\n}\n\nfunction* openOrderItemForEditingSaga({ payload: { item } }) {\n  yield put(\n    setDishOrderModal({\n      open: true,\n      isEditing: true,\n      isLoading: true,\n      id: item.uuid,\n    }),\n  );\n\n  if (item.isAlreadyOpenedForEditingBefore) {\n    yield put(\n      setDishOrderModal({\n        isLoading: false,\n      }),\n    );\n\n    return;\n  }\n\n  const dish = yield call(getDishByIdSaga, { payload: item.dish_id });\n\n  const itemWithAllAvailableSizesAndExtras = {\n    ...item,\n    extra_lists: dish.extra_lists,\n    sizes: dish.sizes,\n    extras: dish.extras,\n\n    isAlreadyOpenedForEditingBefore: true,\n  };\n\n  markSelectedExtrasInExtraLists(itemWithAllAvailableSizesAndExtras);\n  markSelectedSizesIfPresent(itemWithAllAvailableSizesAndExtras);\n\n  convertExtrasToSelected(\n    itemWithAllAvailableSizesAndExtras.extras,\n    itemWithAllAvailableSizesAndExtras.selectedExtras,\n  );\n\n  yield put(updateCheckoutItem(itemWithAllAvailableSizesAndExtras));\n\n  yield put(setDishOrderModal({ isLoading: false }));\n}\n\nfunction* triggerOrderUpdatingSaga() {\n  const clientInfoValues = yield select(clientInfoFormValuesSelector);\n  const orderProductsValues = yield select(checkoutItemsForPaymentsSelector);\n  const price = yield select(totalPriceSelector);\n  const id = yield select(activeOrderIdSelector);\n\n  const payload = {\n    ...clientInfoValues,\n    total_price: price.total,\n    products: orderProductsValues,\n    id,\n  };\n\n  try {\n    yield call(updateOrderSaga, { payload });\n    yield put(closeRestauratorOrderModal());\n  } catch (e) {\n    yield put(\n      showToast({\n        text: 'Some error occurred while order updating',\n        type: 'error',\n      }),\n    );\n  }\n}\n\nexport function* restauratorOrderModalSaga() {\n  yield all([\n    takeLatest(\n      RESTAURATOR_ORDER_MODAL__OPEN_EDITING,\n      handleOpenOrderEditingModalSaga,\n    ),\n    takeLatest(RESTAURATOR_ORDER_MODAL__CLOSE, restauratorOrderModalCloseSaga),\n    takeLatest(\n      RESTAURATOR_ORDER_MODAL__OPEN_ORDER_ITEM_FOR_EDITING,\n      openOrderItemForEditingSaga,\n    ),\n    takeLatest(\n      RESTAURATOR_ORDER_MODAL__OPEN_ORDER_ITEM_CREATION_MODAL,\n      openOrderItemCreationModalSaga,\n    ),\n    takeLatest(\n      RESTAURATOR_ORDER_MODAL__TRIGGER_ADD_ITEM_TO_ORDER,\n      addItemToOrderSaga,\n    ),\n    takeLatest(RESTAURATOR_ORDER_MODAL__UPDATE_ORDER, triggerOrderUpdatingSaga),\n    takeLatest(\n      RESTAURATOR_ORDER_MODAL__CREATE_ORDER,\n      createOrderFromRestauratorModalSaga,\n    ),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}