{"ast":null,"code":"import _regeneratorRuntime from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, fork } from 'redux-saga/effects';\nimport { checkoutSaga } from '../modules/checkout';\nimport { dndSaga } from '../modules/dnd';\nimport { ordersSaga } from '../modules/orders';\nimport { authSaga } from '../modules/core';\nimport { categoryCreationModalSaga } from '../modules/modals/category';\nimport { categoriesSaga } from '../modules/categories';\nimport { dishesSaga } from '../modules/dishes';\nimport { dishModalSaga } from '../modules/modals/dish';\nimport { dishOrderModalSaga } from '../modules/modals/dish-order';\nimport { restauratorOrderModalSaga } from '../modules/modals/restaurator-order';\nimport { restaurantsSaga } from '../modules/restaurants';\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(checkoutSaga), fork(dndSaga), fork(ordersSaga), fork(authSaga), fork(categoriesSaga), fork(categoryCreationModalSaga), fork(dishModalSaga), fork(dishesSaga), fork(dishOrderModalSaga), fork(restauratorOrderModalSaga), fork(restaurantsSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this);\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(rootSaga, \"rootSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/store/rootSaga.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/store/rootSaga.js"],"names":["rootSaga","all","fork","checkoutSaga","dndSaga","ordersSaga","authSaga","categoryCreationModalSaga","categoriesSaga","dishesSaga","dishModalSaga","dishOrderModalSaga","restauratorOrderModalSaga","restaurantsSaga"],"mappings":";;;;;;;;;yBAcyBA,Q;;AAdzB,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AAEA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,yBAAT,QAA0C,4BAA1C;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,yBAAT,QAA0C,qCAA1C;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAEA,eAAe,SAAUb,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACRC,IAAI,CAACC,YAAD,CADI,EAERD,IAAI,CAACE,OAAD,CAFI,EAGRF,IAAI,CAACG,UAAD,CAHI,EAIRH,IAAI,CAACI,QAAD,CAJI,EAKRJ,IAAI,CAACM,cAAD,CALI,EAMRN,IAAI,CAACK,yBAAD,CANI,EAORL,IAAI,CAACQ,aAAD,CAPI,EAQRR,IAAI,CAACO,UAAD,CARI,EASRP,IAAI,CAACS,kBAAD,CATI,EAURT,IAAI,CAACU,yBAAD,CAVI,EAWRV,IAAI,CAACW,eAAD,CAXI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;0BAAUb,Q","sourcesContent":["import { all, fork } from 'redux-saga/effects';\n\nimport { checkoutSaga } from '../modules/checkout';\nimport { dndSaga } from '../modules/dnd';\nimport { ordersSaga } from '../modules/orders';\nimport { authSaga } from '../modules/core';\nimport { categoryCreationModalSaga } from '../modules/modals/category';\nimport { categoriesSaga } from '../modules/categories';\nimport { dishesSaga } from '../modules/dishes';\nimport { dishModalSaga } from '../modules/modals/dish';\nimport { dishOrderModalSaga } from '../modules/modals/dish-order';\nimport { restauratorOrderModalSaga } from '../modules/modals/restaurator-order';\nimport { restaurantsSaga } from '../modules/restaurants';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(checkoutSaga),\n    fork(dndSaga),\n    fork(ordersSaga),\n    fork(authSaga),\n    fork(categoriesSaga),\n    fork(categoryCreationModalSaga),\n    fork(dishModalSaga),\n    fork(dishesSaga),\n    fork(dishOrderModalSaga),\n    fork(restauratorOrderModalSaga),\n    fork(restaurantsSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}