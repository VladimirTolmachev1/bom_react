{"ast":null,"code":"import _regeneratorRuntime from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(checkoutItemCreationSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(builkItemsCreationSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(savingCheckoutToStorage),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(checkoutRestoring),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(backToMenuSaga),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(checkoutSaga);\n\nimport { takeLatest, all, put, select } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport uuid from 'uuid/v4';\nimport { DateTimeService } from '../../services';\nimport { CHECKOUT_MAX_LIVE_DAYS_IN_STORAGE } from './checkout.constants';\nimport { generateCkeckoutStorageKeyByRestaurantId, getUnicOrderItemDescriptor } from './checkout.helpers';\nimport { CHECKOUT__PUT_ITEM, CHECKOUT__SAVE_TO_STORAGE, CHECKOUT__BACK_TO_RESTAURANT_MENU, CHECKOUT__BULK_CREATE_CHECKOUT_ITEMS } from './checkout.types';\nimport { GET_RESTAURANT_FOR_CLIENT_SUCCESS, managedRestaurantIdSelector } from '../restaurants';\nimport { createNewCheckoutItem, increaseCheckoutItemAmountBy, restoreCheckoutFromStorage, setCheckoutUi, bulkSaveCheckout } from './checkout.actions';\nimport { uuidsByItemDecriptorsSelector } from './checkout.selectors';\n\nfunction checkoutItemCreationSaga(_ref) {\n  var item, uuidsByDescriptors, descriptor, itemUuid, resultItem;\n  return _regeneratorRuntime.wrap(function checkoutItemCreationSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          item = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return select(uuidsByItemDecriptorsSelector);\n\n        case 4:\n          uuidsByDescriptors = _context.sent;\n          descriptor = getUnicOrderItemDescriptor(item);\n          itemUuid = uuidsByDescriptors[descriptor];\n\n          if (!itemUuid) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 10;\n          return put(increaseCheckoutItemAmountBy(itemUuid, 1));\n\n        case 10:\n          return _context.abrupt(\"return\");\n\n        case 11:\n          resultItem = _objectSpread({}, item, {\n            descriptor: descriptor,\n            uuid: uuid()\n          });\n          resultItem.dish_id = resultItem.id;\n          delete resultItem.id;\n          delete resultItem.selectedExtras;\n          _context.next = 17;\n          return put(createNewCheckoutItem(resultItem));\n\n        case 17:\n          _context.next = 22;\n          break;\n\n        case 19:\n          _context.prev = 19;\n          _context.t0 = _context[\"catch\"](1);\n          console.error(_context.t0);\n\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[1, 19]]);\n}\n\nfunction builkItemsCreationSaga(_ref2) {\n  var items, itemsByUuids, allUuids, uuidsByItemDecriptors, newItem, descriptor;\n  return _regeneratorRuntime.wrap(function builkItemsCreationSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          items = _ref2.payload;\n          itemsByUuids = {};\n          allUuids = [];\n          uuidsByItemDecriptors = {};\n          items.forEach(function (item) {\n            descriptor = getUnicOrderItemDescriptor(item);\n            newItem = _objectSpread({}, item, {\n              uuid: uuid(),\n              descriptor: descriptor\n            });\n\n            if (item.selectedExtras) {\n              newItem.extras = item.selectedExtras.map(function (extra) {\n                return _objectSpread({}, extra, {\n                  selected: true\n                });\n              });\n            }\n\n            itemsByUuids[newItem.uuid] = newItem;\n            allUuids.push(newItem.uuid);\n            uuidsByItemDecriptors[descriptor] = newItem.uuid;\n          });\n          _context2.next = 7;\n          return put(bulkSaveCheckout({\n            itemsByUuids: itemsByUuids,\n            allUuids: allUuids,\n            uuidsByItemDecriptors: uuidsByItemDecriptors\n          }));\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nfunction savingCheckoutToStorage(_ref3) {\n  var checkout, restaurantId, timestamp, key, value;\n  return _regeneratorRuntime.wrap(function savingCheckoutToStorage$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          checkout = _ref3.payload.checkout;\n          _context3.next = 3;\n          return select(managedRestaurantIdSelector);\n\n        case 3:\n          restaurantId = _context3.sent;\n          timestamp = Date.now();\n          key = generateCkeckoutStorageKeyByRestaurantId(restaurantId);\n          value = JSON.stringify({\n            checkout: checkout,\n            restaurantId: restaurantId,\n            timestamp: timestamp\n          });\n          localStorage.setItem(key, value);\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}\n\nfunction checkoutRestoring(action) {\n  var id, key, checkoutJsonObject, latestCheckout, oldTimestamp, newTimestamp, differenceInDays;\n  return _regeneratorRuntime.wrap(function checkoutRestoring$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          id = action.payload.id;\n          key = generateCkeckoutStorageKeyByRestaurantId(id);\n          checkoutJsonObject = localStorage.getItem(key);\n\n          if (checkoutJsonObject) {\n            _context4.next = 5;\n            break;\n          }\n\n          return _context4.abrupt(\"return\");\n\n        case 5:\n          latestCheckout = JSON.parse(checkoutJsonObject);\n          oldTimestamp = new Date(latestCheckout.timestamp);\n          newTimestamp = new Date();\n          differenceInDays = DateTimeService.daysBetween(oldTimestamp, newTimestamp, {\n            abs: true\n          });\n\n          if (!(differenceInDays > CHECKOUT_MAX_LIVE_DAYS_IN_STORAGE)) {\n            _context4.next = 13;\n            break;\n          }\n\n          localStorage.removeItem(key);\n          _context4.next = 15;\n          break;\n\n        case 13:\n          _context4.next = 15;\n          return put(restoreCheckoutFromStorage(latestCheckout.checkout));\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this);\n}\n\nfunction backToMenuSaga(_ref4) {\n  var payload;\n  return _regeneratorRuntime.wrap(function backToMenuSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context5.next = 3;\n          return all([put(push(payload.restaurantLink)), put(setCheckoutUi({\n            activeStep: 0\n          }))]);\n\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, this);\n}\n\nexport function checkoutSaga() {\n  return _regeneratorRuntime.wrap(function checkoutSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return all([takeLatest(CHECKOUT__PUT_ITEM, checkoutItemCreationSaga), takeLatest(CHECKOUT__SAVE_TO_STORAGE, savingCheckoutToStorage), takeLatest(GET_RESTAURANT_FOR_CLIENT_SUCCESS, checkoutRestoring), takeLatest(CHECKOUT__BACK_TO_RESTAURANT_MENU, backToMenuSaga), takeLatest(CHECKOUT__BULK_CREATE_CHECKOUT_ITEMS, builkItemsCreationSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, this);\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(checkoutItemCreationSaga, \"checkoutItemCreationSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.sagas.js\");\n  reactHotLoader.register(builkItemsCreationSaga, \"builkItemsCreationSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.sagas.js\");\n  reactHotLoader.register(savingCheckoutToStorage, \"savingCheckoutToStorage\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.sagas.js\");\n  reactHotLoader.register(checkoutRestoring, \"checkoutRestoring\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.sagas.js\");\n  reactHotLoader.register(backToMenuSaga, \"backToMenuSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.sagas.js\");\n  reactHotLoader.register(checkoutSaga, \"checkoutSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.sagas.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/checkout/checkout.sagas.js"],"names":["checkoutItemCreationSaga","builkItemsCreationSaga","savingCheckoutToStorage","checkoutRestoring","backToMenuSaga","checkoutSaga","takeLatest","all","put","select","push","uuid","DateTimeService","CHECKOUT_MAX_LIVE_DAYS_IN_STORAGE","generateCkeckoutStorageKeyByRestaurantId","getUnicOrderItemDescriptor","CHECKOUT__PUT_ITEM","CHECKOUT__SAVE_TO_STORAGE","CHECKOUT__BACK_TO_RESTAURANT_MENU","CHECKOUT__BULK_CREATE_CHECKOUT_ITEMS","GET_RESTAURANT_FOR_CLIENT_SUCCESS","managedRestaurantIdSelector","createNewCheckoutItem","increaseCheckoutItemAmountBy","restoreCheckoutFromStorage","setCheckoutUi","bulkSaveCheckout","uuidsByItemDecriptorsSelector","item","payload","uuidsByDescriptors","descriptor","itemUuid","resultItem","dish_id","id","selectedExtras","console","error","items","itemsByUuids","allUuids","uuidsByItemDecriptors","forEach","newItem","extras","map","extra","selected","checkout","restaurantId","timestamp","Date","now","key","value","JSON","stringify","localStorage","setItem","action","checkoutJsonObject","getItem","latestCheckout","parse","oldTimestamp","newTimestamp","differenceInDays","daysBetween","abs","removeItem","restaurantLink","activeStep"],"mappings":"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","sourcesContent":["import { takeLatest, all, put, select } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport uuid from 'uuid/v4';\n\nimport { DateTimeService } from '../../services';\nimport { CHECKOUT_MAX_LIVE_DAYS_IN_STORAGE } from './checkout.constants';\nimport {\n  generateCkeckoutStorageKeyByRestaurantId,\n  getUnicOrderItemDescriptor,\n} from './checkout.helpers';\nimport {\n  CHECKOUT__PUT_ITEM,\n  CHECKOUT__SAVE_TO_STORAGE,\n  CHECKOUT__BACK_TO_RESTAURANT_MENU,\n  CHECKOUT__BULK_CREATE_CHECKOUT_ITEMS,\n} from './checkout.types';\n\nimport {\n  GET_RESTAURANT_FOR_CLIENT_SUCCESS,\n  managedRestaurantIdSelector,\n} from '../restaurants';\n\nimport {\n  createNewCheckoutItem,\n  increaseCheckoutItemAmountBy,\n  restoreCheckoutFromStorage,\n  setCheckoutUi,\n  bulkSaveCheckout,\n} from './checkout.actions';\n\nimport { uuidsByItemDecriptorsSelector } from './checkout.selectors';\n\nfunction* checkoutItemCreationSaga({ payload: item }) {\n  try {\n    const uuidsByDescriptors = yield select(uuidsByItemDecriptorsSelector);\n\n    const descriptor = getUnicOrderItemDescriptor(item);\n    const itemUuid = uuidsByDescriptors[descriptor];\n\n    if (itemUuid) {\n      yield put(increaseCheckoutItemAmountBy(itemUuid, 1));\n      return;\n    }\n\n    const resultItem = {\n      ...item,\n      descriptor,\n      uuid: uuid(),\n    };\n\n    resultItem.dish_id = resultItem.id;\n\n    delete resultItem.id;\n    delete resultItem.selectedExtras;\n\n    yield put(createNewCheckoutItem(resultItem));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction* builkItemsCreationSaga({ payload: items }) {\n  const itemsByUuids = {};\n  const allUuids = [];\n  const uuidsByItemDecriptors = {};\n\n  let newItem;\n  let descriptor;\n\n  items.forEach(item => {\n    descriptor = getUnicOrderItemDescriptor(item);\n\n    newItem = {\n      ...item,\n      uuid: uuid(),\n      descriptor,\n    };\n\n    if (item.selectedExtras) {\n      newItem.extras = item.selectedExtras.map(extra => ({\n        ...extra,\n        selected: true,\n      }));\n    }\n\n    itemsByUuids[newItem.uuid] = newItem;\n    allUuids.push(newItem.uuid);\n    uuidsByItemDecriptors[descriptor] = newItem.uuid;\n  });\n\n  yield put(\n    bulkSaveCheckout({\n      itemsByUuids,\n      allUuids,\n      uuidsByItemDecriptors,\n    }),\n  );\n}\n\nfunction* savingCheckoutToStorage({ payload: { checkout } }) {\n  const restaurantId = yield select(managedRestaurantIdSelector);\n  const timestamp = Date.now();\n\n  const key = generateCkeckoutStorageKeyByRestaurantId(restaurantId);\n  const value = JSON.stringify({\n    checkout,\n    restaurantId,\n    timestamp,\n  });\n\n  localStorage.setItem(key, value);\n}\n\nfunction* checkoutRestoring(action) {\n  const { id } = action.payload;\n  const key = generateCkeckoutStorageKeyByRestaurantId(id);\n  const checkoutJsonObject = localStorage.getItem(key);\n\n  if (!checkoutJsonObject) {\n    return;\n  }\n\n  const latestCheckout = JSON.parse(checkoutJsonObject);\n  const oldTimestamp = new Date(latestCheckout.timestamp);\n  const newTimestamp = new Date();\n  const differenceInDays = DateTimeService.daysBetween(\n    oldTimestamp,\n    newTimestamp,\n    { abs: true },\n  );\n\n  if (differenceInDays > CHECKOUT_MAX_LIVE_DAYS_IN_STORAGE) {\n    localStorage.removeItem(key);\n  } else {\n    yield put(restoreCheckoutFromStorage(latestCheckout.checkout));\n  }\n}\n\nfunction* backToMenuSaga({ payload }) {\n  yield all([\n    put(push(payload.restaurantLink)),\n    put(setCheckoutUi({ activeStep: 0 })),\n  ]);\n}\n\nexport function* checkoutSaga() {\n  yield all([\n    takeLatest(CHECKOUT__PUT_ITEM, checkoutItemCreationSaga),\n    takeLatest(CHECKOUT__SAVE_TO_STORAGE, savingCheckoutToStorage),\n    takeLatest(GET_RESTAURANT_FOR_CLIENT_SUCCESS, checkoutRestoring),\n    takeLatest(CHECKOUT__BACK_TO_RESTAURANT_MENU, backToMenuSaga),\n    takeLatest(CHECKOUT__BULK_CREATE_CHECKOUT_ITEMS, builkItemsCreationSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}