{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _dec2,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/CuisineAutoComplete/CuisineAutoComplete.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { withStyles } from '@material-ui/core';\nimport { AppCleanHOC, AppAutoComplete } from '/components';\nimport { HelperService } from '/services';\nimport styles from './styles';\nimport { cuisinesFiltersSelector, cuisinesListSelector, cuisinesLoadingSelector, updateFilters, abortPageRequests, getCuisinesForAutocomplete, cuisinesCountSelector, setPage, clearAutocomplete } from './modules';\nvar clearOption = {\n  value: '',\n  label: ''\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cuisines: cuisinesListSelector(state),\n    filters: cuisinesFiltersSelector(state),\n    loading: cuisinesLoadingSelector(state),\n    count: cuisinesCountSelector(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  getCuisinesForAutocomplete: getCuisinesForAutocomplete,\n  updateFilters: updateFilters,\n  abortPageRequests: abortPageRequests,\n  setPage: setPage,\n  clearAutocomplete: clearAutocomplete\n};\nvar CuisineAutocomplete = (_dec = withStyles(styles), _dec2 = connect(mapStateToProps, mapDispatchToProps), _dec(_class = _dec2(_class = AppCleanHOC(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CuisineAutocomplete, _PureComponent);\n\n  function CuisineAutocomplete() {\n    _classCallCheck(this, CuisineAutocomplete);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CuisineAutocomplete).apply(this, arguments));\n  }\n\n  _createClass(CuisineAutocomplete, [{\n    key: \"makeRequest\",\n    value: function makeRequest(rest) {\n      var _this$props = this.props,\n          getCuisinesForAutocomplete = _this$props.getCuisinesForAutocomplete,\n          updateFilters = _this$props.updateFilters,\n          filters = _this$props.filters;\n\n      var body = _objectSpread({}, filters, rest);\n\n      updateFilters(body);\n      getCuisinesForAutocomplete({\n        body: body\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var clearAutocomplete = this.props.clearAutocomplete;\n      clearAutocomplete();\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange(name) {\n      this.makeRequest({\n        name: name\n      });\n    }\n  }, {\n    key: \"onMenuScrollToBottom\",\n    value: function onMenuScrollToBottom(event) {\n      if (this.state.page) {\n        this.setState({\n          page: this.state.page + 1\n        });\n      } else {\n        this.setState({\n          page: 1\n        });\n      }\n\n      var _this$props2 = this.props,\n          setPage = _this$props2.setPage,\n          page = _this$props2.filters.page,\n          getCuisinesForAutocomplete = _this$props2.getCuisinesForAutocomplete;\n      var body = {\n        page: this.state.page\n      };\n      setPage(this.state.page);\n      getCuisinesForAutocomplete({\n        body: body\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(option) {\n      var onChange = this.props.onChange;\n      onChange(option || clearOption);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.makeRequest();\n      this.setState({\n        page: 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          cuisines = _this$props3.cuisines,\n          classes = _this$props3.classes,\n          wrapperClassName = _this$props3.wrapperClassName,\n          rest = _objectWithoutProperties(_this$props3, [\"cuisines\", \"classes\", \"wrapperClassName\"]);\n\n      return React.createElement(\"div\", {\n        className: \"\".concat(classes.cuisineAutocompleteWrapper, \"  \").concat(wrapperClassName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(AppAutoComplete, Object.assign({}, HelperService.pick(this.props, ['loading', 'compareKey', 'placeholder', 'isClearable', 'selectedOption', 'value', 'count']), {\n        onMenuScrollToBottom: this.onMenuScrollToBottom,\n        onInputChange: this.onInputChange,\n        options: cuisines,\n        className: 'dish-autocomplete',\n        onChange: this.onChange\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return CuisineAutocomplete;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onInputChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onInputChange\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onMenuScrollToBottom\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onMenuScrollToBottom\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onChange\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"componentDidMount\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"componentDidMount\"), _class2.prototype)), _class2)) || _class) || _class) || _class);\nexport { CuisineAutocomplete as default };\nCuisineAutocomplete.propTypes = {\n  wrapperClassName: PropTypes.string,\n  cuisines: PropTypes.array,\n  loading: PropTypes.bool,\n  compareKey: PropTypes.string,\n  onChange: PropTypes.func,\n  theme: PropTypes.object,\n  placeholder: PropTypes.string\n};\nCuisineAutocomplete.defaultProps = {\n  cuisineAutocompleteWrapper: '',\n  compareKey: 'label',\n  placeholder: 'Select cuisine',\n  isClearable: true\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(clearOption, \"clearOption\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/CuisineAutoComplete/CuisineAutoComplete.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/CuisineAutoComplete/CuisineAutoComplete.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/CuisineAutoComplete/CuisineAutoComplete.js\");\n  reactHotLoader.register(CuisineAutocomplete, \"CuisineAutocomplete\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/CuisineAutoComplete/CuisineAutoComplete.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/CuisineAutoComplete/CuisineAutoComplete.js"],"names":["React","PureComponent","PropTypes","connect","autobind","withStyles","AppCleanHOC","AppAutoComplete","HelperService","styles","cuisinesFiltersSelector","cuisinesListSelector","cuisinesLoadingSelector","updateFilters","abortPageRequests","getCuisinesForAutocomplete","cuisinesCountSelector","setPage","clearAutocomplete","clearOption","value","label","mapStateToProps","state","cuisines","filters","loading","count","mapDispatchToProps","CuisineAutocomplete","rest","props","body","name","makeRequest","event","page","setState","option","onChange","classes","wrapperClassName","cuisineAutocompleteWrapper","pick","onMenuScrollToBottom","onInputChange","propTypes","string","array","bool","compareKey","func","theme","object","placeholder","defaultProps","isClearable"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { withStyles } from '@material-ui/core';\nimport { AppCleanHOC, AppAutoComplete } from '/components';\nimport { HelperService } from '/services';\n\nimport styles from './styles';\n\nimport {\n    cuisinesFiltersSelector,\n    cuisinesListSelector,\n    cuisinesLoadingSelector,\n    updateFilters,\n    abortPageRequests,\n    getCuisinesForAutocomplete,\n    cuisinesCountSelector,\n    setPage,\n    clearAutocomplete\n} from './modules';\n\nconst clearOption = {\n  value: '',\n  label: '',\n}\n\nconst mapStateToProps = state => ({\n    cuisines: cuisinesListSelector(state),\n    filters: cuisinesFiltersSelector(state),\n    loading: cuisinesLoadingSelector(state),\n    count: cuisinesCountSelector(state)\n});\n\nconst mapDispatchToProps = {\n    getCuisinesForAutocomplete,\n    updateFilters,\n    abortPageRequests,\n    setPage,\n    clearAutocomplete\n};\n\nexport default\n@withStyles(styles)\n@connect(\n    mapStateToProps,\n    mapDispatchToProps\n)\n@AppCleanHOC\nclass CuisineAutocomplete extends PureComponent {\n    makeRequest(rest) {\n        const {\n            getCuisinesForAutocomplete,\n            updateFilters,\n            filters\n        } = this.props;\n        const body = { ...filters, ...rest };\n\n        updateFilters(body);\n        getCuisinesForAutocomplete({ body });\n    }\n\n    componentWillUnmount() {\n        const { clearAutocomplete } = this.props;\n        clearAutocomplete();\n    }\n\n    @autobind\n    onInputChange(name) {\n        this.makeRequest({ name });\n    }\n\n    @autobind\n    onMenuScrollToBottom(event) {\n        if(this.state.page){\n            this.setState({page: this.state.page + 1});\n        }else{\n            this.setState({page: 1});\n        }\n\n        const {\n            setPage,\n            filters: { page },\n            getCuisinesForAutocomplete\n        } = this.props;\n        const body = { page: this.state.page };\n\n        setPage(this.state.page);\n        getCuisinesForAutocomplete({ body });\n    }\n\n    @autobind\n    onChange(option) {\n        const { onChange } = this.props;\n        onChange(option || clearOption);\n    }\n\n    @autobind\n    componentDidMount() {\n        this.makeRequest();\n        this.setState({page: 1});\n    }\n\n    render() {\n        const { cuisines, classes, wrapperClassName, ...rest } = this.props;\n        return (\n            <div className={`${ classes.cuisineAutocompleteWrapper }  ${ wrapperClassName }` }>\n                <AppAutoComplete\n                    {...HelperService.pick(this.props, [\n                        'loading',\n                        'compareKey',\n                        'placeholder',\n                        'isClearable',\n                        'selectedOption',\n                        'value',\n                        'count',\n                    ])}\n                    onMenuScrollToBottom={this.onMenuScrollToBottom}\n                    onInputChange={this.onInputChange}\n                    options={cuisines}\n                    className={'dish-autocomplete'}\n                    onChange={this.onChange}\n                    { ...rest }\n                />\n            </div>\n        );\n    }\n}\n\nCuisineAutocomplete.propTypes = {\n    wrapperClassName: PropTypes.string,\n    cuisines: PropTypes.array,\n    loading: PropTypes.bool,\n    compareKey: PropTypes.string,\n    onChange: PropTypes.func,\n    theme: PropTypes.object,\n    placeholder: PropTypes.string,\n\n};\n\nCuisineAutocomplete.defaultProps = {\n    cuisineAutocompleteWrapper: '',\n    compareKey: 'label',\n    placeholder: 'Select cuisine',\n    isClearable: true,\n\n};\n"]},"metadata":{},"sourceType":"module"}