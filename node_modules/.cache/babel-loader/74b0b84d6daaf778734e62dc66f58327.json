{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/OrderStatusColumn/OrderStatusColumn.js\",\n    _dec,\n    _class;\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Typography, Grid, withStyles } from '@material-ui/core';\nimport { DropTarget } from 'react-dnd';\nimport styles from './styles';\nimport { dndItemTypes } from '../../../../constants';\nimport { DraggableOrderCard, OrderCard } from '..';\nimport { orderShape, orderPopupActionsShape } from '../../../../constants/propTypes';\nvar OrderStatusColumn = withStyles(styles)(function (_ref) {\n  var name = _ref.name,\n      orders = _ref.orders,\n      classes = _ref.classes,\n      orderPopupActions = _ref.orderPopupActions,\n      OrderCardComponent = _ref.OrderCardComponent,\n      getRef = _ref.getRef,\n      isOver = _ref.isOver,\n      canDrop = _ref.canDrop;\n  var dropableClassName = '';\n\n  if (canDrop) {\n    dropableClassName = classes.dropTarget;\n  }\n\n  if (isOver && canDrop) {\n    dropableClassName = classes.hoverForDrop;\n  }\n\n  return React.createElement(Grid, {\n    className: classes.columnWrapper,\n    item: true,\n    container: true,\n    direction: \"column\",\n    ref: getRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subheading\",\n    align: \"center\",\n    className: classes.columnHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, name), React.createElement(Grid, {\n    className: \"\".concat(classes.column, \" \").concat(dropableClassName),\n    direction: \"column\",\n    spacing: 16,\n    wrap: \"nowrap\",\n    container: true,\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, orders.map(function (order) {\n    return React.createElement(Grid, {\n      item: true,\n      key: order.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(OrderCardComponent, {\n      popupActions: orderPopupActions,\n      order: order,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  })));\n});\nOrderStatusColumn.propTypes = {\n  classes: PropTypes.object,\n  name: PropTypes.node.isRequired,\n  orders: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n  orderPopupActions: PropTypes.arrayOf(PropTypes.shape(orderPopupActionsShape))\n};\nOrderStatusColumn.defaultProps = {\n  orders: [],\n  OrderCardComponent: OrderCard\n};\nvar DropableOrderStatusColumn = (_dec = DropTarget(dndItemTypes.ORDER, {\n  canDrop: function canDrop(props, monitor) {\n    var order = monitor.getItem();\n    var canDrop = props.canDrop;\n    return canDrop ? canDrop(order, props) : true;\n  },\n  drop: function drop(props, monitor) {\n    var order = monitor.getItem();\n    var handleDropOrder = props.handleDropOrder;\n    return handleDropOrder && handleDropOrder(order, props);\n  }\n}, function (connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    canDrop: monitor.canDrop()\n  };\n}), _dec(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DropableOrderStatusColumn, _Component);\n\n  function DropableOrderStatusColumn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DropableOrderStatusColumn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DropableOrderStatusColumn)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.orderStatusColumnRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(DropableOrderStatusColumn, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var connectDropTarget = this.props.connectDropTarget; // TODO: refactor\n      // eslint-disable-next-line react/no-find-dom-node\n\n      var node = ReactDOM.findDOMNode(this.orderStatusColumnRef.current);\n      connectDropTarget(node);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isOver = _this$props.isOver,\n          canDrop = _this$props.canDrop,\n          connectDropTarget = _this$props.connectDropTarget,\n          orderStatusColumnProps = _objectWithoutProperties(_this$props, [\"isOver\", \"canDrop\", \"connectDropTarget\"]);\n\n      return React.createElement(OrderStatusColumn, Object.assign({}, orderStatusColumnProps, {\n        isDropable: true,\n        isOver: isOver,\n        canDrop: canDrop,\n        getRef: this.orderStatusColumnRef,\n        OrderCardComponent: DraggableOrderCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return DropableOrderStatusColumn;\n}(Component)) || _class);\nexport { OrderStatusColumn, DropableOrderStatusColumn };\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(OrderStatusColumn, \"OrderStatusColumn\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/OrderStatusColumn/OrderStatusColumn.js\");\n  reactHotLoader.register(DropableOrderStatusColumn, \"DropableOrderStatusColumn\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/OrderStatusColumn/OrderStatusColumn.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/OrderStatusColumn/OrderStatusColumn.js"],"names":["React","Component","ReactDOM","PropTypes","Typography","Grid","withStyles","DropTarget","styles","dndItemTypes","DraggableOrderCard","OrderCard","orderShape","orderPopupActionsShape","OrderStatusColumn","name","orders","classes","orderPopupActions","OrderCardComponent","getRef","isOver","canDrop","dropableClassName","dropTarget","hoverForDrop","columnWrapper","columnHeader","column","map","order","id","propTypes","object","node","isRequired","arrayOf","shape","defaultProps","DropableOrderStatusColumn","ORDER","props","monitor","getItem","drop","handleDropOrder","connect","connectDropTarget","orderStatusColumnRef","createRef","findDOMNode","current","orderStatusColumnProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Typography, Grid, withStyles } from '@material-ui/core';\nimport { DropTarget } from 'react-dnd';\n\nimport styles from './styles';\nimport { dndItemTypes } from '../../../../constants';\nimport { DraggableOrderCard, OrderCard } from '..';\nimport {\n  orderShape,\n  orderPopupActionsShape,\n} from '../../../../constants/propTypes';\n\nconst OrderStatusColumn = withStyles(styles)(\n  ({\n    name,\n    orders,\n    classes,\n    orderPopupActions,\n    OrderCardComponent,\n    getRef,\n    isOver,\n    canDrop,\n  }) => {\n    let dropableClassName = '';\n\n    if (canDrop) {\n      dropableClassName = classes.dropTarget;\n    }\n\n    if (isOver && canDrop) {\n      dropableClassName = classes.hoverForDrop;\n    }\n\n    return (\n      <Grid\n        className={classes.columnWrapper}\n        item\n        container\n        direction=\"column\"\n        ref={getRef}>\n        <Typography\n          variant=\"subheading\"\n          align=\"center\"\n          className={classes.columnHeader}>\n          {name}\n        </Typography>\n\n        <Grid\n          className={`${classes.column} ${dropableClassName}`}\n          direction=\"column\"\n          spacing={16}\n          wrap=\"nowrap\"\n          container\n          item>\n          {orders.map(order => (\n            <Grid item key={order.id}>\n              <OrderCardComponent\n                popupActions={orderPopupActions}\n                order={order}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    );\n  },\n);\n\nOrderStatusColumn.propTypes = {\n  classes: PropTypes.object,\n  name: PropTypes.node.isRequired,\n  orders: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n  orderPopupActions: PropTypes.arrayOf(PropTypes.shape(orderPopupActionsShape)),\n};\n\nOrderStatusColumn.defaultProps = {\n  orders: [],\n  OrderCardComponent: OrderCard,\n};\n\n@DropTarget(\n  dndItemTypes.ORDER,\n  {\n    canDrop(props, monitor) {\n      const order = monitor.getItem();\n      const { canDrop } = props;\n\n      return canDrop ? canDrop(order, props) : true;\n    },\n\n    drop(props, monitor) {\n      const order = monitor.getItem();\n      const { handleDropOrder } = props;\n\n      return handleDropOrder && handleDropOrder(order, props);\n    },\n  },\n  (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    canDrop: monitor.canDrop(),\n  }),\n)\nclass DropableOrderStatusColumn extends Component {\n  orderStatusColumnRef = React.createRef();\n\n  componentDidMount() {\n    const { connectDropTarget } = this.props;\n\n    // TODO: refactor\n    // eslint-disable-next-line react/no-find-dom-node\n    const node = ReactDOM.findDOMNode(this.orderStatusColumnRef.current);\n    connectDropTarget(node);\n  }\n\n  render() {\n    const {\n      isOver,\n      canDrop,\n      connectDropTarget,\n      ...orderStatusColumnProps\n    } = this.props;\n\n    return (\n      <OrderStatusColumn\n        {...orderStatusColumnProps}\n        isDropable\n        isOver={isOver}\n        canDrop={canDrop}\n        getRef={this.orderStatusColumnRef}\n        OrderCardComponent={DraggableOrderCard}\n      />\n    );\n  }\n}\n\nexport { OrderStatusColumn, DropableOrderStatusColumn };\n"]},"metadata":{},"sourceType":"module"}