{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/InfoSection/InfoSection.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography, withStyles } from '@material-ui/core';\nimport { FormTextField } from '../FormTextField';\nimport { GridReduxFormField } from '../GridReduxFormField';\nimport styles from './styles';\n\nvar renderInfoBlock = function renderInfoBlock(_ref) {\n  var label = _ref.label,\n      value = _ref.value,\n      name = _ref.name;\n  return React.createElement(Grid, {\n    item: true,\n    key: label + value + name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \" \", label, \" \"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \" \", value, \" \"));\n};\n\nvar renderEditingInfoClock = function renderEditingInfoClock(_ref2, generalItemProps) {\n  var label = _ref2.label,\n      value = _ref2.value,\n      name = _ref2.name,\n      component = _ref2.component,\n      renderEditing = _ref2.renderEditing,\n      itemProps = _objectWithoutProperties(_ref2, [\"label\", \"value\", \"name\", \"component\", \"renderEditing\"]);\n\n  if (typeof renderEditing === 'function') {\n    return renderEditing();\n  }\n\n  return React.createElement(GridReduxFormField, Object.assign({\n    key: label + name,\n    label: label,\n    name: name,\n    value: value,\n    component: component || FormTextField,\n    withoutCaption: true\n  }, generalItemProps, itemProps || {}, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nvar InfoSection = function InfoSection(_ref3) {\n  var header = _ref3.header,\n      items = _ref3.items,\n      classes = _ref3.classes,\n      className = _ref3.className,\n      isEditing = _ref3.isEditing,\n      editingItemsProps = _ref3.editingItemsProps;\n  var renderItem = isEditing ? renderEditingInfoClock : renderInfoBlock;\n  return React.createElement(React.Fragment, null, React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 16,\n    className: \"\".concat(classes.itemsWrapper, \" \").concat(className),\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subheading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, header), items.map(function (item) {\n    return renderItem(item, editingItemsProps);\n  })));\n};\n\nInfoSection.propTypes = {\n  header: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    value: PropTypes.string,\n    // value to display when isEditing === false\n    renderEditing: PropTypes.func // custom item render when isEditing === true\n\n  })).isRequired,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  editingItemsProps: PropTypes.object // props, that applies to each default items when isEditing === true\n\n};\nInfoSection.defaultProps = {\n  className: '',\n  editingItemsProps: {}\n};\n\nvar _default = withStyles(styles)(InfoSection);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(renderInfoBlock, \"renderInfoBlock\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/InfoSection/InfoSection.js\");\n  reactHotLoader.register(renderEditingInfoClock, \"renderEditingInfoClock\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/InfoSection/InfoSection.js\");\n  reactHotLoader.register(InfoSection, \"InfoSection\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/InfoSection/InfoSection.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/InfoSection/InfoSection.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/InfoSection/InfoSection.js"],"names":["React","PropTypes","Grid","Typography","withStyles","FormTextField","GridReduxFormField","styles","renderInfoBlock","label","value","name","renderEditingInfoClock","generalItemProps","component","renderEditing","itemProps","InfoSection","header","items","classes","className","isEditing","editingItemsProps","renderItem","itemsWrapper","map","item","propTypes","string","isRequired","arrayOf","shape","func","object","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography, withStyles } from '@material-ui/core';\n\nimport { FormTextField } from '../FormTextField';\nimport { GridReduxFormField } from '../GridReduxFormField';\n\nimport styles from './styles';\n\nconst renderInfoBlock = ({ label, value, name }) => (\n  <Grid item key={label + value + name}>\n    <Typography variant=\"caption\"> {label} </Typography>\n    <Typography> {value} </Typography>\n  </Grid>\n);\n\nconst renderEditingInfoClock = (\n  { label, value, name, component, renderEditing, ...itemProps },\n  generalItemProps,\n) => {\n  if (typeof renderEditing === 'function') {\n    return renderEditing();\n  }\n\n  return (\n    <GridReduxFormField\n      key={label + name}\n      label={label}\n      name={name}\n      value={value}\n      component={component || FormTextField}\n      withoutCaption\n      {...generalItemProps}\n      {...itemProps || {}}\n    />\n  );\n};\n\nconst InfoSection = ({\n  header,\n  items,\n  classes,\n  className,\n  isEditing,\n  editingItemsProps,\n}) => {\n  const renderItem = isEditing ? renderEditingInfoClock : renderInfoBlock;\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        spacing={16}\n        className={`${classes.itemsWrapper} ${className}`}\n        direction=\"column\">\n        <Typography variant=\"subheading\">{header}</Typography>\n        {items.map(item => renderItem(item, editingItemsProps))}\n      </Grid>\n    </>\n  );\n};\n\nInfoSection.propTypes = {\n  header: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string, // value to display when isEditing === false\n      renderEditing: PropTypes.func, // custom item render when isEditing === true\n    }),\n  ).isRequired,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  editingItemsProps: PropTypes.object, // props, that applies to each default items when isEditing === true\n};\n\nInfoSection.defaultProps = {\n  className: '',\n  editingItemsProps: {},\n};\n\nexport default withStyles(styles)(InfoSection);\n"]},"metadata":{},"sourceType":"module"}