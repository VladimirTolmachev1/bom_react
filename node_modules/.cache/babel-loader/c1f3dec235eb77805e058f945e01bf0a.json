{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/MenuClient.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Hidden from '@material-ui/core/Hidden';\nimport PropTypes from 'prop-types';\nimport { HelperService } from '/services/';\nimport { RestaurantHeader, Preloader } from '/components';\nimport { CategoriesList, DishList, DishOrder, RestaurantInfo } from './components/';\nimport { getRestaurantById } from '/scenes/Restaurants/modules';\nimport { themeColorSelector } from '/modules';\nimport { categoriesListLoading, categoriesListSelector, dishListLoadingSelector, getCategories, getDishes, dishListSelector, updateCategoryFilters, updateDishFilters, categoriesListFiltersSelector, dishListCountSelector, dishListFiltersSelector, setDishPage, cleanupDish, cleanupCategories, addDishInOrder, orderForCheckoutSelector, removeDishFromOrder, restaurantLoadingSelector, restaurantSelector, totalPriceSelector, cleanDishes, setRestaurantLink, onRestaurantLoaded, setDishSize, restaurantErrorSelector } from './modules';\nimport './Menu.scss';\nimport { Errorcomponent } from \"./components/ErrorComponent/ErrorComponent\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    categories: categoriesListSelector(state),\n    dishes: dishListSelector(state),\n    dishesCount: dishListCountSelector(state),\n    dishesLoading: dishListLoadingSelector(state),\n    dishFilters: dishListFiltersSelector(state),\n    categoriesFilters: categoriesListFiltersSelector(state),\n    categoriesLoading: categoriesListLoading(state),\n    restaurantLoading: restaurantLoadingSelector(state),\n    restaurant: restaurantSelector(state),\n    totalPrice: totalPriceSelector(state),\n    order: orderForCheckoutSelector(state),\n    themeColor: themeColorSelector(state),\n    restaurantError: restaurantErrorSelector(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  getCategories: getCategories,\n  getDishes: getDishes,\n  updateCategoryFilters: updateCategoryFilters,\n  updateDishFilters: updateDishFilters,\n  setDishPage: setDishPage,\n  cleanupDish: cleanupDish,\n  cleanupCategories: cleanupCategories,\n  addDishInOrder: addDishInOrder,\n  removeDishFromOrder: removeDishFromOrder,\n  getRestaurantById: getRestaurantById,\n  setRestaurantLink: setRestaurantLink,\n  cleanDishes: cleanDishes,\n  setDishSize: setDishSize,\n  onRestaurantLoaded: onRestaurantLoaded\n};\nvar MenuClient = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(MenuClient, _PureComponent);\n\n  function MenuClient() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MenuClient);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MenuClient)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTab: 0\n    };\n\n    _this.dishesRequest = function (name) {\n      var _this$props = _this.props,\n          dishFilters = _this$props.dishFilters,\n          updateDishFilters = _this$props.updateDishFilters,\n          pathname = _this$props.history.location.pathname,\n          getDishes = _this$props.getDishes;\n      var category_name = name || pathname.split('/')[3];\n      var restaurant_url = pathname.split('/')[2];\n\n      if (!category_name) {\n        return false;\n      }\n\n      var dishBody = {\n        category_name: category_name,\n        restaurant_url: restaurant_url\n      };\n      updateDishFilters(dishBody);\n      getDishes({\n        body: _objectSpread({}, dishFilters, dishBody)\n      });\n    };\n\n    _this.onChangeTab = function (event, activeTab) {\n      _this.setState({\n        activeTab: activeTab\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MenuClient, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props2 = this.props,\n          cleanupCategories = _this$props2.cleanupCategories,\n          cleanDishes = _this$props2.cleanDishes;\n      cleanupCategories();\n      cleanDishes();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3 = this.props,\n          getCategories = _this$props3.getCategories,\n          updateCategoryFilters = _this$props3.updateCategoryFilters,\n          categoriesFilters = _this$props3.categoriesFilters,\n          cleanupDish = _this$props3.cleanupDish,\n          getRestaurantById = _this$props3.getRestaurantById,\n          onRestaurantLoaded = _this$props3.onRestaurantLoaded,\n          pathname = _this$props3.history.location.pathname;\n      var restaurant_url = pathname.split('/')[2];\n      var categoryFiltersPayload = {\n        restaurant_url: restaurant_url\n      };\n      var restaurantPayload = {\n        id: restaurant_url,\n        body: {\n          isClient: true\n        }\n      };\n      var categoriesPayload = {\n        body: _objectSpread({}, categoriesFilters, categoryFiltersPayload)\n      };\n      cleanupDish();\n      getRestaurantById(restaurantPayload).promise.then(onRestaurantLoaded);\n      updateCategoryFilters(categoryFiltersPayload);\n      getCategories(categoriesPayload);\n      this.dishesRequest();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$props4 = this.props,\n          categories = _this$props4.categories,\n          categoriesLoading = _this$props4.categoriesLoading,\n          pathname = _this$props4.history.location.pathname;\n      var restaurant_url = pathname.split('/')[2];\n      var category_name = pathname.split('/')[3];\n\n      if (categoriesLoading || category_name && categories.find(function (category) {\n        return category.name === category_name;\n      }) || !categories.length) {\n        return false;\n      }\n\n      category_name = categories[0].name;\n      this.dishesRequest(category_name);\n      this.props.history.replace(\"/r/\".concat(restaurant_url, \"/\").concat(category_name));\n    }\n  }, {\n    key: \"renderMenu\",\n    value: function renderMenu() {\n      var activeTab = this.state.activeTab;\n      var _this$props5 = this.props,\n          totalPrice = _this$props5.totalPrice,\n          restaurant = _this$props5.restaurant,\n          pathname = _this$props5.history.location.pathname;\n      var category_name = pathname.split('/')[3];\n      var restaurant_name = pathname.split('/')[2];\n      var category = this.props.categories.find(function (category) {\n        return category.name === category_name;\n      });\n      var category_id = category && category.id || '';\n      return React.createElement(\"div\", {\n        className: \"menu__content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, activeTab === 0 && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"menu__content-aside\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"List of categories\"), React.createElement(CategoriesList, Object.assign({}, HelperService.pick(this.props, ['categories', 'themeColor', 'categoriesLoading', 'showConfirm', 'dishFilters', 'updateDishFilters', 'getDishes']), {\n        mode: 'client'\n      }, {\n        category_name: category_name,\n        restaurant_name: restaurant_name,\n        category_id: category_id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(DishList, Object.assign({\n        category_id: category_id\n      }, {\n        mode: 'client'\n      }, HelperService.pick(this.props, ['dishesLoading', 'dishesCount', 'setDishPage', 'dishes', 'showConfirm', 'addDishInOrder', 'dishFilters', 'getDishes', 'setDishSize']), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }))), activeTab === 1 && React.createElement(RestaurantInfo, {\n        restaurant: restaurant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(Hidden, {\n        smDown: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(DishOrder, Object.assign({\n        totalPrice: totalPrice,\n        restaurant_url: restaurant_name\n      }, HelperService.pick(this.props, ['removeDishFromOrder', 'order', 'setRestaurantLink']), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          restaurantLoading = _this$props6.restaurantLoading,\n          restaurant = _this$props6.restaurant,\n          restaurantError = _this$props6.restaurantError;\n      var activeTab = this.state.activeTab;\n\n      if (restaurantLoading) {\n        return React.createElement(Preloader, {\n          className: 'menu-client-loader',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        });\n      }\n\n      var restaurant_name = restaurant.restaurant_name,\n          _restaurant$page_info = restaurant.page_info,\n          background_picture = _restaurant$page_info.background_picture,\n          logo = _restaurant$page_info.logo;\n\n      if (restaurantError && restaurantError === 404) {\n        return React.createElement(Errorcomponent, {\n          message: \"404. Page not found!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        });\n      }\n\n      if (restaurantError && restaurantError === 406) {\n        return React.createElement(Errorcomponent, {\n          message: \"Sorry. This restaurant was blocked!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(RestaurantHeader, Object.assign({\n        background_picture: background_picture,\n        logo: logo\n      }, {\n        name: restaurant_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"app-static-container menu-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        className: 'menu-client__tabs',\n        value: activeTab,\n        indicatorColor: 'primary',\n        onChange: this.onChangeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        label: \"Menu\",\n        className: 'menu-client__tabs-item',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }), React.createElement(Tab, {\n        label: \"Info\",\n        className: 'menu-client__tabs-item',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      })), this.renderMenu()));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return MenuClient;\n}(PureComponent)) || _class);\nexport { MenuClient as default };\nMenuClient.propTypes = {\n  getCategories: PropTypes.func,\n  categories: PropTypes.array,\n  categoriesLoading: PropTypes.bool\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/MenuClient.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/MenuClient.js\");\n  reactHotLoader.register(MenuClient, \"MenuClient\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/MenuClient.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/MenuClient.js"],"names":["React","PureComponent","connect","Tabs","Tab","Hidden","PropTypes","HelperService","RestaurantHeader","Preloader","CategoriesList","DishList","DishOrder","RestaurantInfo","getRestaurantById","themeColorSelector","categoriesListLoading","categoriesListSelector","dishListLoadingSelector","getCategories","getDishes","dishListSelector","updateCategoryFilters","updateDishFilters","categoriesListFiltersSelector","dishListCountSelector","dishListFiltersSelector","setDishPage","cleanupDish","cleanupCategories","addDishInOrder","orderForCheckoutSelector","removeDishFromOrder","restaurantLoadingSelector","restaurantSelector","totalPriceSelector","cleanDishes","setRestaurantLink","onRestaurantLoaded","setDishSize","restaurantErrorSelector","Errorcomponent","mapStateToProps","state","categories","dishes","dishesCount","dishesLoading","dishFilters","categoriesFilters","categoriesLoading","restaurantLoading","restaurant","totalPrice","order","themeColor","restaurantError","mapDispatchToProps","MenuClient","activeTab","dishesRequest","name","props","pathname","history","location","category_name","split","restaurant_url","dishBody","body","onChangeTab","event","setState","categoryFiltersPayload","restaurantPayload","id","isClient","categoriesPayload","promise","then","find","category","length","replace","restaurant_name","category_id","pick","page_info","background_picture","logo","renderMenu","propTypes","func","array","bool"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Hidden from '@material-ui/core/Hidden';\nimport PropTypes from 'prop-types';\n\nimport { HelperService } from '/services/';\nimport { RestaurantHeader, Preloader } from '/components';\nimport {\n    CategoriesList,\n    DishList,\n    DishOrder,\n    RestaurantInfo\n} from './components/';\n\nimport { getRestaurantById } from '/scenes/Restaurants/modules';\n\nimport { themeColorSelector } from '/modules';\n\nimport {\n    categoriesListLoading,\n    categoriesListSelector,\n    dishListLoadingSelector,\n    getCategories,\n    getDishes,\n    dishListSelector,\n    updateCategoryFilters,\n    updateDishFilters,\n    categoriesListFiltersSelector,\n    dishListCountSelector,\n    dishListFiltersSelector,\n    setDishPage,\n    cleanupDish,\n    cleanupCategories,\n    addDishInOrder,\n    orderForCheckoutSelector,\n    removeDishFromOrder,\n    restaurantLoadingSelector,\n    restaurantSelector,\n    totalPriceSelector,\n    cleanDishes,\n    setRestaurantLink,\n    onRestaurantLoaded,\n    setDishSize,\n    restaurantErrorSelector,\n} from './modules';\n\nimport './Menu.scss';\nimport {Errorcomponent} from \"./components/ErrorComponent/ErrorComponent\";\n\nconst mapStateToProps = state => ({\n    categories: categoriesListSelector(state),\n    dishes: dishListSelector(state),\n    dishesCount: dishListCountSelector(state),\n    dishesLoading: dishListLoadingSelector(state),\n    dishFilters: dishListFiltersSelector(state),\n    categoriesFilters: categoriesListFiltersSelector(state),\n    categoriesLoading: categoriesListLoading(state),\n    restaurantLoading: restaurantLoadingSelector(state),\n    restaurant: restaurantSelector(state),\n    totalPrice: totalPriceSelector(state),\n    order: orderForCheckoutSelector(state),\n    themeColor: themeColorSelector(state),\n    restaurantError: restaurantErrorSelector(state)\n});\n\nconst mapDispatchToProps = {\n    getCategories,\n    getDishes,\n    updateCategoryFilters,\n    updateDishFilters,\n    setDishPage,\n    cleanupDish,\n    cleanupCategories,\n    addDishInOrder,\n    removeDishFromOrder,\n    getRestaurantById,\n    setRestaurantLink,\n    cleanDishes,\n    setDishSize,\n    onRestaurantLoaded\n};\n\nexport default\n@connect(\n    mapStateToProps,\n    mapDispatchToProps\n)\nclass MenuClient extends PureComponent {\n    state = {\n        activeTab: 0\n    };\n\n    componentWillUnmount() {\n        const { cleanupCategories, cleanDishes } = this.props;\n\n        cleanupCategories();\n        cleanDishes();\n    }\n\n    componentDidMount() {\n        const {\n            getCategories,\n            updateCategoryFilters,\n            categoriesFilters,\n            cleanupDish,\n            getRestaurantById,\n            onRestaurantLoaded,\n            history: {\n                location: { pathname }\n            }\n        } = this.props;\n\n        const restaurant_url = pathname.split('/')[2];\n        const categoryFiltersPayload = { restaurant_url };\n        const restaurantPayload = {\n            id: restaurant_url,\n            body: { isClient: true }\n        };\n        const categoriesPayload = {\n            body: { ...categoriesFilters, ...categoryFiltersPayload }\n        };\n\n        cleanupDish();\n        getRestaurantById(restaurantPayload).promise.then(onRestaurantLoaded);\n        updateCategoryFilters(categoryFiltersPayload);\n        getCategories(categoriesPayload);\n        this.dishesRequest();\n    }\n\n    componentDidUpdate() {\n        const {\n            categories,\n            categoriesLoading,\n            history: {\n                location: { pathname }\n            }\n        } = this.props;\n\n        const restaurant_url = pathname.split('/')[2];\n        let category_name = pathname.split('/')[3];\n\n        if (\n            categoriesLoading ||\n            (category_name &&\n                categories.find(category => category.name === category_name)) ||\n            !categories.length\n        ) {\n            return false;\n        }\n\n        category_name = categories[0].name;\n\n        this.dishesRequest(category_name);\n        this.props.history.replace(`/r/${restaurant_url}/${category_name}`);\n    }\n\n    dishesRequest = name => {\n        const {\n            dishFilters,\n            updateDishFilters,\n            history: {\n                location: { pathname }\n            },\n            getDishes\n        } = this.props;\n        const category_name = name || pathname.split('/')[3];\n        const restaurant_url = pathname.split('/')[2];\n\n        if (!category_name) {\n            return false;\n        }\n\n        const dishBody = { category_name, restaurant_url };\n        updateDishFilters(dishBody);\n        getDishes({ body: { ...dishFilters, ...dishBody } });\n    };\n\n    renderMenu() {\n        const { activeTab } = this.state;\n        const {\n            totalPrice,\n            restaurant,\n            history: {\n                location: { pathname }\n            }\n        } = this.props;\n        const category_name = pathname.split('/')[3];\n        const restaurant_name = pathname.split('/')[2];\n        const category = this.props.categories.find(\n            category => category.name === category_name\n        );\n        const category_id = (category && category.id) || '';\n\n        return (\n            <div className='menu__content'>\n                {activeTab === 0 && (\n                    <>\n                        <div className='menu__content-aside'>\n                            <h3>List of categories</h3>\n                            <CategoriesList\n                                {...HelperService.pick(this.props, [\n                                    'categories',\n                                    'themeColor',\n                                    'categoriesLoading',\n                                    'showConfirm',\n                                    'dishFilters',\n                                    'updateDishFilters',\n                                    'getDishes'\n                                ])}\n                                mode={'client'}\n                                {...{\n                                    category_name,\n                                    restaurant_name,\n                                    category_id\n                                }}\n                            />\n                        </div>\n                        <DishList\n                            {...{\n                                category_id\n                            }}\n                            mode={'client'}\n                            {...HelperService.pick(this.props, [\n                                'dishesLoading',\n                                'dishesCount',\n                                'setDishPage',\n                                'dishes',\n                                'showConfirm',\n                                'addDishInOrder',\n                                'dishFilters',\n                                'getDishes',\n                                'setDishSize'\n                            ])}\n                        />\n                    </>\n                )}\n\n                {activeTab === 1 && <RestaurantInfo restaurant={restaurant} />}\n\n                <Hidden smDown>\n                    <DishOrder\n                        totalPrice={totalPrice}\n                        restaurant_url={restaurant_name}\n                        {...HelperService.pick(this.props, [\n                            'removeDishFromOrder',\n                            'order',\n                            'setRestaurantLink'\n                        ])}\n                    />\n                </Hidden>\n            </div>\n        );\n    }\n\n    onChangeTab = (event, activeTab) => {\n        this.setState({ activeTab });\n    };\n\n    render() {\n        const { restaurantLoading, restaurant, restaurantError } = this.props;\n        const { activeTab } = this.state;\n\n        if (restaurantLoading) {\n            return <Preloader className={'menu-client-loader'} />;\n        }\n\n        const {\n            restaurant_name,\n            page_info: { background_picture, logo }\n        } = restaurant;\n\n        if(restaurantError && restaurantError === 404){\n            return <Errorcomponent message={\"404. Page not found!\"} />;\n        }\n\n        if(restaurantError && restaurantError === 406){\n            return <Errorcomponent message={\"Sorry. This restaurant was blocked!\"}  />;\n        }\n\n        return (\n            <>\n                <RestaurantHeader\n                    {...{\n                        background_picture,\n                        logo\n                    }}\n                    name={restaurant_name}\n                />\n                <div className='app-static-container menu-container'>\n                    <Tabs\n                        className={'menu-client__tabs'}\n                        value={activeTab}\n                        indicatorColor={'primary'}\n                        onChange={this.onChangeTab}\n                    >\n                        <Tab\n                            label='Menu'\n                            className={'menu-client__tabs-item'}\n                        />\n                        <Tab\n                            label='Info'\n                            className={'menu-client__tabs-item'}\n                        />\n                    </Tabs>\n\n                    {this.renderMenu()}\n                </div>\n            </>\n        );\n    }\n}\n\nMenuClient.propTypes = {\n    getCategories: PropTypes.func,\n    categories: PropTypes.array,\n    categoriesLoading: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}