{"ast":null,"code":"(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { ValidationService } from '/services';\nexport var resetPasswordValidation = function resetPasswordValidation(values) {\n  var errors = {};\n  var requiredFields = ['email', 'password', 'password_confirmation'];\n  requiredFields.forEach(function (field) {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (!ValidationService.email(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (values.password !== values.password_confirmation) {\n    errors.password_confirmation = 'Password does not match with previous';\n  }\n\n  return errors;\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(resetPasswordValidation, \"resetPasswordValidation\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ResetPassword/modules/reset-password.validation.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/ResetPassword/modules/reset-password.validation.js"],"names":["ValidationService","resetPasswordValidation","values","errors","requiredFields","forEach","field","email","password","password_confirmation"],"mappings":";;;;;;AAAA,SAASA,iBAAT,QAAkC,WAAlC;AAEA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,MAAM,EAAI;AAC7C,MAAMC,MAAM,GAAG,EAAf;AAEA,MAAMC,cAAc,GAAG,CACnB,OADmB,EAEnB,UAFmB,EAGnB,uBAHmB,CAAvB;AAMAA,EAAAA,cAAc,CAACC,OAAf,CAAuB,UAAAC,KAAK,EAAI;AAC5B,QAAI,CAACJ,MAAM,CAACI,KAAD,CAAX,EAAoB;AAChBH,MAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,UAAhB;AACH;AACJ,GAJD;;AAMA,MAAI,CAACN,iBAAiB,CAACO,KAAlB,CAAwBL,MAAM,CAACK,KAA/B,CAAL,EAA4C;AACxCJ,IAAAA,MAAM,CAACI,KAAP,GAAe,uBAAf;AACH;;AAED,MAAIL,MAAM,CAACM,QAAP,KAAoBN,MAAM,CAACO,qBAA/B,EAAsD;AAClDN,IAAAA,MAAM,CAACM,qBAAP,GAA+B,uCAA/B;AACH;;AAED,SAAON,MAAP;AACH,CAxBM;;;;;;;;;;;;0BAAMF,uB","sourcesContent":["import { ValidationService } from '/services';\n\nexport const resetPasswordValidation = values => {\n    const errors = {};\n\n    const requiredFields = [\n        'email',\n        'password',\n        'password_confirmation'\n    ];\n\n    requiredFields.forEach(field => {\n        if (!values[field]) {\n            errors[field] = 'Required';\n        }\n    });\n\n    if (!ValidationService.email(values.email)) {\n        errors.email = 'Invalid email address';\n    }\n\n    if (values.password !== values.password_confirmation) {\n        errors.password_confirmation = 'Password does not match with previous'\n    }\n\n    return errors;\n};\n\n\n"]},"metadata":{},"sourceType":"module"}