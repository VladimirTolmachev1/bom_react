{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/SetRestaurantHoursModal/components/TabContent/TabContent.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { autobind } from 'core-decorators';\nimport { AppSelect } from '../../../../components';\nimport { HelperService } from '../../../../services';\nimport { DayScheduleRow } from '../DayScheduleRow';\nimport './TabContent.scss';\nexport var TabContent = (_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TabContent, _Component);\n\n  function TabContent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TabContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabContent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      copiedGroup: ''\n    };\n    return _this;\n  }\n\n  _createClass(TabContent, [{\n    key: \"onChangeCopyFromTab\",\n    value: function onChangeCopyFromTab(_ref) {\n      var copiedGroup = _ref.copiedGroup;\n      var _this$props = this.props,\n          copyHoursFromPreviousTab = _this$props.copyHoursFromPreviousTab,\n          hoursGroup = _this$props.hoursGroup;\n      this.setState({\n        copiedGroup: copiedGroup\n      });\n      copyHoursFromPreviousTab({\n        copiedGroup: copiedGroup,\n        hoursGroup: hoursGroup\n      });\n    }\n  }, {\n    key: \"getTabSelectOptions\",\n    value: function getTabSelectOptions() {\n      var hoursGroup = this.props.hoursGroup;\n      return ['working', 'away', 'delivery', 'pickup'].filter(function (group) {\n        return group !== hoursGroup;\n      }).map(function (group) {\n        return {\n          value: group,\n          name: HelperService.capitalize(group)\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          hours = _this$props2.hours,\n          setSameDay = _this$props2.setSameDay,\n          daysOptions = _this$props2.daysOptions,\n          hoursGroup = _this$props2.hoursGroup;\n      var copiedGroup = this.state.copiedGroup;\n      var rows = daysOptions.map(function (day, index) {\n        var isClosed = Boolean(hours && hours[hoursGroup] && hours[hoursGroup][day.value] && hours[hoursGroup][day.value].isClosed);\n        return React.createElement(DayScheduleRow, {\n          isClosed: isClosed,\n          daysOptions: daysOptions.filter(function (dayOption) {\n            return dayOption.value !== day.value;\n          }),\n          setSameDay: setSameDay,\n          key: index,\n          starName: \"hours.\".concat(hoursGroup, \".\").concat(day.value, \".start\"),\n          endName: \"hours.\".concat(hoursGroup, \".\").concat(day.value, \".end\"),\n          closedName: \"hours.\".concat(hoursGroup, \".\").concat(day.value, \".isClosed\"),\n          label: day.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      });\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(AppSelect, {\n        onChange: this.onChangeCopyFromTab,\n        value: copiedGroup,\n        className: \"set-hours__copy-tab-select\",\n        name: \"copiedGroup\",\n        label: \"Copy from tab\",\n        variant: \"outlined\",\n        options: this.getTabSelectOptions(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), rows);\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return TabContent;\n}(Component), (_applyDecoratedDescriptor(_class.prototype, \"onChangeCopyFromTab\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onChangeCopyFromTab\"), _class.prototype)), _class);\nTabContent.propTypes = {\n  hoursGroup: PropTypes.string,\n  hours: PropTypes.any,\n  setSameDay: PropTypes.func,\n  daysOptions: PropTypes.array,\n  copyHoursFromPreviousTab: PropTypes.func\n};\nTabContent.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TabContent, \"TabContent\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/SetRestaurantHoursModal/components/TabContent/TabContent.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/SetRestaurantHoursModal/components/TabContent/TabContent.js"],"names":["React","Component","Fragment","PropTypes","autobind","AppSelect","HelperService","DayScheduleRow","TabContent","state","copiedGroup","props","copyHoursFromPreviousTab","hoursGroup","setState","filter","group","map","value","name","capitalize","hours","setSameDay","daysOptions","rows","day","index","isClosed","Boolean","dayOption","onChangeCopyFromTab","getTabSelectOptions","propTypes","string","any","func","array","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAO,mBAAP;AAEA,WAAaC,UAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACEC,KADF,GACU;AACNC,MAAAA,WAAW,EAAE;AADP,KADV;AAAA;AAAA;;AAAA;AAAA;AAAA,8CAMuC;AAAA,UAAfA,WAAe,QAAfA,WAAe;AAAA,wBACc,KAAKC,KADnB;AAAA,UAC3BC,wBAD2B,eAC3BA,wBAD2B;AAAA,UACDC,UADC,eACDA,UADC;AAGnC,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAXA;AAAF,OAAd;AACAE,MAAAA,wBAAwB,CAAC;AAAEF,QAAAA,WAAW,EAAXA,WAAF;AAAeG,QAAAA,UAAU,EAAVA;AAAf,OAAD,CAAxB;AACD;AAXH;AAAA;AAAA,0CAawB;AAAA,UACZA,UADY,GACG,KAAKF,KADR,CACZE,UADY;AAGpB,aAAO,CAAC,SAAD,EAAY,MAAZ,EAAoB,UAApB,EAAgC,QAAhC,EACJE,MADI,CACG,UAAAC,KAAK;AAAA,eAAIA,KAAK,KAAKH,UAAd;AAAA,OADR,EAEJI,GAFI,CAEA,UAAAD,KAAK;AAAA,eAAK;AAAEE,UAAAA,KAAK,EAAEF,KAAT;AAAgBG,UAAAA,IAAI,EAAEb,aAAa,CAACc,UAAd,CAAyBJ,KAAzB;AAAtB,SAAL;AAAA,OAFL,CAAP;AAGD;AAnBH;AAAA;AAAA,6BAqBW;AAAA,yBACgD,KAAKL,KADrD;AAAA,UACCU,KADD,gBACCA,KADD;AAAA,UACQC,UADR,gBACQA,UADR;AAAA,UACoBC,WADpB,gBACoBA,WADpB;AAAA,UACiCV,UADjC,gBACiCA,UADjC;AAAA,UAECH,WAFD,GAEiB,KAAKD,KAFtB,CAECC,WAFD;AAIP,UAAMc,IAAI,GAAGD,WAAW,CAACN,GAAZ,CAAgB,UAACQ,GAAD,EAAMC,KAAN,EAAgB;AAC3C,YAAMC,QAAQ,GAAGC,OAAO,CACtBP,KAAK,IACHA,KAAK,CAACR,UAAD,CADP,IAEEQ,KAAK,CAACR,UAAD,CAAL,CAAkBY,GAAG,CAACP,KAAtB,CAFF,IAGEG,KAAK,CAACR,UAAD,CAAL,CAAkBY,GAAG,CAACP,KAAtB,EAA6BS,QAJT,CAAxB;AAOA,eACE,oBAAC,cAAD;AACE,UAAA,QAAQ,EAAEA,QADZ;AAEE,UAAA,WAAW,EAAEJ,WAAW,CAACR,MAAZ,CACX,UAAAc,SAAS;AAAA,mBAAIA,SAAS,CAACX,KAAV,KAAoBO,GAAG,CAACP,KAA5B;AAAA,WADE,CAFf;AAKE,UAAA,UAAU,EAAEI,UALd;AAME,UAAA,GAAG,EAAEI,KANP;AAOE,UAAA,QAAQ,kBAAWb,UAAX,cAAyBY,GAAG,CAACP,KAA7B,WAPV;AAQE,UAAA,OAAO,kBAAWL,UAAX,cAAyBY,GAAG,CAACP,KAA7B,SART;AASE,UAAA,UAAU,kBAAWL,UAAX,cAAyBY,GAAG,CAACP,KAA7B,cATZ;AAUE,UAAA,KAAK,EAAEO,GAAG,CAACP,KAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,OAtBY,CAAb;AAwBA,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAE,KAAKY,mBADjB;AAEE,QAAA,KAAK,EAAEpB,WAFT;AAGE,QAAA,SAAS,EAAC,4BAHZ;AAIE,QAAA,IAAI,EAAC,aAJP;AAKE,QAAA,KAAK,EAAC,eALR;AAME,QAAA,OAAO,EAAC,UANV;AAOE,QAAA,OAAO,EAAE,KAAKqB,mBAAL,EAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUGP,IAVH,CADF;AAcD;AA/DH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAgCvB,SAAhC,wEAKGG,QALH;AAkEAI,UAAU,CAACwB,SAAX,GAAuB;AACrBnB,EAAAA,UAAU,EAAEV,SAAS,CAAC8B,MADD;AAErBZ,EAAAA,KAAK,EAAElB,SAAS,CAAC+B,GAFI;AAGrBZ,EAAAA,UAAU,EAAEnB,SAAS,CAACgC,IAHD;AAIrBZ,EAAAA,WAAW,EAAEpB,SAAS,CAACiC,KAJF;AAKrBxB,EAAAA,wBAAwB,EAAET,SAAS,CAACgC;AALf,CAAvB;AAQA3B,UAAU,CAAC6B,YAAX,GAA0B,EAA1B;;;;;;;;;;0BA1Ea7B,U","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { autobind } from 'core-decorators';\n\nimport { AppSelect } from '../../../../components';\nimport { HelperService } from '../../../../services';\nimport { DayScheduleRow } from '../DayScheduleRow';\n\nimport './TabContent.scss';\n\nexport class TabContent extends Component {\n  state = {\n    copiedGroup: '',\n  };\n\n  @autobind\n  onChangeCopyFromTab({ copiedGroup }) {\n    const { copyHoursFromPreviousTab, hoursGroup } = this.props;\n\n    this.setState({ copiedGroup });\n    copyHoursFromPreviousTab({ copiedGroup, hoursGroup });\n  }\n\n  getTabSelectOptions() {\n    const { hoursGroup } = this.props;\n\n    return ['working', 'away', 'delivery', 'pickup']\n      .filter(group => group !== hoursGroup)\n      .map(group => ({ value: group, name: HelperService.capitalize(group) }));\n  }\n\n  render() {\n    const { hours, setSameDay, daysOptions, hoursGroup } = this.props;\n    const { copiedGroup } = this.state;\n\n    const rows = daysOptions.map((day, index) => {\n      const isClosed = Boolean(\n        hours &&\n          hours[hoursGroup] &&\n          hours[hoursGroup][day.value] &&\n          hours[hoursGroup][day.value].isClosed,\n      );\n\n      return (\n        <DayScheduleRow\n          isClosed={isClosed}\n          daysOptions={daysOptions.filter(\n            dayOption => dayOption.value !== day.value,\n          )}\n          setSameDay={setSameDay}\n          key={index}\n          starName={`hours.${hoursGroup}.${day.value}.start`}\n          endName={`hours.${hoursGroup}.${day.value}.end`}\n          closedName={`hours.${hoursGroup}.${day.value}.isClosed`}\n          label={day.value}\n        />\n      );\n    });\n\n    return (\n      <Fragment>\n        <AppSelect\n          onChange={this.onChangeCopyFromTab}\n          value={copiedGroup}\n          className=\"set-hours__copy-tab-select\"\n          name=\"copiedGroup\"\n          label=\"Copy from tab\"\n          variant=\"outlined\"\n          options={this.getTabSelectOptions()}\n        />\n        {rows}\n      </Fragment>\n    );\n  }\n}\n\nTabContent.propTypes = {\n  hoursGroup: PropTypes.string,\n  hours: PropTypes.any,\n  setSameDay: PropTypes.func,\n  daysOptions: PropTypes.array,\n  copyHoursFromPreviousTab: PropTypes.func,\n};\n\nTabContent.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}