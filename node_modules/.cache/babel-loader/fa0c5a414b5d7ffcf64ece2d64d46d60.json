{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _dec2,\n    _dec3,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/DishInfoForm/DishInfoForm.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field, defaultShouldError } from 'redux-form';\nimport { Grid, withStyles, FormHelperText } from '@material-ui/core';\nimport { autobind } from 'core-decorators';\nimport { GridReduxFormField } from '../../GridReduxFormField';\nimport { AppDropzone } from '../../AppDropzone';\nimport { FormTextField } from '../../FormTextField';\nimport styles from './styles';\nimport validate from './dish-info.validations';\nimport { DISH_INFO_FORM } from '../constants/form.names';\nimport { dishInfoFormFieldSelector, sizesFormFieldSelector } from '../selectors';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    picture: dishInfoFormFieldSelector(state, 'picture'),\n    sizesFormValues: sizesFormFieldSelector(state, 'sizes') || [] // required for validation\n\n  };\n};\n\nvar DishInfoForm = (_dec = withStyles(styles), _dec2 = connect(mapStateToProps), _dec3 = reduxForm({\n  form: DISH_INFO_FORM,\n  enableReinitialize: true,\n  validate: validate,\n  destroyOnUnmount: false,\n  keepDirtyOnReinitialize: true,\n  shouldError: function shouldError(params) {\n    var props = params.props,\n        nextProps = params.nextProps;\n\n    if (nextProps && props.sizes !== nextProps.sizes) {\n      return true;\n    }\n\n    return defaultShouldError(params);\n  }\n}), _dec(_class = _dec2(_class = _dec3(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(DishInfoForm, _PureComponent);\n\n  function DishInfoForm() {\n    _classCallCheck(this, DishInfoForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DishInfoForm).apply(this, arguments));\n  }\n\n  _createClass(DishInfoForm, [{\n    key: \"onDrop\",\n    value: function onDrop(accepted) {\n      var change = this.props.change;\n      change('picture', accepted);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          picture = _this$props.picture,\n          sizesFormValues = _this$props.sizesFormValues,\n          classes = _this$props.classes,\n          initialSizes = _this$props.initialSizes;\n      var isPriceDisabled = !!initialSizes.length || !!sizesFormValues.length;\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        justify: \"space-between\",\n        alignItems: \"stretch\",\n        alignContent: \"stretch\",\n        className: classes.formWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        item: true,\n        direction: \"column\",\n        className: classes.infoSecrion,\n        spacing: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(GridReduxFormField, {\n        name: \"name\",\n        label: \"Dish name\",\n        component: FormTextField,\n        withoutCaption: true,\n        fullWidth: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"price\",\n        type: \"number\",\n        rows: 3,\n        label: \"Dish price\",\n        component: FormTextField,\n        disabled: isPriceDisabled,\n        withoutCaption: true,\n        forceTouched: true,\n        fullWidth: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), isPriceDisabled && React.createElement(FormHelperText, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Dish price is automatically disabled when sizes are added.\")), React.createElement(GridReduxFormField, {\n        name: \"description\",\n        rows: 3,\n        multiline: true,\n        label: \"Dish description\",\n        component: FormTextField,\n        withoutCaption: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        item: true,\n        className: classes.imageSection,\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(AppDropzone, {\n        wrapperClassName: classes.dropZoneWrapper,\n        className: classes.dropZone,\n        file: picture,\n        label: \"Dish image\",\n        id: \"dish-modal-dropzone\",\n        onDrop: this.onDrop,\n        accept: ['image/*'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return DishInfoForm;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onDrop\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onDrop\"), _class2.prototype)), _class2)) || _class) || _class) || _class);\nexport { DishInfoForm as default };\nDishInfoForm.propTypes = {\n  change: PropTypes.func,\n  picture: PropTypes.any\n};\nDishInfoForm.defaultProps = {\n  initialSizes: []\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/DishInfoForm/DishInfoForm.js\");\n  reactHotLoader.register(DishInfoForm, \"DishInfoForm\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/DishInfoForm/DishInfoForm.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/forms/DishInfoForm/DishInfoForm.js"],"names":["React","PureComponent","PropTypes","connect","reduxForm","Field","defaultShouldError","Grid","withStyles","FormHelperText","autobind","GridReduxFormField","AppDropzone","FormTextField","styles","validate","DISH_INFO_FORM","dishInfoFormFieldSelector","sizesFormFieldSelector","mapStateToProps","state","picture","sizesFormValues","DishInfoForm","form","enableReinitialize","destroyOnUnmount","keepDirtyOnReinitialize","shouldError","params","props","nextProps","sizes","accepted","change","classes","initialSizes","isPriceDisabled","length","formWrapper","infoSecrion","imageSection","dropZoneWrapper","dropZone","onDrop","propTypes","func","any","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field, defaultShouldError } from 'redux-form';\nimport { Grid, withStyles, FormHelperText } from '@material-ui/core';\n\nimport { autobind } from 'core-decorators';\nimport { GridReduxFormField } from '../../GridReduxFormField';\nimport { AppDropzone } from '../../AppDropzone';\nimport { FormTextField } from '../../FormTextField';\n\nimport styles from './styles';\nimport validate from './dish-info.validations';\nimport { DISH_INFO_FORM } from '../constants/form.names';\nimport {\n  dishInfoFormFieldSelector,\n  sizesFormFieldSelector,\n} from '../selectors';\n\nconst mapStateToProps = state => ({\n  picture: dishInfoFormFieldSelector(state, 'picture'),\n  sizesFormValues: sizesFormFieldSelector(state, 'sizes') || [], // required for validation\n});\n\nexport default\n@withStyles(styles)\n@connect(mapStateToProps)\n@reduxForm({\n  form: DISH_INFO_FORM,\n  enableReinitialize: true,\n  validate,\n  destroyOnUnmount: false,\n  keepDirtyOnReinitialize: true,\n\n  shouldError: params => {\n    const { props, nextProps } = params;\n\n    if (nextProps && props.sizes !== nextProps.sizes) {\n      return true;\n    }\n\n    return defaultShouldError(params);\n  },\n})\nclass DishInfoForm extends PureComponent {\n  @autobind\n  onDrop(accepted) {\n    const { change } = this.props;\n    change('picture', accepted);\n  }\n\n  render() {\n    const { picture, sizesFormValues, classes, initialSizes } = this.props;\n\n    const isPriceDisabled = !!initialSizes.length || !!sizesFormValues.length;\n\n    return (\n      <Grid\n        container\n        spacing={16}\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        alignContent=\"stretch\"\n        className={classes.formWrapper}>\n        <Grid\n          container\n          item\n          direction=\"column\"\n          className={classes.infoSecrion}\n          spacing={16}>\n          <GridReduxFormField\n            name=\"name\"\n            label=\"Dish name\"\n            component={FormTextField}\n            withoutCaption\n            fullWidth\n            required\n          />\n\n          <Grid item>\n            <Field\n              name=\"price\"\n              type=\"number\"\n              rows={3}\n              label=\"Dish price\"\n              component={FormTextField}\n              disabled={isPriceDisabled}\n              withoutCaption\n              forceTouched\n              fullWidth\n              required\n            />\n\n            {isPriceDisabled && (\n              <FormHelperText color=\"secondary\">\n                Dish price is automatically disabled when sizes are added.\n              </FormHelperText>\n            )}\n          </Grid>\n\n          <GridReduxFormField\n            name=\"description\"\n            rows={3}\n            multiline\n            label=\"Dish description\"\n            component={FormTextField}\n            withoutCaption\n            fullWidth\n          />\n        </Grid>\n\n        <Grid\n          container\n          item\n          className={classes.imageSection}\n          justify=\"center\"\n          alignItems=\"center\">\n          <AppDropzone\n            wrapperClassName={classes.dropZoneWrapper}\n            className={classes.dropZone}\n            file={picture}\n            label=\"Dish image\"\n            id=\"dish-modal-dropzone\"\n            onDrop={this.onDrop}\n            accept={['image/*']}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nDishInfoForm.propTypes = {\n  change: PropTypes.func,\n  picture: PropTypes.any,\n};\nDishInfoForm.defaultProps = {\n  initialSizes: [],\n};\n"]},"metadata":{},"sourceType":"module"}