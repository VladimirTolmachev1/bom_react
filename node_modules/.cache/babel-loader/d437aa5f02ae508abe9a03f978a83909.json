{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/StripeConnectionButton/index.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\nimport { StripeService } from '/services';\n\nvar StripeConnectionButton = function StripeConnectionButton(_ref) {\n  var isConnectedToStripe = _ref.isConnectedToStripe,\n      handleDissconnectStripe = _ref.handleDissconnectStripe;\n  return isConnectedToStripe ? React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleDissconnectStripe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Dissconnect stripe\") : React.createElement(Button, {\n    href: StripeService.generateStripeOAuthLink(),\n    disabled: isConnectedToStripe,\n    variant: \"outlined\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Connect stripe\");\n};\n\nStripeConnectionButton.propTypes = {\n  isConnectedToStripe: PropTypes.bool,\n  handleDissconnectStripe: PropTypes.func\n};\nStripeConnectionButton.defaultProps = {\n  isConnectedToStripe: false,\n  handleDissconnectStripe: function handleDissconnectStripe() {\n    return null;\n  }\n};\nvar _default = StripeConnectionButton;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(StripeConnectionButton, \"StripeConnectionButton\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/StripeConnectionButton/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/StripeConnectionButton/index.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/components/StripeConnectionButton/index.js"],"names":["React","PropTypes","Button","StripeService","StripeConnectionButton","isConnectedToStripe","handleDissconnectStripe","generateStripeOAuthLink","propTypes","bool","func","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAASC,aAAT,QAA8B,WAA9B;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,MAAGC,mBAAH,QAAGA,mBAAH;AAAA,MAAwBC,uBAAxB,QAAwBA,uBAAxB;AAAA,SAC3BD,mBAAmB,GAEX,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAC,WAFV;AAGI,IAAA,OAAO,EAAGC,uBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFW,GAWX,oBAAC,MAAD;AACI,IAAA,IAAI,EAAGH,aAAa,CAACI,uBAAd,EADX;AAEI,IAAA,QAAQ,EAAGF,mBAFf;AAGI,IAAA,OAAO,EAAC,UAHZ;AAII,IAAA,KAAK,EAAC,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZmB;AAAA,CAA/B;;AAuBAD,sBAAsB,CAACI,SAAvB,GAAmC;AAC/BH,EAAAA,mBAAmB,EAAEJ,SAAS,CAACQ,IADA;AAE/BH,EAAAA,uBAAuB,EAAEL,SAAS,CAACS;AAFJ,CAAnC;AAKAN,sBAAsB,CAACO,YAAvB,GAAsC;AAClCN,EAAAA,mBAAmB,EAAE,KADa;AAElCC,EAAAA,uBAAuB,EAAE;AAAA,WAAM,IAAN;AAAA;AAFS,CAAtC;eAKeF,sB;AAAf;;;;;;;;;;;;0BAjCMA,sB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\n\nimport { StripeService } from '/services';\n\nconst StripeConnectionButton = ({ isConnectedToStripe, handleDissconnectStripe }) => (\n    isConnectedToStripe\n        ? (\n            <Button \n                variant='outlined'\n                color='secondary'\n                onClick={ handleDissconnectStripe }\n            >\n                Dissconnect stripe\n            </Button>\n        )\n        : (\n            <Button \n                href={ StripeService.generateStripeOAuthLink() }\n                disabled={ isConnectedToStripe }\n                variant='outlined'\n                color='primary'\n            >\n                Connect stripe\n            </Button>\n        )\n)\n\nStripeConnectionButton.propTypes = {\n    isConnectedToStripe: PropTypes.bool,\n    handleDissconnectStripe: PropTypes.func\n}\n\nStripeConnectionButton.defaultProps = {\n    isConnectedToStripe: false,\n    handleDissconnectStripe: () => null\n}\n\nexport default StripeConnectionButton"]},"metadata":{},"sourceType":"module"}