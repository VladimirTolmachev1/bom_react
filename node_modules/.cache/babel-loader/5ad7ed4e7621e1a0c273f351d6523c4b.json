{"ast":null,"code":"import _regeneratorRuntime from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(patchCategoryExtrasSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(updateCategorySaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(createCategorySaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(categoriesSaga);\n\nimport { takeLatest, all, call, put } from 'redux-saga/effects';\nimport CategoriesApiService from './categories.api.service';\nimport { PATCH_CATEGORY_EXTRAS_REQUEST } from './categories.types';\nimport * as actions from './categories.actions';\nexport function patchCategoryExtrasSaga(_ref) {\n  var payload, _ref2, data;\n\n  return _regeneratorRuntime.wrap(function patchCategoryExtrasSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(CategoriesApiService.patchExtras, payload.categoryId, payload.extrasPayload);\n\n        case 4:\n          _ref2 = _context.sent;\n          data = _ref2.data;\n          _context.next = 8;\n          return put(actions.patchCategoryExtrasSuccess(data));\n\n        case 8:\n          return _context.abrupt(\"return\", data);\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](1);\n          console.error(_context.t0);\n          _context.next = 16;\n          return put(actions.patchCategoryExtrasError(_context.t0));\n\n        case 16:\n          return _context.abrupt(\"return\", Promise.reject(_context.t0));\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[1, 11]]);\n}\nexport function updateCategorySaga(_ref3) {\n  var payload, _ref4, data;\n\n  return _regeneratorRuntime.wrap(function updateCategorySaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(CategoriesApiService.patch, payload);\n\n        case 4:\n          _ref4 = _context2.sent;\n          data = _ref4.data;\n          _context2.next = 8;\n          return put(actions.updateCategorySuccess(data));\n\n        case 8:\n          return _context2.abrupt(\"return\", data);\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.error(_context2.t0);\n          _context2.next = 16;\n          return put(actions.updateCategoryError(_context2.t0));\n\n        case 16:\n          return _context2.abrupt(\"return\", Promise.reject(_context2.t0));\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[1, 11]]);\n}\nexport function createCategorySaga(_ref5) {\n  var payload, _ref6, data;\n\n  return _regeneratorRuntime.wrap(function createCategorySaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref5.payload;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(CategoriesApiService.create, payload);\n\n        case 4:\n          _ref6 = _context3.sent;\n          data = _ref6.data;\n          _context3.next = 8;\n          return put(actions.createCategorySuccess(data));\n\n        case 8:\n          return _context3.abrupt(\"return\", data);\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 15;\n          return put(actions.createCategoryError(_context3.t0));\n\n        case 15:\n          return _context3.abrupt(\"return\", Promise.reject(_context3.t0));\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this, [[1, 11]]);\n}\nexport function categoriesSaga() {\n  return _regeneratorRuntime.wrap(function categoriesSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([takeLatest(PATCH_CATEGORY_EXTRAS_REQUEST, patchCategoryExtrasSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this);\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(patchCategoryExtrasSaga, \"patchCategoryExtrasSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.sagas.js\");\n  reactHotLoader.register(updateCategorySaga, \"updateCategorySaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.sagas.js\");\n  reactHotLoader.register(createCategorySaga, \"createCategorySaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.sagas.js\");\n  reactHotLoader.register(categoriesSaga, \"categoriesSaga\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.sagas.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.sagas.js"],"names":["patchCategoryExtrasSaga","updateCategorySaga","createCategorySaga","categoriesSaga","takeLatest","all","call","put","CategoriesApiService","PATCH_CATEGORY_EXTRAS_REQUEST","actions","payload","patchExtras","categoryId","extrasPayload","data","patchCategoryExtrasSuccess","console","error","patchCategoryExtrasError","Promise","reject","patch","updateCategorySuccess","updateCategoryError","create","createCategorySuccess","createCategoryError"],"mappings":";;;;;;;;;yBAOiBA,uB;;;yBAkBAC,kB;;;yBAcAC,kB;;;yBAYAC,c;;AAnDjB,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,oBAAP,MAAiC,0BAAjC;AAEA,SAASC,6BAAT,QAA8C,oBAA9C;AAEA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;AAEA,OAAO,SAAUV,uBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAoCW,UAAAA,OAApC,QAAoCA,OAApC;AAAA;AAAA;AAEc,iBAAML,IAAI,CACzBE,oBAAoB,CAACI,WADI,EAEzBD,OAAO,CAACE,UAFiB,EAGzBF,OAAO,CAACG,aAHiB,CAAV;;AAFd;AAAA;AAEKC,UAAAA,IAFL,SAEKA,IAFL;AAAA;AAQH,iBAAMR,GAAG,CAACG,OAAO,CAACM,0BAAR,CAAmCD,IAAnC,CAAD,CAAT;;AARG;AAAA,2CAUIA,IAVJ;;AAAA;AAAA;AAAA;AAYHE,UAAAA,OAAO,CAACC,KAAR;AAZG;AAaH,iBAAMX,GAAG,CAACG,OAAO,CAACS,wBAAR,aAAD,CAAT;;AAbG;AAAA,2CAcIC,OAAO,CAACC,MAAR,aAdJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBP,OAAO,SAAUpB,kBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA+BU,UAAAA,OAA/B,SAA+BA,OAA/B;AAAA;AAAA;AAEc,iBAAML,IAAI,CAACE,oBAAoB,CAACc,KAAtB,EAA6BX,OAA7B,CAAV;;AAFd;AAAA;AAEKI,UAAAA,IAFL,SAEKA,IAFL;AAAA;AAIH,iBAAMR,GAAG,CAACG,OAAO,CAACa,qBAAR,CAA8BR,IAA9B,CAAD,CAAT;;AAJG;AAAA,4CAMIA,IANJ;;AAAA;AAAA;AAAA;AAQHE,UAAAA,OAAO,CAACC,KAAR;AARG;AASH,iBAAMX,GAAG,CAACG,OAAO,CAACc,mBAAR,cAAD,CAAT;;AATG;AAAA,4CAUIJ,OAAO,CAACC,MAAR,cAVJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcP,OAAO,SAAUnB,kBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA+BS,UAAAA,OAA/B,SAA+BA,OAA/B;AAAA;AAAA;AAEc,iBAAML,IAAI,CAACE,oBAAoB,CAACiB,MAAtB,EAA8Bd,OAA9B,CAAV;;AAFd;AAAA;AAEKI,UAAAA,IAFL,SAEKA,IAFL;AAAA;AAGH,iBAAMR,GAAG,CAACG,OAAO,CAACgB,qBAAR,CAA8BX,IAA9B,CAAD,CAAT;;AAHG;AAAA,4CAKIA,IALJ;;AAAA;AAAA;AAAA;AAAA;AAOH,iBAAMR,GAAG,CAACG,OAAO,CAACiB,mBAAR,cAAD,CAAT;;AAPG;AAAA,4CAQIP,OAAO,CAACC,MAAR,cARJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYP,OAAO,SAAUlB,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,GAAG,CAAC,CACRD,UAAU,CAACK,6BAAD,EAAgCT,uBAAhC,CADF,CAAD,CAAT;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;0BA5CUA,uB;0BAkBAC,kB;0BAcAC,kB;0BAYAC,c","sourcesContent":["import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport CategoriesApiService from './categories.api.service';\n\nimport { PATCH_CATEGORY_EXTRAS_REQUEST } from './categories.types';\n\nimport * as actions from './categories.actions';\n\nexport function* patchCategoryExtrasSaga({ payload }) {\n  try {\n    const { data } = yield call(\n      CategoriesApiService.patchExtras,\n      payload.categoryId,\n      payload.extrasPayload,\n    );\n\n    yield put(actions.patchCategoryExtrasSuccess(data));\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    yield put(actions.patchCategoryExtrasError(e));\n    return Promise.reject(e);\n  }\n}\n\nexport function* updateCategorySaga({ payload }) {\n  try {\n    const { data } = yield call(CategoriesApiService.patch, payload);\n\n    yield put(actions.updateCategorySuccess(data));\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    yield put(actions.updateCategoryError(e));\n    return Promise.reject(e);\n  }\n}\n\nexport function* createCategorySaga({ payload }) {\n  try {\n    const { data } = yield call(CategoriesApiService.create, payload);\n    yield put(actions.createCategorySuccess(data));\n\n    return data;\n  } catch (e) {\n    yield put(actions.createCategoryError(e));\n    return Promise.reject(e);\n  }\n}\n\nexport function* categoriesSaga() {\n  yield all([\n    takeLatest(PATCH_CATEGORY_EXTRAS_REQUEST, patchCategoryExtrasSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}