{"ast":null,"code":"(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { api, requestsMiddleware, sessionMiddleware, crudMiddleware, requestPrepareMiddleware } from './middleware';\nimport makeRootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nfunction configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = [thunk, requestsMiddleware, requestPrepareMiddleware, api, sessionMiddleware, crudMiddleware];\n  var enhancers = [];\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (process.NODE_ENV === 'development') {\n    enhancers.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (module.hot) {\n      module.hot.accept('./reducers', function () {\n        store.replaceReducer(makeRootReducer());\n      });\n    }\n  }\n\n  var store = createStore(makeRootReducer(), initialState, composeEnhancers.apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers)));\n  store.asyncReducers = {};\n  return store;\n}\n\nvar _default = configureStore;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(configureStore, \"configureStore\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/store/configureStore.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/store/configureStore.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/store/configureStore.js"],"names":["createStore","applyMiddleware","compose","api","requestsMiddleware","sessionMiddleware","crudMiddleware","requestPrepareMiddleware","makeRootReducer","thunk","configureStore","initialState","middleware","enhancers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","process","NODE_ENV","push","__REDUX_DEVTOOLS_EXTENSION__","env","module","hot","accept","store","replaceReducer","asyncReducers"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SACIC,GADJ,EAEIC,kBAFJ,EAGIC,iBAHJ,EAIIC,cAJJ,EAKIC,wBALJ,QAMO,cANP;AAQA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,SAASC,cAAT,GAA2C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AACvC,MAAMC,UAAU,GAAG,CACfH,KADe,EAEfL,kBAFe,EAGfG,wBAHe,EAIfJ,GAJe,EAKfE,iBALe,EAMfC,cANe,CAAnB;AAQA,MAAMO,SAAS,GAAG,EAAlB;AACA,MAAMC,gBAAgB,GAClBC,MAAM,CAACC,oCAAP,IAA+Cd,OADnD;;AAGA,MAAIe,OAAO,CAACC,QAAR,KAAqB,aAAzB,EAAwC;AACpCL,IAAAA,SAAS,CAACM,IAAV,CACIJ,MAAM,CAACK,4BAAP,IACIL,MAAM,CAACK,4BAAP,EAFR;AAIH;;AAED,MAAIH,OAAO,CAACI,GAAR,CAAYH,QAAZ,KAAyB,YAA7B,EAA2C;AACvC,QAAII,MAAM,CAACC,GAAX,EAAgB;AACZD,MAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,YAAM;AAClCC,QAAAA,KAAK,CAACC,cAAN,CAAqBlB,eAAe,EAApC;AACH,OAFD;AAGH;AACJ;;AAED,MAAMiB,KAAK,GAAGzB,WAAW,CACrBQ,eAAe,EADM,EAErBG,YAFqB,EAGrBG,gBAAgB,MAAhB,UAAiBb,eAAe,MAAf,SAAmBW,UAAnB,CAAjB,SAAoDC,SAApD,EAHqB,CAAzB;AAMAY,EAAAA,KAAK,CAACE,aAAN,GAAsB,EAAtB;AAEA,SAAOF,KAAP;AACH;;eAEcf,c;AAAf;;;;;;;;;;;;0BAvCSA,c","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport {\n    api,\n    requestsMiddleware,\n    sessionMiddleware,\n    crudMiddleware,\n    requestPrepareMiddleware\n} from './middleware';\n\nimport makeRootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nfunction configureStore(initialState = {}) {\n    const middleware = [\n        thunk,\n        requestsMiddleware,\n        requestPrepareMiddleware,\n        api,\n        sessionMiddleware,\n        crudMiddleware\n    ];\n    const enhancers = [];\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    if (process.NODE_ENV === 'development') {\n        enhancers.push(\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n                window.__REDUX_DEVTOOLS_EXTENSION__()\n        );\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n        if (module.hot) {\n            module.hot.accept('./reducers', () => {\n                store.replaceReducer(makeRootReducer());\n            });\n        }\n    }\n\n    const store = createStore(\n        makeRootReducer(),\n        initialState,\n        composeEnhancers(applyMiddleware(...middleware), ...enhancers)\n    );\n\n    store.asyncReducers = {};\n\n    return store;\n}\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}