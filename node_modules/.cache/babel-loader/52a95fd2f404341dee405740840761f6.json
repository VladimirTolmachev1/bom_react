{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/InboxOrdersTab/InboxOrdersTab.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport { DropableOrderStatusColumn } from '../OrderStatusColumn';\nimport { orderStatuses, orderDeliveryMethods } from '../../../../constants';\nimport { orderShape } from '../../../../constants/propTypes';\n\nvar canDropToPickup = function canDropToPickup(_ref) {\n  var delivery_method = _ref.delivery_method;\n  return delivery_method !== orderDeliveryMethods.PICKUP;\n};\n\nvar canDropToDelivery = function canDropToDelivery(_ref2) {\n  var delivery_method = _ref2.delivery_method;\n  return delivery_method !== orderDeliveryMethods.DELIVERY;\n};\n\nexport var InboxOrdersTab = function InboxOrdersTab(_ref3) {\n  var pickupOrders = _ref3.pickupOrders,\n      deliveryOrders = _ref3.deliveryOrders,\n      openClientModal = _ref3.openClientModal,\n      createOrderStatusSetter = _ref3.createOrderStatusSetter,\n      handleDropToPickupNew = _ref3.handleDropToPickupNew,\n      handleDropToDeliveryNew = _ref3.handleDropToDeliveryNew,\n      handleEditOrderClick = _ref3.handleEditOrderClick;\n  var ordersPopupActions = [{\n    name: 'Confirm',\n    onClick: createOrderStatusSetter(orderStatuses.IN_PROCESS)\n  }, {\n    name: 'Edit',\n    onClick: handleEditOrderClick\n  }, {\n    name: 'Cancel',\n    onClick: createOrderStatusSetter(orderStatuses.REFUND)\n  }, {\n    name: 'Client info',\n    onClick: openClientModal\n  }];\n  return React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    spacing: 32,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(DropableOrderStatusColumn, {\n    name: \"Pickup\",\n    orders: pickupOrders,\n    canDrop: canDropToPickup,\n    handleDropOrder: handleDropToPickupNew,\n    orderPopupActions: ordersPopupActions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(DropableOrderStatusColumn, {\n    name: \"Delivery\",\n    orders: deliveryOrders,\n    canDrop: canDropToDelivery,\n    handleDropOrder: handleDropToDeliveryNew,\n    orderPopupActions: ordersPopupActions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n};\nInboxOrdersTab.propTypes = {\n  pickupOrders: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n  deliveryOrders: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n  openClientModal: PropTypes.func.isRequired,\n  createOrderStatusSetter: PropTypes.func.isRequired\n};\nInboxOrdersTab.defaultProps = {\n  pickupOrders: [],\n  deliveryOrders: []\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(canDropToPickup, \"canDropToPickup\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/InboxOrdersTab/InboxOrdersTab.js\");\n  reactHotLoader.register(canDropToDelivery, \"canDropToDelivery\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/InboxOrdersTab/InboxOrdersTab.js\");\n  reactHotLoader.register(InboxOrdersTab, \"InboxOrdersTab\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/InboxOrdersTab/InboxOrdersTab.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/RestaurantOrders/components/InboxOrdersTab/InboxOrdersTab.js"],"names":["React","PropTypes","Grid","DropableOrderStatusColumn","orderStatuses","orderDeliveryMethods","orderShape","canDropToPickup","delivery_method","PICKUP","canDropToDelivery","DELIVERY","InboxOrdersTab","pickupOrders","deliveryOrders","openClientModal","createOrderStatusSetter","handleDropToPickupNew","handleDropToDeliveryNew","handleEditOrderClick","ordersPopupActions","name","onClick","IN_PROCESS","REFUND","propTypes","arrayOf","shape","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\n\nimport { DropableOrderStatusColumn } from '../OrderStatusColumn';\nimport { orderStatuses, orderDeliveryMethods } from '../../../../constants';\nimport { orderShape } from '../../../../constants/propTypes';\n\nconst canDropToPickup = ({ delivery_method }) =>\n  delivery_method !== orderDeliveryMethods.PICKUP;\n\nconst canDropToDelivery = ({ delivery_method }) =>\n  delivery_method !== orderDeliveryMethods.DELIVERY;\n\nexport const InboxOrdersTab = ({\n  pickupOrders,\n  deliveryOrders,\n  openClientModal,\n  createOrderStatusSetter,\n  handleDropToPickupNew,\n  handleDropToDeliveryNew,\n  handleEditOrderClick,\n}) => {\n  const ordersPopupActions = [\n    {\n      name: 'Confirm',\n      onClick: createOrderStatusSetter(orderStatuses.IN_PROCESS),\n    },\n    {\n      name: 'Edit',\n      onClick: handleEditOrderClick,\n    },\n    {\n      name: 'Cancel',\n      onClick: createOrderStatusSetter(orderStatuses.REFUND),\n    },\n    {\n      name: 'Client info',\n      onClick: openClientModal,\n    },\n  ];\n\n  return (\n    <Grid container wrap=\"nowrap\" spacing={32}>\n      <DropableOrderStatusColumn\n        name=\"Pickup\"\n        orders={pickupOrders}\n        canDrop={canDropToPickup}\n        handleDropOrder={handleDropToPickupNew}\n        orderPopupActions={ordersPopupActions}\n      />\n\n      <DropableOrderStatusColumn\n        name=\"Delivery\"\n        orders={deliveryOrders}\n        canDrop={canDropToDelivery}\n        handleDropOrder={handleDropToDeliveryNew}\n        orderPopupActions={ordersPopupActions}\n      />\n    </Grid>\n  );\n};\n\nInboxOrdersTab.propTypes = {\n  pickupOrders: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n  deliveryOrders: PropTypes.arrayOf(PropTypes.shape(orderShape)),\n  openClientModal: PropTypes.func.isRequired,\n  createOrderStatusSetter: PropTypes.func.isRequired,\n};\n\nInboxOrdersTab.defaultProps = {\n  pickupOrders: [],\n  deliveryOrders: [],\n};\n"]},"metadata":{},"sourceType":"module"}