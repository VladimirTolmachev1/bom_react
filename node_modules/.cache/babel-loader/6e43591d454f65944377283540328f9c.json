{"ast":null,"code":"import _objectWithoutProperties from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/FormMaskTextField/FormMaskTextField.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { TextField } from '@material-ui/core';\n\nvar TextMaskCustom = function TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, Object.assign({}, other, {\n    ref: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n};\n\nvar FormMaskTextField = function FormMaskTextField(_ref) {\n  var input = _ref.input,\n      onChangeInterseptor = _ref.onChangeInterseptor,\n      mask = _ref.mask,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      rest = _objectWithoutProperties(_ref, [\"input\", \"onChangeInterseptor\", \"mask\", \"meta\"]);\n\n  var hasError = Boolean(touched && error);\n  return React.createElement(TextField, Object.assign({\n    margin: \"dense\",\n    variant: \"outlined\",\n    InputProps: {\n      inputComponent: TextMaskCustom,\n      inputProps: {\n        mask: mask\n      }\n    }\n  }, input, {\n    onChange: function onChange() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var value = args[0].target.value;\n      input.onChange.apply(input, args);\n      onChangeInterseptor && onChangeInterseptor(value);\n    },\n    value: input.value\n  }, rest, {\n    error: hasError,\n    helperText: hasError && error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nFormMaskTextField.propTypes = {\n  mask: PropTypes.array.isRequired,\n  onChangeInterseptor: PropTypes.func,\n  input: PropTypes.object.isRequired\n};\nvar _default = FormMaskTextField;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TextMaskCustom, \"TextMaskCustom\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/FormMaskTextField/FormMaskTextField.js\");\n  reactHotLoader.register(FormMaskTextField, \"FormMaskTextField\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/FormMaskTextField/FormMaskTextField.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/FormMaskTextField/FormMaskTextField.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/FormMaskTextField/FormMaskTextField.js"],"names":["React","PropTypes","MaskedInput","TextField","TextMaskCustom","props","inputRef","other","FormMaskTextField","input","onChangeInterseptor","mask","meta","touched","error","rest","hasError","Boolean","inputComponent","inputProps","args","value","target","onChange","propTypes","array","isRequired","func","object"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAAA,MACtBC,QADsB,GACCD,KADD,CACtBC,QADsB;AAAA,MACTC,KADS,4BACCF,KADD;;AAG9B,SAAO,oBAAC,WAAD,oBAAiBE,KAAjB;AAAwB,IAAA,GAAG,EAAED,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAJD;;AAMA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,OAMpB;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,mBAII,QAJJA,mBAII;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,uBAFJC,IAEI;AAAA,MAFIC,OAEJ,aAFIA,OAEJ;AAAA,MAFaC,KAEb,aAFaA,KAEb;AAAA,MADDC,IACC;;AACJ,MAAMC,QAAQ,GAAGC,OAAO,CAACJ,OAAO,IAAIC,KAAZ,CAAxB;AAEA,SACE,oBAAC,SAAD;AACE,IAAA,MAAM,EAAC,OADT;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,UAAU,EAAE;AACVI,MAAAA,cAAc,EAAEd,cADN;AAEVe,MAAAA,UAAU,EAAE;AACVR,QAAAA,IAAI,EAAJA;AADU;AAFF;AAHd,KASMF,KATN;AAUE,IAAA,QAAQ,EAAE,oBAAa;AAAA,wCAATW,IAAS;AAATA,QAAAA,IAAS;AAAA;;AAAA,UACbC,KADa,GACHD,IAAI,CAAC,CAAD,CAAJ,CAAQE,MADL,CACbD,KADa;AAErBZ,MAAAA,KAAK,CAACc,QAAN,OAAAd,KAAK,EAAaW,IAAb,CAAL;AACAV,MAAAA,mBAAmB,IAAIA,mBAAmB,CAACW,KAAD,CAA1C;AACD,KAdH;AAeE,IAAA,KAAK,EAAEZ,KAAK,CAACY;AAff,KAgBMN,IAhBN;AAiBE,IAAA,KAAK,EAAEC,QAjBT;AAkBE,IAAA,UAAU,EAAEA,QAAQ,IAAIF,KAlB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAsBD,CA/BD;;AAiCAN,iBAAiB,CAACgB,SAAlB,GAA8B;AAC5Bb,EAAAA,IAAI,EAAEV,SAAS,CAACwB,KAAV,CAAgBC,UADM;AAE5BhB,EAAAA,mBAAmB,EAAET,SAAS,CAAC0B,IAFH;AAG5BlB,EAAAA,KAAK,EAAER,SAAS,CAAC2B,MAAV,CAAiBF;AAHI,CAA9B;eAMelB,iB;AAAf;;;;;;;;;;0BA7CMJ,c;0BAMAI,iB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\n\nimport { TextField } from '@material-ui/core';\n\nconst TextMaskCustom = props => {\n  const { inputRef, ...other } = props;\n\n  return <MaskedInput {...other} ref={inputRef} />;\n};\n\nconst FormMaskTextField = ({\n  input,\n  onChangeInterseptor,\n  mask,\n  meta: { touched, error },\n  ...rest\n}) => {\n  const hasError = Boolean(touched && error);\n\n  return (\n    <TextField\n      margin=\"dense\"\n      variant=\"outlined\"\n      InputProps={{\n        inputComponent: TextMaskCustom,\n        inputProps: {\n          mask,\n        },\n      }}\n      {...input}\n      onChange={(...args) => {\n        const { value } = args[0].target;\n        input.onChange(...args);\n        onChangeInterseptor && onChangeInterseptor(value);\n      }}\n      value={input.value}\n      {...rest}\n      error={hasError}\n      helperText={hasError && error}\n    />\n  );\n};\n\nFormMaskTextField.propTypes = {\n  mask: PropTypes.array.isRequired,\n  onChangeInterseptor: PropTypes.func,\n  input: PropTypes.object.isRequired,\n};\n\nexport default FormMaskTextField;\n"]},"metadata":{},"sourceType":"module"}