{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/dish/DishCreationModal.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\n/* eslint-disable react/no-unescaped-entities */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Typography, Grid } from '@material-ui/core';\nimport { BaseDishModal } from './base';\nimport { createDishFromModal, patchDishExtrasFromModal, patchDishSizesFromModal, isDishCreationModalOpenSelector, dishModalActiveStepSelector, managedDishIdSelector, dishModalStepsValues as steps } from '../../../modules/modals/dish';\nvar DISH_CREATED_MSG = React.createElement(Grid, {\n  container: true,\n  justify: \"center\",\n  alignItems: \"center\",\n  direction: \"column\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(Typography, {\n  variant: \"subtitle1\",\n  color: \"primary\",\n  paragraph: true,\n  align: \"center\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"The dish has been created sucessfuly!\"), React.createElement(Typography, {\n  align: \"center\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Now you can customize it by adding extras on \\\"Extras\\\" tab or sizes on \\\"Sizes\\\" tab\"), React.createElement(Typography, {\n  align: \"center\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"For creating new dish click on \\\"Reset\\\" button\"));\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    open: isDishCreationModalOpenSelector(state),\n    activeStep: dishModalActiveStepSelector(state),\n    isDishCreated: !!managedDishIdSelector(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  createDishFromModal: createDishFromModal,\n  patchDishExtrasFromModal: patchDishExtrasFromModal,\n  patchDishSizesFromModal: patchDishSizesFromModal\n};\n\nvar CreateDishModal = function CreateDishModal(_ref) {\n  var createDishFromModal = _ref.createDishFromModal,\n      patchDishExtrasFromModal = _ref.patchDishExtrasFromModal,\n      patchDishSizesFromModal = _ref.patchDishSizesFromModal,\n      isDishCreated = _ref.isDishCreated,\n      activeStep = _ref.activeStep,\n      open = _ref.open;\n  var submitHandler = createDishFromModal;\n  var shouldRenderMsgInsteadInfoForm = isDishCreated && activeStep === steps.INFO;\n\n  if (activeStep === steps.EXTRAS) {\n    submitHandler = patchDishExtrasFromModal;\n  }\n\n  if (activeStep === steps.SIZES) {\n    submitHandler = patchDishSizesFromModal;\n  }\n\n  return React.createElement(BaseDishModal, {\n    open: open,\n    header: \"Add dish\",\n    isExtrasTabDisabled: !isDishCreated,\n    onFormSubmit: submitHandler,\n    customModalBody: shouldRenderMsgInsteadInfoForm && DISH_CREATED_MSG,\n    isSubmitDisabled: shouldRenderMsgInsteadInfoForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  });\n};\n\nvar _default = connect(mapStateToProps, mapDispatchToProps)(CreateDishModal);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DISH_CREATED_MSG, \"DISH_CREATED_MSG\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/dish/DishCreationModal.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/dish/DishCreationModal.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/dish/DishCreationModal.js\");\n  reactHotLoader.register(CreateDishModal, \"CreateDishModal\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/dish/DishCreationModal.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/dish/DishCreationModal.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/scenes/modals/dish/DishCreationModal.js"],"names":["React","connect","Typography","Grid","BaseDishModal","createDishFromModal","patchDishExtrasFromModal","patchDishSizesFromModal","isDishCreationModalOpenSelector","dishModalActiveStepSelector","managedDishIdSelector","dishModalStepsValues","steps","DISH_CREATED_MSG","mapStateToProps","state","open","activeStep","isDishCreated","mapDispatchToProps","CreateDishModal","submitHandler","shouldRenderMsgInsteadInfoForm","INFO","EXTRAS","SIZES"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,mBAAjC;AAEA,SAASC,aAAT,QAA8B,QAA9B;AACA,SACEC,mBADF,EAEEC,wBAFF,EAGEC,uBAHF,EAIEC,+BAJF,EAKEC,2BALF,EAMEC,qBANF,EAOEC,oBAAoB,IAAIC,KAP1B,QAQO,8BARP;AAUA,IAAMC,gBAAgB,GACpB,oBAAC,IAAD;AAAM,EAAA,SAAS,MAAf;AAAgB,EAAA,OAAO,EAAC,QAAxB;AAAiC,EAAA,UAAU,EAAC,QAA5C;AAAqD,EAAA,SAAS,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,UAAD;AAAY,EAAA,OAAO,EAAC,WAApB;AAAgC,EAAA,KAAK,EAAC,SAAtC;AAAgD,EAAA,SAAS,MAAzD;AAA0D,EAAA,KAAK,EAAC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,EAIE,oBAAC,UAAD;AAAY,EAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAJF,EAQE,oBAAC,UAAD;AAAY,EAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDARF,CADF;;AAeA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,IAAI,EAAER,+BAA+B,CAACO,KAAD,CADL;AAEhCE,IAAAA,UAAU,EAAER,2BAA2B,CAACM,KAAD,CAFP;AAGhCG,IAAAA,aAAa,EAAE,CAAC,CAACR,qBAAqB,CAACK,KAAD;AAHN,GAAL;AAAA,CAA7B;;AAMA,IAAMI,kBAAkB,GAAG;AACzBd,EAAAA,mBAAmB,EAAnBA,mBADyB;AAEzBC,EAAAA,wBAAwB,EAAxBA,wBAFyB;AAGzBC,EAAAA,uBAAuB,EAAvBA;AAHyB,CAA3B;;AAMA,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,OAOlB;AAAA,MANJf,mBAMI,QANJA,mBAMI;AAAA,MALJC,wBAKI,QALJA,wBAKI;AAAA,MAJJC,uBAII,QAJJA,uBAII;AAAA,MAHJW,aAGI,QAHJA,aAGI;AAAA,MAFJD,UAEI,QAFJA,UAEI;AAAA,MADJD,IACI,QADJA,IACI;AACJ,MAAIK,aAAa,GAAGhB,mBAApB;AACA,MAAMiB,8BAA8B,GAClCJ,aAAa,IAAID,UAAU,KAAKL,KAAK,CAACW,IADxC;;AAGA,MAAIN,UAAU,KAAKL,KAAK,CAACY,MAAzB,EAAiC;AAC/BH,IAAAA,aAAa,GAAGf,wBAAhB;AACD;;AAED,MAAIW,UAAU,KAAKL,KAAK,CAACa,KAAzB,EAAgC;AAC9BJ,IAAAA,aAAa,GAAGd,uBAAhB;AACD;;AAED,SACE,oBAAC,aAAD;AACE,IAAA,IAAI,EAAES,IADR;AAEE,IAAA,MAAM,EAAC,UAFT;AAGE,IAAA,mBAAmB,EAAE,CAACE,aAHxB;AAIE,IAAA,YAAY,EAAEG,aAJhB;AAKE,IAAA,eAAe,EAAEC,8BAA8B,IAAIT,gBALrD;AAME,IAAA,gBAAgB,EAAES,8BANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CA9BD;;eAgCerB,OAAO,CACpBa,eADoB,EAEpBK,kBAFoB,CAAP,CAGbC,eAHa,C;;AAAf;;;;;;;;;;0BA3DMP,gB;0BAeAC,e;0BAMAK,kB;0BAMAC,e","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Typography, Grid } from '@material-ui/core';\n\nimport { BaseDishModal } from './base';\nimport {\n  createDishFromModal,\n  patchDishExtrasFromModal,\n  patchDishSizesFromModal,\n  isDishCreationModalOpenSelector,\n  dishModalActiveStepSelector,\n  managedDishIdSelector,\n  dishModalStepsValues as steps,\n} from '../../../modules/modals/dish';\n\nconst DISH_CREATED_MSG = (\n  <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\n    <Typography variant=\"subtitle1\" color=\"primary\" paragraph align=\"center\">\n      The dish has been created sucessfuly!\n    </Typography>\n    <Typography align=\"center\">\n      Now you can customize it by adding extras on \"Extras\" tab or sizes on\n      \"Sizes\" tab\n    </Typography>\n    <Typography align=\"center\">\n      For creating new dish click on \"Reset\" button\n    </Typography>\n  </Grid>\n);\n\nconst mapStateToProps = state => ({\n  open: isDishCreationModalOpenSelector(state),\n  activeStep: dishModalActiveStepSelector(state),\n  isDishCreated: !!managedDishIdSelector(state),\n});\n\nconst mapDispatchToProps = {\n  createDishFromModal,\n  patchDishExtrasFromModal,\n  patchDishSizesFromModal,\n};\n\nconst CreateDishModal = ({\n  createDishFromModal,\n  patchDishExtrasFromModal,\n  patchDishSizesFromModal,\n  isDishCreated,\n  activeStep,\n  open,\n}) => {\n  let submitHandler = createDishFromModal;\n  const shouldRenderMsgInsteadInfoForm =\n    isDishCreated && activeStep === steps.INFO;\n\n  if (activeStep === steps.EXTRAS) {\n    submitHandler = patchDishExtrasFromModal;\n  }\n\n  if (activeStep === steps.SIZES) {\n    submitHandler = patchDishSizesFromModal;\n  }\n\n  return (\n    <BaseDishModal\n      open={open}\n      header=\"Add dish\"\n      isExtrasTabDisabled={!isDishCreated}\n      onFormSubmit={submitHandler}\n      customModalBody={shouldRenderMsgInsteadInfoForm && DISH_CREATED_MSG}\n      isSubmitDisabled={shouldRenderMsgInsteadInfoForm}\n    />\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CreateDishModal);\n"]},"metadata":{},"sourceType":"module"}