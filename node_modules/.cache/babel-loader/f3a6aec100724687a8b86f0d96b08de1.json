{"ast":null,"code":"import _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _initialState;\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { CATEGORIES_DROPPABLE, DISHES_DROPPABLE } from './dnd.constants';\nimport { RESET_DND, DND_ITEMS_REORDERED, INITIALIZE_DROPPABLE, SET_DND_STATE_FOR_DROPPABLE, TOGGLE_DND_MODE_FOR_DROPPABLE } from './dnd.types'; // setDndStateForDroppable\n\nvar initialState = (_initialState = {}, _defineProperty(_initialState, CATEGORIES_DROPPABLE, {\n  dragItems: [],\n  isDndMode: false\n}), _defineProperty(_initialState, DISHES_DROPPABLE, {\n  dragItems: [],\n  isDndMode: false\n}), _initialState);\nexport function dndReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case DND_ITEMS_REORDERED:\n      {\n        return _objectSpread({}, state, _defineProperty({}, payload.droppableId, _objectSpread({}, state[payload.droppableId], {\n          dragItems: payload.reorderedItems\n        })));\n      }\n\n    case INITIALIZE_DROPPABLE:\n      {\n        var droppableId = payload.droppableId,\n            dragItems = payload.dragItems,\n            isDndMode = payload.isDndMode;\n        return _objectSpread({}, state, _defineProperty({}, droppableId, {\n          dragItems: dragItems,\n          isDndMode: isDndMode\n        }));\n      }\n\n    case TOGGLE_DND_MODE_FOR_DROPPABLE:\n      {\n        var _droppableId = payload.droppableId;\n        return _objectSpread({}, state, _defineProperty({}, _droppableId, _objectSpread({}, state[_droppableId], {\n          isDndMode: !state[_droppableId].isDndMode\n        })));\n      }\n\n    case SET_DND_STATE_FOR_DROPPABLE:\n      {\n        return _objectSpread({}, state, _defineProperty({}, payload.droppableId, _objectSpread({}, state[payload.droppableId], payload)));\n      }\n\n    case RESET_DND:\n      {\n        return initialState;\n      }\n\n    default:\n      return state;\n  }\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(initialState, \"initialState\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dnd/dnd.reducer.js\");\n  reactHotLoader.register(dndReducer, \"dndReducer\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dnd/dnd.reducer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dnd/dnd.reducer.js"],"names":["CATEGORIES_DROPPABLE","DISHES_DROPPABLE","RESET_DND","DND_ITEMS_REORDERED","INITIALIZE_DROPPABLE","SET_DND_STATE_FOR_DROPPABLE","TOGGLE_DND_MODE_FOR_DROPPABLE","initialState","dragItems","isDndMode","dndReducer","state","type","payload","droppableId","reorderedItems"],"mappings":";;;;;;;;;;AAAA,SAASA,oBAAT,EAA+BC,gBAA/B,QAAuD,iBAAvD;AAEA,SACEC,SADF,EAEEC,mBAFF,EAGEC,oBAHF,EAIEC,2BAJF,EAKEC,6BALF,QAMO,aANP,C,CAQA;;AACA,IAAMC,YAAY,uDACfP,oBADe,EACQ;AACtBQ,EAAAA,SAAS,EAAE,EADW;AAEtBC,EAAAA,SAAS,EAAE;AAFW,CADR,kCAMfR,gBANe,EAMI;AAClBO,EAAAA,SAAS,EAAE,EADO;AAElBC,EAAAA,SAAS,EAAE;AAFO,CANJ,iBAAlB;AAYA,OAAO,SAASC,UAAT,GAA6D;AAAA,MAAzCC,KAAyC,uEAAjCJ,YAAiC;;AAAA;AAAA,MAAjBK,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AAClE,UAAQD,IAAR;AACE,SAAKT,mBAAL;AAA0B;AACxB,iCACKQ,KADL,sBAEGE,OAAO,CAACC,WAFX,oBAGOH,KAAK,CAACE,OAAO,CAACC,WAAT,CAHZ;AAIIN,UAAAA,SAAS,EAAEK,OAAO,CAACE;AAJvB;AAOD;;AAED,SAAKX,oBAAL;AAA2B;AAAA,YACjBU,WADiB,GACqBD,OADrB,CACjBC,WADiB;AAAA,YACJN,SADI,GACqBK,OADrB,CACJL,SADI;AAAA,YACOC,SADP,GACqBI,OADrB,CACOJ,SADP;AAEzB,iCACKE,KADL,sBAEGG,WAFH,EAEiB;AACbN,UAAAA,SAAS,EAATA,SADa;AAEbC,UAAAA,SAAS,EAATA;AAFa,SAFjB;AAOD;;AAED,SAAKH,6BAAL;AAAoC;AAAA,YAC1BQ,YAD0B,GACVD,OADU,CAC1BC,WAD0B;AAElC,iCACKH,KADL,sBAEGG,YAFH,oBAGOH,KAAK,CAACG,YAAD,CAHZ;AAIIL,UAAAA,SAAS,EAAE,CAACE,KAAK,CAACG,YAAD,CAAL,CAAmBL;AAJnC;AAOD;;AAED,SAAKJ,2BAAL;AAAkC;AAChC,iCACKM,KADL,sBAEGE,OAAO,CAACC,WAFX,oBAGOH,KAAK,CAACE,OAAO,CAACC,WAAT,CAHZ,EAIOD,OAJP;AAOD;;AAED,SAAKX,SAAL;AAAgB;AACd,eAAOK,YAAP;AACD;;AAED;AACE,aAAOI,KAAP;AAhDJ;AAkDD;;;;;;;;;;0BA/DKJ,Y;0BAYUG,U","sourcesContent":["import { CATEGORIES_DROPPABLE, DISHES_DROPPABLE } from './dnd.constants';\n\nimport {\n  RESET_DND,\n  DND_ITEMS_REORDERED,\n  INITIALIZE_DROPPABLE,\n  SET_DND_STATE_FOR_DROPPABLE,\n  TOGGLE_DND_MODE_FOR_DROPPABLE,\n} from './dnd.types';\n\n// setDndStateForDroppable\nconst initialState = {\n  [CATEGORIES_DROPPABLE]: {\n    dragItems: [],\n    isDndMode: false,\n  },\n\n  [DISHES_DROPPABLE]: {\n    dragItems: [],\n    isDndMode: false,\n  },\n};\n\nexport function dndReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case DND_ITEMS_REORDERED: {\n      return {\n        ...state,\n        [payload.droppableId]: {\n          ...state[payload.droppableId],\n          dragItems: payload.reorderedItems,\n        },\n      };\n    }\n\n    case INITIALIZE_DROPPABLE: {\n      const { droppableId, dragItems, isDndMode } = payload;\n      return {\n        ...state,\n        [droppableId]: {\n          dragItems,\n          isDndMode,\n        },\n      };\n    }\n\n    case TOGGLE_DND_MODE_FOR_DROPPABLE: {\n      const { droppableId } = payload;\n      return {\n        ...state,\n        [droppableId]: {\n          ...state[droppableId],\n          isDndMode: !state[droppableId].isDndMode,\n        },\n      };\n    }\n\n    case SET_DND_STATE_FOR_DROPPABLE: {\n      return {\n        ...state,\n        [payload.droppableId]: {\n          ...state[payload.droppableId],\n          ...payload,\n        },\n      };\n    }\n\n    case RESET_DND: {\n      return initialState;\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}