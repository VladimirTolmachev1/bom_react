{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppColorPicker/AppColorPicker.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { SketchPicker } from 'react-color';\nimport { autobind } from 'core-decorators';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport './AppColorPicker.scss';\nexport var AppColorPicker = (_class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppColorPicker, _React$Component);\n\n  function AppColorPicker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AppColorPicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppColorPicker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      displayColorPicker: false\n    };\n    return _this;\n  }\n\n  _createClass(AppColorPicker, [{\n    key: \"onSwatchClick\",\n    value: function onSwatchClick() {\n      this.setState({\n        displayColorPicker: !this.state.displayColorPicker\n      });\n    }\n  }, {\n    key: \"onCoverClick\",\n    value: function onCoverClick() {\n      this.setState({\n        displayColorPicker: false\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(_ref) {\n      var hex = _ref.hex;\n      var onChange = this.props.onChange;\n      onChange(hex);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          label = _this$props.label;\n      var colorStyles = {\n        width: '36px',\n        height: '14px',\n        borderRadius: '2px',\n        background: \"\".concat(value)\n      };\n      return React.createElement(FormControlLabel, {\n        className: \"color-picker__label\",\n        label: label,\n        control: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-picker__swatch\",\n          onClick: this.onSwatchClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: colorStyles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        })), this.state.displayColorPicker ? React.createElement(\"div\", {\n          className: \"color-picker__popover\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-picker__cover\",\n          onClick: this.onCoverClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }), React.createElement(SketchPicker, {\n          color: value,\n          onChange: this.onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        })) : null),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return AppColorPicker;\n}(React.Component), (_applyDecoratedDescriptor(_class.prototype, \"onSwatchClick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onSwatchClick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onCoverClick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onCoverClick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onChange\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onChange\"), _class.prototype)), _class);\nAppColorPicker.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  label: PropTypes.string.isRequired\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AppColorPicker, \"AppColorPicker\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppColorPicker/AppColorPicker.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/components/AppColorPicker/AppColorPicker.js"],"names":["React","PropTypes","SketchPicker","autobind","FormControlLabel","AppColorPicker","state","displayColorPicker","setState","hex","onChange","props","value","label","colorStyles","width","height","borderRadius","background","onSwatchClick","onCoverClick","Component","propTypes","func","any","string","isRequired"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAEA,OAAO,uBAAP;AAEA,WAAaC,cAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACEC,KADF,GACU;AACNC,MAAAA,kBAAkB,EAAE;AADd,KADV;AAAA;AAAA;;AAAA;AAAA;AAAA,oCAMkB;AACd,WAAKC,QAAL,CAAc;AAAED,QAAAA,kBAAkB,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAlC,OAAd;AACD;AARH;AAAA;AAAA,mCAWiB;AACb,WAAKC,QAAL,CAAc;AAAED,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACD;AAbH;AAAA;AAAA,mCAgBoB;AAAA,UAAPE,GAAO,QAAPA,GAAO;AAAA,UACRC,QADQ,GACK,KAAKC,KADV,CACRD,QADQ;AAGhBA,MAAAA,QAAQ,CAACD,GAAD,CAAR;AACD;AApBH;AAAA;AAAA,6BAsBW;AAAA,wBACkB,KAAKE,KADvB;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,KADR,eACQA,KADR;AAGP,UAAMC,WAAW,GAAG;AAClBC,QAAAA,KAAK,EAAE,MADW;AAElBC,QAAAA,MAAM,EAAE,MAFU;AAGlBC,QAAAA,YAAY,EAAE,KAHI;AAIlBC,QAAAA,UAAU,YAAKN,KAAL;AAJQ,OAApB;AAOA,aACE,oBAAC,gBAAD;AACE,QAAA,SAAS,EAAC,qBADZ;AAEE,QAAA,KAAK,EAAEC,KAFT;AAGE,QAAA,OAAO,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAsC,UAAA,OAAO,EAAE,KAAKM,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,KAAK,EAAEL,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EAIG,KAAKR,KAAL,CAAWC,kBAAX,GACC;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,qBADZ;AAEE,UAAA,OAAO,EAAE,KAAKa,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAKE,oBAAC,YAAD;AAAc,UAAA,KAAK,EAAER,KAArB;AAA4B,UAAA,QAAQ,EAAE,KAAKF,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CADD,GAQG,IAZN,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAsBD;AAtDH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAoCV,KAAK,CAACqB,SAA1C,kEAKGlB,QALH,uJAUGA,QAVH,kJAeGA,QAfH;AAyDAE,cAAc,CAACiB,SAAf,GAA2B;AACzBZ,EAAAA,QAAQ,EAAET,SAAS,CAACsB,IADK;AAEzBX,EAAAA,KAAK,EAAEX,SAAS,CAACuB,GAFQ;AAGzBX,EAAAA,KAAK,EAAEZ,SAAS,CAACwB,MAAV,CAAiBC;AAHC,CAA3B;;;;;;;;;;0BAzDarB,c","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SketchPicker } from 'react-color';\nimport { autobind } from 'core-decorators';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport './AppColorPicker.scss';\n\nexport class AppColorPicker extends React.Component {\n  state = {\n    displayColorPicker: false,\n  };\n\n  @autobind\n  onSwatchClick() {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  }\n\n  @autobind\n  onCoverClick() {\n    this.setState({ displayColorPicker: false });\n  }\n\n  @autobind\n  onChange({ hex }) {\n    const { onChange } = this.props;\n\n    onChange(hex);\n  }\n\n  render() {\n    const { value, label } = this.props;\n\n    const colorStyles = {\n      width: '36px',\n      height: '14px',\n      borderRadius: '2px',\n      background: `${value}`,\n    };\n\n    return (\n      <FormControlLabel\n        className=\"color-picker__label\"\n        label={label}\n        control={\n          <div>\n            <div className=\"color-picker__swatch\" onClick={this.onSwatchClick}>\n              <div style={colorStyles} />\n            </div>\n            {this.state.displayColorPicker ? (\n              <div className=\"color-picker__popover\">\n                <div\n                  className=\"color-picker__cover\"\n                  onClick={this.onCoverClick}\n                />\n                <SketchPicker color={value} onChange={this.onChange} />\n              </div>\n            ) : null}\n          </div>\n        }\n      />\n    );\n  }\n}\n\nAppColorPicker.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  label: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}