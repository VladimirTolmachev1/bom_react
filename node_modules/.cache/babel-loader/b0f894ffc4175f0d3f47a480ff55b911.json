{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/components/DishItem/DishItem.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\nimport Fab from '@material-ui/core/Fab';\nimport { autobind } from 'core-decorators';\nimport { SizesSelect } from '../../../Checkout/components/SizesSelect';\nimport './DishItem.scss';\nexport var DishItem = (_class =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(DishItem, _PureComponent);\n\n  function DishItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DishItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DishItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      anchorEl: null\n    };\n    return _this;\n  }\n\n  _createClass(DishItem, [{\n    key: \"onClickMenuOpen\",\n    value: function onClickMenuOpen(event) {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    }\n  }, {\n    key: \"onCloseMenuClick\",\n    value: function onCloseMenuClick() {\n      this.setState({\n        anchorEl: null\n      });\n    }\n  }, {\n    key: \"onRemoveClick\",\n    value: function onRemoveClick(event) {\n      var _this$props = this.props,\n          showConfirm = _this$props.showConfirm,\n          removeDish = _this$props.removeDish,\n          id = _this$props.dish.id;\n      showConfirm({\n        data: {\n          body: {\n            id: id\n          }\n        },\n        onSuccess: removeDish,\n        content: 'Are you sure you want to delete dish?'\n      });\n      this.onCloseMenuClick();\n    }\n  }, {\n    key: \"onPublishCLick\",\n    value: function onPublishCLick(event) {\n      var _this$props2 = this.props,\n          showConfirm = _this$props2.showConfirm,\n          publishDishes = _this$props2.publishDishes,\n          id = _this$props2.dish.id;\n      showConfirm({\n        data: {\n          dish_items: [id]\n        },\n        onSuccess: publishDishes,\n        content: 'Are you sure you want to publish dish?'\n      });\n      this.onCloseMenuClick();\n    }\n  }, {\n    key: \"onUnpublishCLick\",\n    value: function onUnpublishCLick(event) {\n      var _this$props3 = this.props,\n          showConfirm = _this$props3.showConfirm,\n          unpublishDishes = _this$props3.unpublishDishes,\n          id = _this$props3.dish.id;\n      showConfirm({\n        data: {\n          dish_items: [id]\n        },\n        onSuccess: unpublishDishes,\n        content: 'Are you sure you want to unpublish dish?'\n      });\n      this.onCloseMenuClick();\n    }\n  }, {\n    key: \"onEditCLick\",\n    value: function onEditCLick(event) {\n      var _this$props4 = this.props,\n          toggleDishModal = _this$props4.toggleDishModal,\n          setDishModalMode = _this$props4.setDishModalMode,\n          id = _this$props4.dish.id;\n      toggleDishModal({\n        open: true,\n        id: id\n      });\n      setDishModalMode('edit');\n      this.onCloseMenuClick();\n    }\n  }, {\n    key: \"onClickMenuItem\",\n    value: function onClickMenuItem(event) {\n      var action = event.target.dataset.action;\n\n      switch (action) {\n        case 'Publish':\n          {\n            return this.onPublishCLick(event);\n          }\n\n        case 'Unpublish':\n          {\n            return this.onUnpublishCLick(event);\n          }\n\n        case 'Edit':\n          {\n            return this.onEditCLick(event);\n          }\n\n        case 'Remove':\n          {\n            return this.onRemoveClick(event);\n          }\n\n        default:\n          {\n            return false;\n          }\n      }\n    }\n  }, {\n    key: \"renderMenuItems\",\n    value: function renderMenuItems() {\n      var _this2 = this;\n\n      var isPublished = this.props.dish.isPublished;\n      return ['Publish', 'Unpublish', 'Edit', 'Remove'].map(function (item, id) {\n        if (isPublished && item === 'Publish') return null;\n        if (!isPublished && item === 'Unpublish') return null;\n        return React.createElement(MenuItem, {\n          key: id,\n          onClick: _this2.onClickMenuItem,\n          \"data-action\": item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, item);\n      });\n    }\n  }, {\n    key: \"onAddDishClick\",\n    value: function onAddDishClick() {\n      var _this$props5 = this.props,\n          addDishInOrder = _this$props5.addDishInOrder,\n          id = _this$props5.dish.id;\n      addDishInOrder(id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var anchorEl = this.state.anchorEl;\n      var _this$props6 = this.props,\n          _this$props6$dish = _this$props6.dish,\n          name = _this$props6$dish.name,\n          description = _this$props6$dish.description,\n          isPublished = _this$props6$dish.isPublished,\n          picture = _this$props6$dish.picture,\n          finalPrice = _this$props6$dish.finalPrice,\n          uuid = _this$props6$dish.uuid,\n          sizes = _this$props6$dish.sizes,\n          selectedSize = _this$props6$dish.selectedSize,\n          setDishSize = _this$props6.setDishSize,\n          mode = _this$props6.mode;\n      var open = Boolean(anchorEl);\n      return React.createElement(Paper, {\n        className: 'dish-list__item',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Menu, Object.assign({\n        id: \"dish-list__item-menu\"\n      }, {\n        open: open,\n        anchorEl: anchorEl\n      }, {\n        onClose: this.onCloseMenuClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), this.renderMenuItems()), React.createElement(\"div\", {\n        className: \"dish-list__item-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: 'dish-list__item-name',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, mode !== 'client' && React.createElement(IconButton, {\n        className: 'dish-list__item-menu-btn',\n        \"aria-label\": \"More\",\n        \"aria-owns\": open ? 'long-menu' : undefined,\n        \"aria-haspopup\": \"true\",\n        onClick: this.onClickMenuOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(MoreVertIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })), name, isPublished && React.createElement(Tooltip, {\n        title: \"Published\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(CheckCircle, {\n        className: 'dish-list__item-published-mark',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(\"strong\", {\n        className: \"dish-list__item-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"$ \", finalPrice, mode === 'client' && React.createElement(Fab, {\n        className: 'dish-list__add-to-cart',\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        onClick: this.onAddDishClick,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(AddShoppingCart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        className: \"dish-list__item-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, description), mode === 'client' && sizes && sizes.length > 0 && React.createElement(SizesSelect, Object.assign({\n        dishUUID: uuid\n      }, {\n        setDishSize: setDishSize\n      }, {\n        options: sizes,\n        value: selectedSize || sizes[0].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }))), picture && React.createElement(\"img\", {\n        src: picture,\n        className: 'dish-list__item-image',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return DishItem;\n}(PureComponent), (_applyDecoratedDescriptor(_class.prototype, \"onClickMenuOpen\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onClickMenuOpen\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onCloseMenuClick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onCloseMenuClick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onRemoveClick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onRemoveClick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onPublishCLick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onPublishCLick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onUnpublishCLick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onUnpublishCLick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onEditCLick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onEditCLick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onClickMenuItem\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onClickMenuItem\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onAddDishClick\", [autobind], Object.getOwnPropertyDescriptor(_class.prototype, \"onAddDishClick\"), _class.prototype)), _class);\nDishItem.propTypes = {\n  removeDish: PropTypes.func,\n  dish: PropTypes.object,\n  setDishModalMode: PropTypes.func,\n  showConfirm: PropTypes.func,\n  toggleDishModal: PropTypes.func,\n  publishDishes: PropTypes.func,\n  addDishInOrder: PropTypes.func,\n  mode: PropTypes.string\n};\nDishItem.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DishItem, \"DishItem\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/components/DishItem/DishItem.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Menu/components/DishItem/DishItem.js"],"names":["React","PureComponent","PropTypes","IconButton","Menu","MenuItem","MoreVertIcon","CheckCircle","Tooltip","Paper","AddShoppingCart","Fab","autobind","SizesSelect","DishItem","state","anchorEl","event","setState","currentTarget","props","showConfirm","removeDish","id","dish","data","body","onSuccess","content","onCloseMenuClick","publishDishes","dish_items","unpublishDishes","toggleDishModal","setDishModalMode","open","action","target","dataset","onPublishCLick","onUnpublishCLick","onEditCLick","onRemoveClick","isPublished","map","item","onClickMenuItem","addDishInOrder","name","description","picture","finalPrice","uuid","sizes","selectedSize","setDishSize","mode","Boolean","renderMenuItems","undefined","onClickMenuOpen","onAddDishClick","length","propTypes","func","object","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\nimport Fab from '@material-ui/core/Fab';\nimport { autobind } from 'core-decorators';\n\nimport { SizesSelect } from '../../../Checkout/components/SizesSelect';\n\nimport './DishItem.scss';\n\nexport class DishItem extends PureComponent {\n    state = {\n        anchorEl: null\n    };\n\n    @autobind\n    onClickMenuOpen(event) {\n        this.setState({ anchorEl: event.currentTarget });\n    }\n\n    @autobind\n    onCloseMenuClick() {\n        this.setState({ anchorEl: null });\n    }\n\n    @autobind\n    onRemoveClick(event) {\n        const {\n            showConfirm,\n            removeDish,\n            dish: { id }\n        } = this.props;\n\n        showConfirm({\n            data: { body: { id } },\n            onSuccess: removeDish,\n            content: 'Are you sure you want to delete dish?'\n        });\n        this.onCloseMenuClick();\n    }\n\n    @autobind\n    onPublishCLick(event) {\n        const {\n            showConfirm,\n            publishDishes,\n            dish: { id }\n        } = this.props;\n\n        showConfirm({\n            data: { dish_items: [id] },\n            onSuccess: publishDishes,\n            content: 'Are you sure you want to publish dish?'\n        });\n        this.onCloseMenuClick();\n    }\n\n    @autobind\n    onUnpublishCLick(event) {\n        const {\n            showConfirm,\n            unpublishDishes,\n            dish: { id }\n        } = this.props;\n\n        showConfirm({\n            data: { dish_items: [id] },\n            onSuccess: unpublishDishes,\n            content: 'Are you sure you want to unpublish dish?'\n        });\n        this.onCloseMenuClick();\n    }\n\n    @autobind\n    onEditCLick(event) {\n        const {\n            toggleDishModal,\n            setDishModalMode,\n            dish: { id }\n        } = this.props;\n\n        toggleDishModal({ open: true, id });\n        setDishModalMode('edit');\n        this.onCloseMenuClick();\n    }\n\n    @autobind\n    onClickMenuItem(event) {\n        const {\n            target: {\n                dataset: { action }\n            }\n        } = event;\n\n        switch (action) {\n            case 'Publish': {\n                return this.onPublishCLick(event);\n            }\n\n            case 'Unpublish': {\n                return this.onUnpublishCLick(event);\n            }\n\n            case 'Edit': {\n                return this.onEditCLick(event);\n            }\n\n            case 'Remove': {\n                return this.onRemoveClick(event);\n            }\n\n            default: {\n                return false;\n            }\n        }\n    }\n\n    renderMenuItems() {\n        const {\n            dish: { isPublished }\n        } = this.props;\n\n        return ['Publish', 'Unpublish', 'Edit', 'Remove'].map((item, id) => {\n            if (isPublished && item === 'Publish') return null;\n            if (!isPublished && item === 'Unpublish') return null;\n\n            return (\n                <MenuItem\n                    key={id}\n                    onClick={this.onClickMenuItem}\n                    data-action={item}\n                >\n                    {item}\n                </MenuItem>\n            );\n        });\n    }\n\n    @autobind\n    onAddDishClick() {\n        const {\n            addDishInOrder,\n            dish: { id }\n        } = this.props;\n\n        addDishInOrder(id);\n    }\n\n    render() {\n        const { anchorEl } = this.state;\n        const {\n            dish: {\n                name,\n                description,\n                isPublished,\n                picture,\n                finalPrice,\n                uuid,\n                sizes,\n                selectedSize\n            },\n            setDishSize,\n            mode\n        } = this.props;\n        const open = Boolean(anchorEl);\n\n        return (\n            <Paper className={'dish-list__item'}>\n                <Menu\n                    id='dish-list__item-menu'\n                    {...{\n                        open,\n                        anchorEl\n                    }}\n                    onClose={this.onCloseMenuClick}\n                >\n                    {this.renderMenuItems()}\n                </Menu>\n                <div className='dish-list__item-info'>\n                    <h3 className={'dish-list__item-name'}>\n                        {mode !== 'client' && (\n                            <IconButton\n                                className={'dish-list__item-menu-btn'}\n                                aria-label='More'\n                                aria-owns={open ? 'long-menu' : undefined}\n                                aria-haspopup='true'\n                                onClick={this.onClickMenuOpen}\n                            >\n                                <MoreVertIcon />\n                            </IconButton>\n                        )}\n                        {name}\n                        {isPublished && (\n                            <Tooltip title='Published'>\n                                <CheckCircle\n                                    className={'dish-list__item-published-mark'}\n                                />\n                            </Tooltip>\n                        )}\n                    </h3>\n                    <strong className='dish-list__item-price'>\n                        $ {finalPrice}\n                        {mode === 'client' && (\n                            <Fab\n                                className={'dish-list__add-to-cart'}\n                                color='primary'\n                                aria-label='Add'\n                                onClick={this.onAddDishClick}\n                                size='small'\n                            >\n                                <AddShoppingCart />\n                            </Fab>\n                        )}\n                    </strong>\n                    <p className='dish-list__item-description'>{description}</p>\n                    {mode === 'client' && sizes && sizes.length > 0 && (\n                        <SizesSelect\n                            dishUUID={uuid}\n                            {...{ setDishSize }}\n                            options={sizes}\n                            value={selectedSize || sizes[0].id}\n                        />\n                    )}\n                </div>\n\n                {picture && (\n                    <img src={picture} className={'dish-list__item-image'} />\n                )}\n            </Paper>\n        );\n    }\n}\n\nDishItem.propTypes = {\n    removeDish: PropTypes.func,\n    dish: PropTypes.object,\n    setDishModalMode: PropTypes.func,\n    showConfirm: PropTypes.func,\n    toggleDishModal: PropTypes.func,\n    publishDishes: PropTypes.func,\n    addDishInOrder: PropTypes.func,\n    mode: PropTypes.string\n};\nDishItem.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}