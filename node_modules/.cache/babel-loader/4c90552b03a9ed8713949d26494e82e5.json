{"ast":null,"code":"(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { ValidationService } from '/services';\nexport var restaurantModalValidation = function restaurantModalValidation(values) {\n  var errors = {};\n  var requiredFields = ['agent_name', 'restaurant_name', 'manager_name', 'manager_email', 'cuisine_type', 'subscription', 'street_address', 'city', 'state', 'zipcode', 'delivery_method'];\n  requiredFields.forEach(function (field) {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (!ValidationService.email(values.manager_email)) {\n    errors.manager_email = 'Invalid email address';\n  }\n\n  if (values.delivery_email && !ValidationService.email(values.delivery_email)) {\n    errors.delivery_email = 'Invalid email address';\n  }\n\n  return errors;\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(restaurantModalValidation, \"restaurantModalValidation\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/RestaurantModal/modules/restaurantsModal.validation.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/RestaurantModal/modules/restaurantsModal.validation.js"],"names":["ValidationService","restaurantModalValidation","values","errors","requiredFields","forEach","field","email","manager_email","delivery_email"],"mappings":";;;;;;AAAA,SAASA,iBAAT,QAAkC,WAAlC;AAEA,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,MAAM,EAAI;AAC/C,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,cAAc,GAAG,CACnB,YADmB,EAEnB,iBAFmB,EAGnB,cAHmB,EAInB,eAJmB,EAKnB,cALmB,EAMnB,cANmB,EAOnB,gBAPmB,EAQnB,MARmB,EASnB,OATmB,EAUnB,SAVmB,EAWnB,iBAXmB,CAAvB;AAcAA,EAAAA,cAAc,CAACC,OAAf,CAAuB,UAAAC,KAAK,EAAI;AAC5B,QAAI,CAACJ,MAAM,CAACI,KAAD,CAAX,EAAoB;AAChBH,MAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,UAAhB;AACH;AAEJ,GALD;;AAOA,MAAI,CAACN,iBAAiB,CAACO,KAAlB,CAAwBL,MAAM,CAACM,aAA/B,CAAL,EAAoD;AAChDL,IAAAA,MAAM,CAACK,aAAP,GAAuB,uBAAvB;AACH;;AAED,MAAIN,MAAM,CAACO,cAAP,IAAyB,CAACT,iBAAiB,CAACO,KAAlB,CAAwBL,MAAM,CAACO,cAA/B,CAA9B,EAA8E;AAC1EN,IAAAA,MAAM,CAACM,cAAP,GAAwB,uBAAxB;AACH;;AAED,SAAON,MAAP;AACH,CAhCM;;;;;;;;;;;;0BAAMF,yB","sourcesContent":["import { ValidationService } from '/services';\n\nexport const restaurantModalValidation = values => {\n    const errors = {};\n    const requiredFields = [\n        'agent_name',\n        'restaurant_name',\n        'manager_name',\n        'manager_email',\n        'cuisine_type',\n        'subscription',\n        'street_address',\n        'city',\n        'state',\n        'zipcode',\n        'delivery_method'\n    ];\n\n    requiredFields.forEach(field => {\n        if (!values[field]) {\n            errors[field] = 'Required';\n        }\n\n    });\n\n    if (!ValidationService.email(values.manager_email)) {\n        errors.manager_email = 'Invalid email address';\n    }\n\n    if (values.delivery_email && !ValidationService.email(values.delivery_email)) {\n        errors.delivery_email = 'Invalid email address';\n    }\n\n    return errors;\n};\n"]},"metadata":{},"sourceType":"module"}