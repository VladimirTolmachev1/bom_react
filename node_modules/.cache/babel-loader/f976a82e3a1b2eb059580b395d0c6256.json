{"ast":null,"code":"import _slicedToArray from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { ReduxCrudService } from '../../services';\nexport var resource = '/dish';\nexport var DISHES__GET_BY_ID_REQUEST = 'DISHES__GET_BY_ID_REQUEST';\nexport var DISHES__GET_BY_ID_SUCCESS = 'DISHES__GET_BY_ID_SUCCESS';\nexport var DISHES__GET_BY_ID_ERROR = 'DISHES__GET_BY_ID_ERROR';\nexport var PUBLISH_DISH_REQUEST = \"\".concat(resource, \"/publish/request\");\nexport var PUBLISH_DISH_SUCCESS = \"\".concat(resource, \"/publish/success\");\nexport var PUBLISH_DISH_ERROR = \"\".concat(resource, \"/publish/error\");\nexport var UNPUBLISH_DISH_REQUEST = \"\".concat(resource, \"/unpublish/request\");\nexport var UNPUBLISH_DISH_SUCCESS = \"\".concat(resource, \"/unpublish/success\");\nexport var UNPUBLISH_DISH_ERROR = \"\".concat(resource, \"/unpublish/error\");\nexport var SET_DISH_FILTERS = \"\".concat(resource, \"/filters/changed\");\nexport var SET_DISH_PAGE = \"\".concat(resource, \"/filters/set-page\");\nexport var CLEANUP_DISH = \"\".concat(resource, \"/creanup\");\nexport var CLEAN_DISH_LIST = \"\".concat(resource, \"/list/clean\");\nexport var CHANGE_DICHES_ORDERING = 'CHANGE_DICHES_ORDERING';\nexport var PATCH_DISH_EXTRAS_REQUEST = 'PATCH_DISH_EXTRAS_REQUEST';\nexport var PATCH_DISH_EXTRAS_SUCCESS = 'PATCH_DISH_EXTRAS_SUCCESS';\nexport var PATCH_DISH_EXTRAS_ERROR = 'PATCH_DISH_EXTRAS_ERROR';\nexport var PATCH_DISH_SIZES_REQUEST = 'PATCH_DISH_SIZES_REQUEST';\nexport var PATCH_DISH_SIZES_SUCCESS = 'PATCH_DISH_SIZES_SUCCESS';\nexport var PATCH_DISH_SIZES_ERROR = 'PATCH_DISH_SIZES_ERROR';\n\nvar _ReduxCrudService$get = ReduxCrudService.getActionCrudTypes(resource),\n    _ReduxCrudService$get2 = _slicedToArray(_ReduxCrudService$get.GET, 3),\n    GET_DISH_LIST_REQUEST = _ReduxCrudService$get2[0],\n    GET_DISH_LIST_SUCCESS = _ReduxCrudService$get2[1],\n    GET_DISH_LIST_ERROR = _ReduxCrudService$get2[2],\n    _ReduxCrudService$get3 = _slicedToArray(_ReduxCrudService$get.POST, 3),\n    CREATE_DISH_REQUEST = _ReduxCrudService$get3[0],\n    CREATE_DISH_SUCCESS = _ReduxCrudService$get3[1],\n    CREATE_DISH_ERROR = _ReduxCrudService$get3[2],\n    _ReduxCrudService$get4 = _slicedToArray(_ReduxCrudService$get.GET_BY_ID, 3),\n    GET_DISH_BY_ID_REQUEST = _ReduxCrudService$get4[0],\n    GET_DISH_BY_ID_SUCCESS = _ReduxCrudService$get4[1],\n    GET_DISH_BY_ID_ERROR = _ReduxCrudService$get4[2],\n    _ReduxCrudService$get5 = _slicedToArray(_ReduxCrudService$get.PATCH, 3),\n    UPDATE_DISH_REQUEST = _ReduxCrudService$get5[0],\n    UPDATE_DISH_SUCCESS = _ReduxCrudService$get5[1],\n    UPDATE_DISH_ERROR = _ReduxCrudService$get5[2],\n    _ReduxCrudService$get6 = _slicedToArray(_ReduxCrudService$get.DELETE, 3),\n    DELETE_DISH_REQUEST = _ReduxCrudService$get6[0],\n    DELETE_DISH_SUCCESS = _ReduxCrudService$get6[1],\n    DELETE_DISH_ERROR = _ReduxCrudService$get6[2];\n\nexport { GET_DISH_LIST_REQUEST, GET_DISH_LIST_SUCCESS, GET_DISH_LIST_ERROR, CREATE_DISH_REQUEST, CREATE_DISH_SUCCESS, CREATE_DISH_ERROR, GET_DISH_BY_ID_REQUEST, GET_DISH_BY_ID_SUCCESS, GET_DISH_BY_ID_ERROR, UPDATE_DISH_REQUEST, UPDATE_DISH_SUCCESS, UPDATE_DISH_ERROR, DELETE_DISH_REQUEST, DELETE_DISH_SUCCESS, DELETE_DISH_ERROR };\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(resource, \"resource\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(DISHES__GET_BY_ID_REQUEST, \"DISHES__GET_BY_ID_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(DISHES__GET_BY_ID_SUCCESS, \"DISHES__GET_BY_ID_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(DISHES__GET_BY_ID_ERROR, \"DISHES__GET_BY_ID_ERROR\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(PUBLISH_DISH_REQUEST, \"PUBLISH_DISH_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(PUBLISH_DISH_SUCCESS, \"PUBLISH_DISH_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(PUBLISH_DISH_ERROR, \"PUBLISH_DISH_ERROR\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(UNPUBLISH_DISH_REQUEST, \"UNPUBLISH_DISH_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(UNPUBLISH_DISH_SUCCESS, \"UNPUBLISH_DISH_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(UNPUBLISH_DISH_ERROR, \"UNPUBLISH_DISH_ERROR\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(SET_DISH_FILTERS, \"SET_DISH_FILTERS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(SET_DISH_PAGE, \"SET_DISH_PAGE\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(CLEANUP_DISH, \"CLEANUP_DISH\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(CLEAN_DISH_LIST, \"CLEAN_DISH_LIST\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(CHANGE_DICHES_ORDERING, \"CHANGE_DICHES_ORDERING\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(PATCH_DISH_EXTRAS_REQUEST, \"PATCH_DISH_EXTRAS_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(PATCH_DISH_EXTRAS_SUCCESS, \"PATCH_DISH_EXTRAS_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(PATCH_DISH_EXTRAS_ERROR, \"PATCH_DISH_EXTRAS_ERROR\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(PATCH_DISH_SIZES_REQUEST, \"PATCH_DISH_SIZES_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(PATCH_DISH_SIZES_SUCCESS, \"PATCH_DISH_SIZES_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(PATCH_DISH_SIZES_ERROR, \"PATCH_DISH_SIZES_ERROR\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(GET_DISH_LIST_REQUEST, \"GET_DISH_LIST_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(GET_DISH_LIST_SUCCESS, \"GET_DISH_LIST_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(GET_DISH_LIST_ERROR, \"GET_DISH_LIST_ERROR\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(CREATE_DISH_REQUEST, \"CREATE_DISH_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(CREATE_DISH_SUCCESS, \"CREATE_DISH_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(CREATE_DISH_ERROR, \"CREATE_DISH_ERROR\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(GET_DISH_BY_ID_REQUEST, \"GET_DISH_BY_ID_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(GET_DISH_BY_ID_SUCCESS, \"GET_DISH_BY_ID_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(GET_DISH_BY_ID_ERROR, \"GET_DISH_BY_ID_ERROR\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(UPDATE_DISH_REQUEST, \"UPDATE_DISH_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(UPDATE_DISH_SUCCESS, \"UPDATE_DISH_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(UPDATE_DISH_ERROR, \"UPDATE_DISH_ERROR\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(DELETE_DISH_REQUEST, \"DELETE_DISH_REQUEST\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(DELETE_DISH_SUCCESS, \"DELETE_DISH_SUCCESS\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n  reactHotLoader.register(DELETE_DISH_ERROR, \"DELETE_DISH_ERROR\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/dishes/dishes.types.js"],"names":["ReduxCrudService","resource","DISHES__GET_BY_ID_REQUEST","DISHES__GET_BY_ID_SUCCESS","DISHES__GET_BY_ID_ERROR","PUBLISH_DISH_REQUEST","PUBLISH_DISH_SUCCESS","PUBLISH_DISH_ERROR","UNPUBLISH_DISH_REQUEST","UNPUBLISH_DISH_SUCCESS","UNPUBLISH_DISH_ERROR","SET_DISH_FILTERS","SET_DISH_PAGE","CLEANUP_DISH","CLEAN_DISH_LIST","CHANGE_DICHES_ORDERING","PATCH_DISH_EXTRAS_REQUEST","PATCH_DISH_EXTRAS_SUCCESS","PATCH_DISH_EXTRAS_ERROR","PATCH_DISH_SIZES_REQUEST","PATCH_DISH_SIZES_SUCCESS","PATCH_DISH_SIZES_ERROR","getActionCrudTypes","GET","GET_DISH_LIST_REQUEST","GET_DISH_LIST_SUCCESS","GET_DISH_LIST_ERROR","POST","CREATE_DISH_REQUEST","CREATE_DISH_SUCCESS","CREATE_DISH_ERROR","GET_BY_ID","GET_DISH_BY_ID_REQUEST","GET_DISH_BY_ID_SUCCESS","GET_DISH_BY_ID_ERROR","PATCH","UPDATE_DISH_REQUEST","UPDATE_DISH_SUCCESS","UPDATE_DISH_ERROR","DELETE","DELETE_DISH_REQUEST","DELETE_DISH_SUCCESS","DELETE_DISH_ERROR"],"mappings":";;;;;;;AAAA,SAASA,gBAAT,QAAiC,gBAAjC;AAEA,OAAO,IAAMC,QAAQ,GAAG,OAAjB;AAEP,OAAO,IAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,IAAMC,oBAAoB,aAAMJ,QAAN,qBAA1B;AACP,OAAO,IAAMK,oBAAoB,aAAML,QAAN,qBAA1B;AACP,OAAO,IAAMM,kBAAkB,aAAMN,QAAN,mBAAxB;AAEP,OAAO,IAAMO,sBAAsB,aAAMP,QAAN,uBAA5B;AACP,OAAO,IAAMQ,sBAAsB,aAAMR,QAAN,uBAA5B;AACP,OAAO,IAAMS,oBAAoB,aAAMT,QAAN,qBAA1B;AAEP,OAAO,IAAMU,gBAAgB,aAAMV,QAAN,qBAAtB;AACP,OAAO,IAAMW,aAAa,aAAMX,QAAN,sBAAnB;AAEP,OAAO,IAAMY,YAAY,aAAMZ,QAAN,aAAlB;AACP,OAAO,IAAMa,eAAe,aAAMb,QAAN,gBAArB;AAEP,OAAO,IAAMc,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,IAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,IAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,IAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;;4BAYHrB,gBAAgB,CAACsB,kBAAjB,CAAoCrB,QAApC,C;kEATFsB,G;IAAMC,qB;IAAuBC,qB;IAAuBC,mB;kEACpDC,I;IAAOC,mB;IAAqBC,mB;IAAqBC,iB;kEACjDC,S;IACEC,sB;IACAC,sB;IACAC,oB;kEAEFC,K;IAAQC,mB;IAAqBC,mB;IAAqBC,iB;kEAClDC,M;IAASC,mB;IAAqBC,mB;IAAqBC,iB;;;;;;;;;;;;0BAvCxCzC,Q;0BAEAC,yB;0BACAC,yB;0BACAC,uB;0BAEAC,oB;0BACAC,oB;0BACAC,kB;0BAEAC,sB;0BACAC,sB;0BACAC,oB;0BAEAC,gB;0BACAC,a;0BAEAC,Y;0BACAC,e;0BAEAC,sB;0BAEAC,yB;0BACAC,yB;0BACAC,uB;0BAEAC,wB;0BACAC,wB;0BACAC,sB;0BAGLG,qB;0BAAuBC,qB;0BAAuBC,mB;0BAC7CE,mB;0BAAqBC,mB;0BAAqBC,iB;0BAE/CE,sB;0BACAC,sB;0BACAC,oB;0BAEME,mB;0BAAqBC,mB;0BAAqBC,iB;0BACzCE,mB;0BAAqBC,mB;0BAAqBC,iB","sourcesContent":["import { ReduxCrudService } from '../../services';\n\nexport const resource = '/dish';\n\nexport const DISHES__GET_BY_ID_REQUEST = 'DISHES__GET_BY_ID_REQUEST';\nexport const DISHES__GET_BY_ID_SUCCESS = 'DISHES__GET_BY_ID_SUCCESS';\nexport const DISHES__GET_BY_ID_ERROR = 'DISHES__GET_BY_ID_ERROR';\n\nexport const PUBLISH_DISH_REQUEST = `${resource}/publish/request`;\nexport const PUBLISH_DISH_SUCCESS = `${resource}/publish/success`;\nexport const PUBLISH_DISH_ERROR = `${resource}/publish/error`;\n\nexport const UNPUBLISH_DISH_REQUEST = `${resource}/unpublish/request`;\nexport const UNPUBLISH_DISH_SUCCESS = `${resource}/unpublish/success`;\nexport const UNPUBLISH_DISH_ERROR = `${resource}/unpublish/error`;\n\nexport const SET_DISH_FILTERS = `${resource}/filters/changed`;\nexport const SET_DISH_PAGE = `${resource}/filters/set-page`;\n\nexport const CLEANUP_DISH = `${resource}/creanup`;\nexport const CLEAN_DISH_LIST = `${resource}/list/clean`;\n\nexport const CHANGE_DICHES_ORDERING = 'CHANGE_DICHES_ORDERING';\n\nexport const PATCH_DISH_EXTRAS_REQUEST = 'PATCH_DISH_EXTRAS_REQUEST';\nexport const PATCH_DISH_EXTRAS_SUCCESS = 'PATCH_DISH_EXTRAS_SUCCESS';\nexport const PATCH_DISH_EXTRAS_ERROR = 'PATCH_DISH_EXTRAS_ERROR';\n\nexport const PATCH_DISH_SIZES_REQUEST = 'PATCH_DISH_SIZES_REQUEST';\nexport const PATCH_DISH_SIZES_SUCCESS = 'PATCH_DISH_SIZES_SUCCESS';\nexport const PATCH_DISH_SIZES_ERROR = 'PATCH_DISH_SIZES_ERROR';\n\nexport const {\n  GET: [GET_DISH_LIST_REQUEST, GET_DISH_LIST_SUCCESS, GET_DISH_LIST_ERROR],\n  POST: [CREATE_DISH_REQUEST, CREATE_DISH_SUCCESS, CREATE_DISH_ERROR],\n  GET_BY_ID: [\n    GET_DISH_BY_ID_REQUEST,\n    GET_DISH_BY_ID_SUCCESS,\n    GET_DISH_BY_ID_ERROR,\n  ],\n  PATCH: [UPDATE_DISH_REQUEST, UPDATE_DISH_SUCCESS, UPDATE_DISH_ERROR],\n  DELETE: [DELETE_DISH_REQUEST, DELETE_DISH_SUCCESS, DELETE_DISH_ERROR],\n} = ReduxCrudService.getActionCrudTypes(resource);\n"]},"metadata":{},"sourceType":"module"}