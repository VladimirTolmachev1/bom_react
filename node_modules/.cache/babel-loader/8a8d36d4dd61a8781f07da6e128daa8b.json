{"ast":null,"code":"import _toConsumableArray from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { GET_CATEGORY_LIST_REQUEST, GET_CATEGORY_LIST_SUCCESS, GET_CATEGORY_LIST_ERROR, CREATE_CATEGORY_REQUEST, CREATE_CATEGORY_SUCCESS, CREATE_CATEGORY_ERROR, GET_CATEGORY_BY_ID_REQUEST, GET_CATEGORY_BY_ID_SUCCESS, GET_CATEGORY_BY_ID_ERROR, UPDATE_CATEGORY_SUCCESS, UPDATE_CATEGORY_ERROR, DELETE_CATEGORY_REQUEST, DELETE_CATEGORY_SUCCESS, DELETE_CATEGORY_ERROR, PATCH_CATEGORY_EXTRAS_REQUEST, PATCH_CATEGORY_EXTRAS_SUCCESS, PATCH_CATEGORY_EXTRAS_ERROR, SET_CATEGORY_FILTERS, CLEANUP_CATEGORIES, CHANGE_CATEGORIES_ORDERING, CLEAR_MANAGED_CATEGORY } from './categories.types';\n\nvar getInitialState = function getInitialState() {\n  return {\n    loading: false,\n    error: null,\n    filters: {\n      restaurant_id: ''\n    },\n    data: [],\n    count: 0,\n    managedCategory: {}\n  };\n};\n\nvar changeCategoriesOrdering = function changeCategoriesOrdering(categories, idsWithOrder) {\n  return categories.map(function (item) {\n    var targetObj = idsWithOrder.find(function (_ref) {\n      var id = _ref.id;\n      return id === item.id;\n    });\n    if (!targetObj) return item;\n    return _objectSpread({}, item, {\n      order: targetObj.order\n    });\n  }).sort(function (c1, c2) {\n    return +c1.order - +c2.order;\n  });\n};\n\nexport function categoriesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getInitialState();\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case GET_CATEGORY_BY_ID_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loading: false,\n          managedCategory: action.response\n        });\n      }\n\n    case PATCH_CATEGORY_EXTRAS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loading: false,\n          managedCategory: _objectSpread({}, state.managedCategory, {\n            extras: action.payload.extras || [],\n            extra_lists: action.payload.extra_lists || []\n          })\n        });\n      }\n\n    case CLEAR_MANAGED_CATEGORY:\n      {\n        return _objectSpread({}, state, {\n          managedCategory: {}\n        });\n      }\n\n    case CREATE_CATEGORY_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          count: state.count + 1,\n          data: _toConsumableArray(state.data).concat([action.payload])\n        });\n      }\n\n    case PATCH_CATEGORY_EXTRAS_REQUEST:\n    case GET_CATEGORY_BY_ID_REQUEST:\n    case GET_CATEGORY_LIST_REQUEST:\n    case DELETE_CATEGORY_REQUEST:\n    case CREATE_CATEGORY_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case CHANGE_CATEGORIES_ORDERING:\n      {\n        return _objectSpread({}, state, {\n          data: changeCategoriesOrdering(state.data, action.payload.idsWithOrder)\n        });\n      }\n\n    case GET_CATEGORY_LIST_SUCCESS:\n      return _objectSpread({}, state, {\n        count: Number(action.response.count),\n        data: action.response.data,\n        loading: false\n      });\n\n    case GET_CATEGORY_LIST_ERROR:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.error\n      });\n\n    case SET_CATEGORY_FILTERS:\n      return _objectSpread({}, state, {\n        filters: _objectSpread({}, state.filters, action.filters)\n      });\n\n    case UPDATE_CATEGORY_SUCCESS:\n      {\n        var updatedCategory = action.payload;\n        return _objectSpread({}, state, {\n          loading: false,\n          data: state.data.map(function (category) {\n            return category.id === updatedCategory.id ? updatedCategory : category;\n          })\n        });\n      }\n\n    case DELETE_CATEGORY_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          count: state.count - 1,\n          loading: false,\n          data: state.data.filter(function (_ref2) {\n            var id = _ref2.id;\n            return id !== action.body.id;\n          })\n        });\n      }\n\n    case CLEANUP_CATEGORIES:\n      {\n        return getInitialState();\n      }\n\n    case PATCH_CATEGORY_EXTRAS_ERROR:\n    case GET_CATEGORY_BY_ID_ERROR:\n    case CREATE_CATEGORY_ERROR:\n    case DELETE_CATEGORY_ERROR:\n    case UPDATE_CATEGORY_ERROR:\n      {\n        return _objectSpread({}, state, {\n          loading: false\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(getInitialState, \"getInitialState\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.reducer.js\");\n  reactHotLoader.register(changeCategoriesOrdering, \"changeCategoriesOrdering\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.reducer.js\");\n  reactHotLoader.register(categoriesReducer, \"categoriesReducer\", \"/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.reducer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus.loc/frontend/src/modules/categories/categories.reducer.js"],"names":["GET_CATEGORY_LIST_REQUEST","GET_CATEGORY_LIST_SUCCESS","GET_CATEGORY_LIST_ERROR","CREATE_CATEGORY_REQUEST","CREATE_CATEGORY_SUCCESS","CREATE_CATEGORY_ERROR","GET_CATEGORY_BY_ID_REQUEST","GET_CATEGORY_BY_ID_SUCCESS","GET_CATEGORY_BY_ID_ERROR","UPDATE_CATEGORY_SUCCESS","UPDATE_CATEGORY_ERROR","DELETE_CATEGORY_REQUEST","DELETE_CATEGORY_SUCCESS","DELETE_CATEGORY_ERROR","PATCH_CATEGORY_EXTRAS_REQUEST","PATCH_CATEGORY_EXTRAS_SUCCESS","PATCH_CATEGORY_EXTRAS_ERROR","SET_CATEGORY_FILTERS","CLEANUP_CATEGORIES","CHANGE_CATEGORIES_ORDERING","CLEAR_MANAGED_CATEGORY","getInitialState","loading","error","filters","restaurant_id","data","count","managedCategory","changeCategoriesOrdering","categories","idsWithOrder","map","item","targetObj","find","id","order","sort","c1","c2","categoriesReducer","state","action","type","response","extras","payload","extra_lists","Number","updatedCategory","category","filter","body"],"mappings":"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","sourcesContent":["import {\n  GET_CATEGORY_LIST_REQUEST,\n  GET_CATEGORY_LIST_SUCCESS,\n  GET_CATEGORY_LIST_ERROR,\n  CREATE_CATEGORY_REQUEST,\n  CREATE_CATEGORY_SUCCESS,\n  CREATE_CATEGORY_ERROR,\n  GET_CATEGORY_BY_ID_REQUEST,\n  GET_CATEGORY_BY_ID_SUCCESS,\n  GET_CATEGORY_BY_ID_ERROR,\n  UPDATE_CATEGORY_SUCCESS,\n  UPDATE_CATEGORY_ERROR,\n  DELETE_CATEGORY_REQUEST,\n  DELETE_CATEGORY_SUCCESS,\n  DELETE_CATEGORY_ERROR,\n  PATCH_CATEGORY_EXTRAS_REQUEST,\n  PATCH_CATEGORY_EXTRAS_SUCCESS,\n  PATCH_CATEGORY_EXTRAS_ERROR,\n  SET_CATEGORY_FILTERS,\n  CLEANUP_CATEGORIES,\n  CHANGE_CATEGORIES_ORDERING,\n  CLEAR_MANAGED_CATEGORY,\n} from './categories.types';\n\nconst getInitialState = () => ({\n  loading: false,\n  error: null,\n  filters: {\n    restaurant_id: '',\n  },\n  data: [],\n  count: 0,\n  managedCategory: {},\n});\n\nconst changeCategoriesOrdering = (categories, idsWithOrder) =>\n  categories\n    .map(item => {\n      const targetObj = idsWithOrder.find(({ id }) => id === item.id);\n\n      if (!targetObj) return item;\n\n      return {\n        ...item,\n        order: targetObj.order,\n      };\n    })\n    .sort((c1, c2) => +c1.order - +c2.order);\n\nexport function categoriesReducer(state = getInitialState(), action = {}) {\n  switch (action.type) {\n    case GET_CATEGORY_BY_ID_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        managedCategory: action.response,\n      };\n    }\n\n    case PATCH_CATEGORY_EXTRAS_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        managedCategory: {\n          ...state.managedCategory,\n          extras: action.payload.extras || [],\n          extra_lists: action.payload.extra_lists || [],\n        },\n      };\n    }\n\n    case CLEAR_MANAGED_CATEGORY: {\n      return {\n        ...state,\n        managedCategory: {},\n      };\n    }\n\n    case CREATE_CATEGORY_SUCCESS: {\n      return {\n        ...state,\n        count: state.count + 1,\n        data: [...state.data, action.payload],\n      };\n    }\n\n    case PATCH_CATEGORY_EXTRAS_REQUEST:\n    case GET_CATEGORY_BY_ID_REQUEST:\n    case GET_CATEGORY_LIST_REQUEST:\n    case DELETE_CATEGORY_REQUEST:\n    case CREATE_CATEGORY_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case CHANGE_CATEGORIES_ORDERING: {\n      return {\n        ...state,\n        data: changeCategoriesOrdering(state.data, action.payload.idsWithOrder),\n      };\n    }\n\n    case GET_CATEGORY_LIST_SUCCESS:\n      return {\n        ...state,\n        count: Number(action.response.count),\n        data: action.response.data,\n        loading: false,\n      };\n\n    case GET_CATEGORY_LIST_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n\n    case SET_CATEGORY_FILTERS:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          ...action.filters,\n        },\n      };\n\n    case UPDATE_CATEGORY_SUCCESS: {\n      const updatedCategory = action.payload;\n      return {\n        ...state,\n        loading: false,\n        data: state.data.map(category =>\n          category.id === updatedCategory.id ? updatedCategory : category,\n        ),\n      };\n    }\n\n    case DELETE_CATEGORY_SUCCESS: {\n      return {\n        ...state,\n        count: state.count - 1,\n        loading: false,\n        data: state.data.filter(({ id }) => id !== action.body.id),\n      };\n    }\n\n    case CLEANUP_CATEGORIES: {\n      return getInitialState();\n    }\n\n    case PATCH_CATEGORY_EXTRAS_ERROR:\n    case GET_CATEGORY_BY_ID_ERROR:\n    case CREATE_CATEGORY_ERROR:\n    case DELETE_CATEGORY_ERROR:\n    case UPDATE_CATEGORY_ERROR: {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}