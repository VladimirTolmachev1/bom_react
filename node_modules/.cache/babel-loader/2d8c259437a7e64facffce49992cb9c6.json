{"ast":null,"code":"import _classCallCheck from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/home/vladimir/workspace/bestonlinemenus-front.loc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _class,\n    _class2,\n    _jsxFileName = \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Agents/AgentsAutoComplete.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { AppCleanHOC, AppAutoComplete } from '/components';\nimport { agentsFiltersSelector, agentsListSelector, getAgents, updateFilters, abortPageRequests, agentsLoadingSelector } from './modules';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    agents: agentsListSelector(state),\n    filters: agentsFiltersSelector(state),\n    loading: agentsLoadingSelector(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  getAgents: getAgents,\n  updateFilters: updateFilters,\n  abortPageRequests: abortPageRequests\n};\nvar AgentsAutoComplete = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = AppCleanHOC(_class = (_class2 =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AgentsAutoComplete, _PureComponent);\n\n  function AgentsAutoComplete() {\n    _classCallCheck(this, AgentsAutoComplete);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AgentsAutoComplete).apply(this, arguments));\n  }\n\n  _createClass(AgentsAutoComplete, [{\n    key: \"onInputChange\",\n    value: function onInputChange(name) {\n      var getAgents = this.props.getAgents;\n      getAgents({\n        body: {\n          name: name\n        }\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(_ref) {\n      var agent_name = _ref.label;\n      var onChange = this.props.onChange;\n      onChange({\n        agent_name: agent_name\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var getAgents = this.props.getAgents;\n      getAgents({\n        body: {}\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var compareKey = this.props.compareKey;\n      var _this$props = this.props,\n          agents = _this$props.agents,\n          value = _this$props.value,\n          loading = _this$props.loading;\n      return React.createElement(AppAutoComplete, {\n        loading: loading,\n        onInputChange: this.onInputChange,\n        options: agents,\n        compareKey: compareKey,\n        value: value,\n        onChange: this.onChange,\n        placeholder: \"Sales Agent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return AgentsAutoComplete;\n}(PureComponent), (_applyDecoratedDescriptor(_class2.prototype, \"onInputChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onInputChange\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"onChange\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"onChange\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"componentDidMount\", [autobind], Object.getOwnPropertyDescriptor(_class2.prototype, \"componentDidMount\"), _class2.prototype)), _class2)) || _class) || _class);\nexport { AgentsAutoComplete as default };\nAgentsAutoComplete.propTypes = {\n  agents: PropTypes.array,\n  loading: PropTypes.bool,\n  compareKey: PropTypes.string,\n  onChange: PropTypes.func,\n  theme: PropTypes.object\n};\nAgentsAutoComplete.defaultProps = {\n  compareKey: 'label'\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Agents/AgentsAutoComplete.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Agents/AgentsAutoComplete.js\");\n  reactHotLoader.register(AgentsAutoComplete, \"AgentsAutoComplete\", \"/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Agents/AgentsAutoComplete.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/home/vladimir/workspace/bestonlinemenus-front.loc/src/scenes/Agents/AgentsAutoComplete.js"],"names":["React","PureComponent","PropTypes","connect","autobind","AppCleanHOC","AppAutoComplete","agentsFiltersSelector","agentsListSelector","getAgents","updateFilters","abortPageRequests","agentsLoadingSelector","mapStateToProps","state","agents","filters","loading","mapDispatchToProps","AgentsAutoComplete","name","props","body","agent_name","label","onChange","compareKey","value","onInputChange","propTypes","array","bool","string","func","theme","object","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,aAA7C;AAEA,SACIC,qBADJ,EAEIC,kBAFJ,EAGIC,SAHJ,EAIIC,aAJJ,EAKIC,iBALJ,EAMIC,qBANJ,QAOO,WAPP;;AASA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BC,IAAAA,MAAM,EAAEP,kBAAkB,CAACM,KAAD,CADI;AAE9BE,IAAAA,OAAO,EAAET,qBAAqB,CAACO,KAAD,CAFA;AAG9BG,IAAAA,OAAO,EAAEL,qBAAqB,CAACE,KAAD;AAHA,GAAL;AAAA,CAA7B;;AAMA,IAAMI,kBAAkB,GAAG;AACvBT,EAAAA,SAAS,EAATA,SADuB;AAEvBC,EAAAA,aAAa,EAAbA,aAFuB;AAGvBC,EAAAA,iBAAiB,EAAjBA;AAHuB,CAA3B;IASMQ,kB,WAHUhB,OAAO,CAACU,eAAD,EAAkBK,kBAAlB,C,gBAEtBb,W;;;;;;;;;;;;;kCAIiBe,I,EAAM;AAAA,UACTX,SADS,GACI,KAAKY,KADT,CACTZ,SADS;AAEhBA,MAAAA,SAAS,CAAC;AAACa,QAAAA,IAAI,EAAE;AAACF,UAAAA,IAAI,EAAJA;AAAD;AAAP,OAAD,CAAT;AACH;;;mCAG6B;AAAA,UAAbG,UAAa,QAApBC,KAAoB;AAAA,UACnBC,QADmB,GACP,KAAKJ,KADE,CACnBI,QADmB;AAE1BA,MAAAA,QAAQ,CAAC;AAACF,QAAAA,UAAU,EAAVA;AAAD,OAAD,CAAR;AACH;;;wCAGmB;AAAA,UACTd,SADS,GACI,KAAKY,KADT,CACTZ,SADS;AAEhBA,MAAAA,SAAS,CAAC;AAACa,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAT;AACH;;;6BAEQ;AAAA,UACEI,UADF,GACgB,KAAKL,KADrB,CACEK,UADF;AAAA,wBAG4B,KAAKL,KAHjC;AAAA,UAGEN,MAHF,eAGEA,MAHF;AAAA,UAGUY,KAHV,eAGUA,KAHV;AAAA,UAGiBV,OAHjB,eAGiBA,OAHjB;AAIL,aACI,oBAAC,eAAD;AACI,QAAA,OAAO,EAAGA,OADd;AAEI,QAAA,aAAa,EAAG,KAAKW,aAFzB;AAGI,QAAA,OAAO,EAAGb,MAHd;AAII,QAAA,UAAU,EAAGW,UAJjB;AAKI,QAAA,KAAK,EAAGC,KALZ;AAMI,QAAA,QAAQ,EAAG,KAAKF,QANpB;AAOI,QAAA,WAAW,EAAC,aAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAWH;;;;;;;;;;;EAnC4BxB,a,mEAE5BG,Q,sJAMAA,Q,0JAMAA,Q;SAdCe,kB;AAsCNA,kBAAkB,CAACU,SAAnB,GAA+B;AAC3Bd,EAAAA,MAAM,EAAEb,SAAS,CAAC4B,KADS;AAE3Bb,EAAAA,OAAO,EAAEf,SAAS,CAAC6B,IAFQ;AAG3BL,EAAAA,UAAU,EAAExB,SAAS,CAAC8B,MAHK;AAI3BP,EAAAA,QAAQ,EAAEvB,SAAS,CAAC+B,IAJO;AAK3BC,EAAAA,KAAK,EAAEhC,SAAS,CAACiC;AALU,CAA/B;AAQAhB,kBAAkB,CAACiB,YAAnB,GAAkC;AAC9BV,EAAAA,UAAU,EAAE;AADkB,CAAlC;;;;;;;;;;;;0BA7DMb,e;0BAMAK,kB;0BASAC,kB","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { autobind } from 'core-decorators';\nimport { AppCleanHOC, AppAutoComplete } from '/components';\n\nimport {\n    agentsFiltersSelector,\n    agentsListSelector,\n    getAgents,\n    updateFilters,\n    abortPageRequests,\n    agentsLoadingSelector\n} from './modules';\n\nconst mapStateToProps = state => ({\n    agents: agentsListSelector(state),\n    filters: agentsFiltersSelector(state),\n    loading: agentsLoadingSelector(state)\n});\n\nconst mapDispatchToProps = {\n    getAgents,\n    updateFilters,\n    abortPageRequests\n};\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n\n@AppCleanHOC\nclass AgentsAutoComplete extends PureComponent {\n\n    @autobind\n    onInputChange(name) {\n        const {getAgents} = this.props;\n        getAgents({body: {name}})\n    }\n\n    @autobind\n    onChange({label: agent_name}) {\n        const {onChange} = this.props;\n        onChange({agent_name});\n    };\n\n    @autobind\n    componentDidMount() {\n        const {getAgents} = this.props;\n        getAgents({body: {}});\n    }\n\n    render() {\n        const {compareKey} = this.props;\n\n        const {agents, value, loading} = this.props;\n        return (\n            <AppAutoComplete\n                loading={ loading }\n                onInputChange={ this.onInputChange }\n                options={ agents }\n                compareKey={ compareKey }\n                value={ value }\n                onChange={ this.onChange }\n                placeholder=\"Sales Agent\"\n            />\n        );\n    }\n}\n\nAgentsAutoComplete.propTypes = {\n    agents: PropTypes.array,\n    loading: PropTypes.bool,\n    compareKey: PropTypes.string,\n    onChange: PropTypes.func,\n    theme: PropTypes.object\n};\n\nAgentsAutoComplete.defaultProps = {\n    compareKey: 'label'\n};\n"]},"metadata":{},"sourceType":"module"}